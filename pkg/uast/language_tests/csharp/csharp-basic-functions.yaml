suite: basic-functions
name: csharp-basic-functions

parse_cases:
  - name: simple_function
    input: |
      using System;
      
      public class Program
      {
          public static string Hello()
          {
              return "Hello, World!";
          }
      }
    output:
      type: "File"
      children:
        - type: "Import"
          roles: ["Import"]
        - type: "Class"
          roles: ["Class", "Declaration"]
          props:
            name: "Program"
          children:
            - type: "Method"
              roles: ["Method", "Declaration"]
              props:
                name: "Hello"
              children:
                - type: "Block"
                  children:
                    - type: "Return"
                      children:
                        - type: "Literal"
                          roles: ["Literal"]
                          token: '"Hello, World!"'

  - name: function_with_params
    input: |
      public class Calculator
      {
          public int Add(int a, int b)
          {
              return a + b;
          }
      }
    output:
      type: "File"
      children:
        - type: "Class"
          roles: ["Class", "Declaration"]
          props:
            name: "Calculator"
          children:
            - type: "Method"
              roles: ["Method", "Declaration"]
              props:
                name: "Add"
              children:
                - type: "ParameterList"
                  children:
                    - type: "Parameter"
                      roles: ["Parameter", "Declaration"]
                      props:
                        name: "a"
                    - type: "Parameter"
                      roles: ["Parameter", "Declaration"]
                      props:
                        name: "b"
                - type: "Block"
                  children:
                    - type: "Return"
                      children:
                        - type: "BinaryExpression"
                          roles: ["Binary"]
                          children:
                            - type: "Identifier"
                              roles: ["Name"]
                              props:
                                name: "a"
                            - type: "Identifier"
                              roles: ["Name"]
                              props:
                                name: "b"

query_cases:
  - name: find_methods
    input: |
      public class Test
      {
          public void Method1() {}
          public void Method2() {}
      }
    query: "filter(.type == \"Method\")"
    output:
      results:
        - type: "Method"
          roles: ["Method", "Declaration"]
          props:
            name: "Method1"
        - type: "Method"
          roles: ["Method", "Declaration"]
          props:
            name: "Method2"

  - name: find_method_names
    input: |
      public class Test
      {
          public void MyMethod() {}
      }
    query: "filter(.type == \"Method\") |> map(.name)"
    output:
      results:
        - token: "MyMethod" 