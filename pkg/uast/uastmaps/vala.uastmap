access_modifier <- (access_modifier) => uast(
    type: "If"
)

addressof_expression <- (addressof_expression) => uast(
    type: "Synthetic"
)

argument <- (argument) => uast(
    type: "Synthetic"
)

arithmetic_expression <- (arithmetic_expression) => uast(
    type: "Synthetic"
)

arithmetic_negation_expression <- (arithmetic_negation_expression) => uast(
    type: "Synthetic"
)

array_creation_expression <- (array_creation_expression) => uast(
    type: "Synthetic"
)

array_size <- (array_size) => uast(
    type: "Synthetic"
)

array_type <- (array_type) => uast(
    type: "Synthetic"
)

assignment <- (assignment) => uast(
    type: "Assignment",
    roles: "Assignment"
)

assignment_expression <- (assignment_expression) => uast(
    type: "Assignment",
    roles: "Assignment"
)

attribute <- (attribute) => uast(
    type: "Attribute",
    roles: "Attribute"
)

attribute_argument <- (attribute_argument) => uast(
    type: "Attribute",
    roles: "Attribute"
)

bitshift_expression <- (bitshift_expression) => uast(
    type: "If"
)

bitwise_and_expression <- (bitwise_and_expression) => uast(
    type: "Synthetic"
)

bitwise_negation_expression <- (bitwise_negation_expression) => uast(
    type: "Synthetic"
)

bitwise_or_expression <- (bitwise_or_expression) => uast(
    type: "Synthetic"
)

bitwise_xor_expression <- (bitwise_xor_expression) => uast(
    type: "Synthetic"
)

block <- (block) => uast(
    type: "Block",
    roles: "Body"
)

boolean <- (boolean) => uast(
    type: "Synthetic"
)

break_statement <- (break_statement) => uast(
    type: "Break",
    roles: "Break"
)

catch_clause <- (catch_clause) => uast(
    type: "Catch",
    roles: "Catch"
)

class_declaration <- (class_declaration) => uast(
    type: "Class",
    roles: "Class", "Declaration"
)

class_member <- (class_member) => uast(
    type: "Class",
    roles: "Class", "Declaration"
)

constant_declaration <- (constant_declaration) => uast(
    type: "Synthetic"
)

constructor_declaration <- (constructor_declaration) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
)

constructor_declaration_modifier <- (constructor_declaration_modifier) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
)

continue_statement <- (continue_statement) => uast(
    type: "Continue",
    roles: "Continue"
)

creation_method_declaration <- (creation_method_declaration) => uast(
    type: "Method",
    roles: "Function", "Declaration", "Member"
)

delegate_declaration <- (delegate_declaration) => uast(
    type: "Synthetic"
)

delegate_declaration_modifier <- (delegate_declaration_modifier) => uast(
    type: "If"
)

delete_statement <- (delete_statement) => uast(
    type: "Synthetic"
)

dereferencing_expression <- (dereferencing_expression) => uast(
    type: "Synthetic"
)

destructor_declaration <- (destructor_declaration) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
)

do_statement <- (do_statement) => uast(
    type: "Synthetic"
)

dynamic_cast_expression <- (dynamic_cast_expression) => uast(
    type: "Cast"
)

element_access <- (element_access) => uast(
    type: "Synthetic"
)

element_access_expression <- (element_access_expression) => uast(
    type: "Synthetic"
)

elif_directive <- (elif_directive) => uast(
    type: "If",
    children: "identifier", "literal"
)

else_directive <- (else_directive) => uast(
    type: "Synthetic"
)

else_statement <- (else_statement) => uast(
    type: "Synthetic"
)

elseif_statement <- (elseif_statement) => uast(
    type: "If"
)

empty_statement <- (empty_statement) => uast(
    type: "Synthetic"
)

enum_declaration <- (enum_declaration) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
)

enum_value <- (enum_value) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
)

equality_expression <- (equality_expression) => uast(
    type: "Synthetic"
)

errorcode <- (errorcode) => uast(
    type: "Synthetic"
)

errordomain_declaration <- (errordomain_declaration) => uast(
    type: "Synthetic"
)

expression_statement <- (expression_statement) => uast(
    type: "Synthetic"
)

field_declaration <- (field_declaration) => uast(
    type: "Field",
    roles: "Member"
)

finally_clause <- (finally_clause) => uast(
    type: "Finally",
    roles: "Finally"
)

for_statement <- (for_statement) => uast(
    type: "Loop",
    roles: "Loop"
)

foreach_statement <- (foreach_statement) => uast(
    type: "Loop",
    roles: "Loop"
)

if_directive <- (if_directive) => uast(
    type: "If",
    children: "identifier", "literal"
)

if_statement <- (if_statement) => uast(
    type: "If"
)

in_expression <- (in_expression) => uast(
    type: "Synthetic"
)

initializer <- (initializer) => uast(
    type: "Synthetic"
)

inline_array_type <- (inline_array_type) => uast(
    type: "Synthetic"
)

integer <- (integer) => uast(
    type: "Synthetic"
)

interface_declaration <- (interface_declaration) => uast(
    type: "Interface",
    roles: "Interface", "Declaration"
)

interface_member <- (interface_member) => uast(
    type: "Interface",
    roles: "Interface", "Declaration"
)

lambda_expression <- (lambda_expression) => uast(
    type: "Lambda",
    roles: "Lambda"
)

literal <- (literal) => uast(
    type: "Literal",
    roles: "Literal"
)

local_declaration <- (local_declaration) => uast(
    type: "Synthetic"
)

local_function_declaration <- (local_function_declaration) => uast(
    type: "Function",
    roles: "Function", "Declaration"
)

lock_statement <- (lock_statement) => uast(
    type: "Synthetic"
)

logical_and_expression <- (logical_and_expression) => uast(
    type: "Synthetic"
)

logical_negation_expression <- (logical_negation_expression) => uast(
    type: "Synthetic"
)

logical_or_expression <- (logical_or_expression) => uast(
    type: "Synthetic"
)

member_access_expression <- (member_access_expression) => uast(
    type: "Synthetic"
)

member_declaration_modifier <- (member_declaration_modifier) => uast(
    type: "If"
)

member_initializer <- (member_initializer) => uast(
    type: "Synthetic"
)

method_call_expression <- (method_call_expression) => uast(
    type: "Method",
    roles: "Function", "Declaration", "Member"
)

method_declaration <- (method_declaration) => uast(
    type: "Method",
    roles: "Function", "Declaration", "Member"
)

multiplicative_expression <- (multiplicative_expression) => uast(
    type: "Synthetic"
)

namespace_declaration <- (namespace_declaration) => uast(
    type: "Namespace",
    roles: "Module"
)

namespace_member <- (namespace_member) => uast(
    type: "Namespace",
    roles: "Module"
)

null_coalescing_expression <- (null_coalescing_expression) => uast(
    type: "Synthetic"
)

object_creation_expression <- (object_creation_expression) => uast(
    type: "Synthetic"
)

object_initializers <- (object_initializers) => uast(
    type: "Synthetic"
)

parameter <- (parameter) => uast(
    type: "Parameter",
    roles: "Parameter"
)

postfix_expression <- (postfix_expression) => uast(
    type: "Synthetic"
)

prefix_expression <- (prefix_expression) => uast(
    type: "Synthetic"
)

property_accessor <- (property_accessor) => uast(
    type: "Property",
    roles: "Member"
)

property_declaration <- (property_declaration) => uast(
    type: "Property",
    roles: "Member"
)

property_default <- (property_default) => uast(
    type: "Property",
    roles: "Member"
)

relational_expression <- (relational_expression) => uast(
    type: "Synthetic"
)

return_statement <- (return_statement) => uast(
    type: "Return",
    roles: "Return"
)

signal_declaration <- (signal_declaration) => uast(
    type: "Synthetic"
)

signal_declaration_modifier <- (signal_declaration_modifier) => uast(
    type: "If"
)

sizeof_expression <- (sizeof_expression) => uast(
    type: "Synthetic"
)

slice_expression <- (slice_expression) => uast(
    type: "Slice"
)

source_file <- (source_file) => uast(
    type: "Synthetic"
)

static_cast_expression <- (static_cast_expression) => uast(
    type: "Cast"
)

string <- (string) => uast(
    type: "Synthetic"
)

struct_declaration <- (struct_declaration) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
)

struct_member <- (struct_member) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
)

switch_section <- (switch_section) => uast(
    type: "Switch"
)

switch_statement <- (switch_statement) => uast(
    type: "Switch"
)

symbol <- (symbol) => uast(
    type: "Synthetic"
)

template_string <- (template_string) => uast(
    type: "Synthetic"
)

template_string_expression <- (template_string_expression) => uast(
    type: "Synthetic"
)

ternary_expression <- (ternary_expression) => uast(
    type: "Synthetic"
)

throw_statement <- (throw_statement) => uast(
    type: "Throw",
    roles: "Throw"
)

try_statement <- (try_statement) => uast(
    type: "Try",
    roles: "Try"
)

type <- (type) => uast(
    type: "Synthetic"
)

type_arguments <- (type_arguments) => uast(
    type: "Synthetic"
)

type_declaration_modifier <- (type_declaration_modifier) => uast(
    type: "If"
)

type_relational_expression <- (type_relational_expression) => uast(
    type: "Synthetic"
)

typeof_expression <- (typeof_expression) => uast(
    type: "Synthetic"
)

unqualified_type <- (unqualified_type) => uast(
    type: "If"
)

using_directive <- (using_directive) => uast(
    type: "Synthetic"
)

while_statement <- (while_statement) => uast(
    type: "Loop",
    roles: "Loop"
)

with_statement <- (with_statement) => uast(
    type: "Synthetic"
)

yield_expression <- (yield_expression) => uast(
    type: "Yield",
    roles: "Yield"
)

yield_statement <- (yield_statement) => uast(
    type: "Yield",
    roles: "Yield"
)

abstract <- (abstract) => uast(
    type: "Synthetic"
)

and <- (and) => uast(
    type: "Synthetic"
)

as <- (as) => uast(
    type: "Synthetic"
)

async <- (async) => uast(
    type: "Synthetic"
)

base_access <- (base_access) => uast(
    type: "Synthetic"
)

break <- (break) => uast(
    type: "Break",
    roles: "Break"
)

case <- (case) => uast(
    type: "Case",
    roles: "Branch"
)

catch <- (catch) => uast(
    type: "Catch",
    roles: "Catch"
)

character <- (character) => uast(
    type: "Synthetic"
)

class <- (class) => uast(
    type: "Class",
    roles: "Class", "Declaration"
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
)

const <- (const) => uast(
    type: "Synthetic"
)

construct <- (construct) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
)

continue <- (continue) => uast(
    type: "Continue",
    roles: "Continue"
)

default <- (default) => uast(
    type: "Synthetic"
)

delegate <- (delegate) => uast(
    type: "Synthetic"
)

delete <- (delete) => uast(
    type: "Synthetic"
)

do <- (do) => uast(
    type: "Synthetic"
)

dynamic <- (dynamic) => uast(
    type: "Synthetic"
)

elif <- (elif) => uast(
    type: "If"
)

else <- (else) => uast(
    type: "Synthetic"
)

endif_directive <- (endif_directive) => uast(
    type: "If"
)

ensures <- (ensures) => uast(
    type: "Synthetic"
)

enum <- (enum) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
)

errordomain <- (errordomain) => uast(
    type: "Synthetic"
)

escape_sequence <- (escape_sequence) => uast(
    type: "Synthetic"
)

extern <- (extern) => uast(
    type: "Synthetic"
)

false <- (false) => uast(
    type: "Synthetic"
)

finally <- (finally) => uast(
    type: "Finally",
    roles: "Finally"
)

for <- (for) => uast(
    type: "Loop",
    roles: "Loop"
)

foreach <- (foreach) => uast(
    type: "Loop",
    roles: "Loop"
)

get <- (get) => uast(
    type: "Synthetic"
)

identifier <- (identifier) => uast(
    type: "If"
)

if <- (if) => uast(
    type: "If"
)

in <- (in) => uast(
    type: "Synthetic"
)

inline <- (inline) => uast(
    type: "Synthetic"
)

interface <- (interface) => uast(
    type: "Interface",
    roles: "Interface", "Declaration"
)

internal <- (internal) => uast(
    type: "Synthetic"
)

is <- (is) => uast(
    type: "Synthetic"
)

lock <- (lock) => uast(
    type: "Synthetic"
)

namespace <- (namespace) => uast(
    type: "Namespace",
    roles: "Module"
)

new <- (new) => uast(
    type: "Synthetic"
)

not <- (not) => uast(
    type: "Synthetic"
)

null <- (null) => uast(
    type: "Synthetic"
)

or <- (or) => uast(
    type: "Synthetic"
)

out <- (out) => uast(
    type: "Synthetic"
)

override <- (override) => uast(
    type: "Synthetic"
)

owned <- (owned) => uast(
    type: "Synthetic"
)

params <- (params) => uast(
    type: "Synthetic"
)

partial <- (partial) => uast(
    type: "Synthetic"
)

private <- (private) => uast(
    type: "Synthetic"
)

protected <- (protected) => uast(
    type: "Synthetic"
)

public <- (public) => uast(
    type: "Synthetic"
)

real <- (real) => uast(
    type: "Synthetic"
)

ref <- (ref) => uast(
    type: "Synthetic"
)

regex <- (regex) => uast(
    type: "Synthetic"
)

requires <- (requires) => uast(
    type: "Synthetic"
)

return <- (return) => uast(
    type: "Return",
    roles: "Return"
)

set <- (set) => uast(
    type: "Set"
)

signal <- (signal) => uast(
    type: "Synthetic"
)

sizeof <- (sizeof) => uast(
    type: "Synthetic"
)

static <- (static) => uast(
    type: "Synthetic"
)

string_formatter <- (string_formatter) => uast(
    type: "Loop",
    roles: "Loop"
)

struct <- (struct) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
)

switch <- (switch) => uast(
    type: "Switch"
)

this_access <- (this_access) => uast(
    type: "Synthetic"
)

throw <- (throw) => uast(
    type: "Throw",
    roles: "Throw"
)

throws <- (throws) => uast(
    type: "Throw",
    roles: "Throw"
)

true <- (true) => uast(
    type: "Synthetic"
)

try <- (try) => uast(
    type: "Try",
    roles: "Try"
)

typeof <- (typeof) => uast(
    type: "Synthetic"
)

unowned <- (unowned) => uast(
    type: "Synthetic"
)

using <- (using) => uast(
    type: "Synthetic"
)

value_access <- (value_access) => uast(
    type: "Synthetic"
)

var <- (var) => uast(
    type: "Synthetic"
)

verbatim_string <- (verbatim_string) => uast(
    type: "Synthetic"
)

virtual <- (virtual) => uast(
    type: "Synthetic"
)

void <- (void) => uast(
    type: "Synthetic"
)

weak <- (weak) => uast(
    type: "Synthetic"
)

while <- (while) => uast(
    type: "Loop",
    roles: "Loop"
)

with <- (with) => uast(
    type: "Synthetic"
)

yield <- (yield) => uast(
    type: "Yield",
    roles: "Yield"
)

