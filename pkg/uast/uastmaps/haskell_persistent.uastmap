annotated_type_variable <- (annotated_type_variable) => uast(
    type: "Variable",
    roles: "Variable", "Declaration",
    children: "context", "forall", "fun", "implicit_param", "promoted", "type_apply", "type_infix", "type_list", "type_literal", "type_name", "type_parens", "type_star", "type_tuple"
)

attribute_key_value <- (attribute_key_value) => uast(
    type: "Attribute",
    roles: "Attribute"
)

attributes <- (attributes) => uast(
    type: "Attribute",
    roles: "Attribute"
)

class_name <- (class_name) => uast(
    type: "Class",
    roles: "Class", "Declaration"
)

con_list <- (con_list) => uast(
    type: "List"
)

con_tuple <- (con_tuple) => uast(
    type: "Tuple"
)

con_unit <- (con_unit) => uast(
    type: "Synthetic"
)

constraint <- (constraint) => uast(
    type: "Synthetic",
    children: "class_name"
)

constructor <- (constructor) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
)

constructor_operator <- (constructor_operator) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
)

context <- (context) => uast(
    type: "Synthetic"
)

entity_body <- (entity_body) => uast(
    type: "Synthetic"
)

entity_definition <- (entity_definition) => uast(
    type: "Synthetic",
    children: "type_name"
)

entity_deriving <- (entity_deriving) => uast(
    type: "Synthetic",
    children: "qualified_type", "type"
)

export <- (export) => uast(
    type: "Synthetic",
    children: "module", "qualified_module"
)

export_names <- (export_names) => uast(
    type: "Synthetic"
)

field_definition <- (field_definition) => uast(
    type: "Field",
    roles: "Member",
    children: "promoted", "type_list", "type_literal", "type_name", "type_parens", "type_star", "type_tuple", "variable"
)

fields <- (fields) => uast(
    type: "Field",
    roles: "Member"
)

forall <- (forall) => uast(
    type: "Loop",
    roles: "Loop"
)

foreign_constraint <- (foreign_constraint) => uast(
    type: "Loop",
    roles: "Loop"
)

fun <- (fun) => uast(
    type: "Synthetic"
)

head <- (head) => uast(
    type: "Synthetic",
    children: "constructor_operator", "type", "type_operator"
)

implicit_param <- (implicit_param) => uast(
    type: "Synthetic",
    children: "context", "forall", "fun", "implicit_param", "promoted", "type_apply", "type_infix", "type_list", "type_literal", "type_name", "type_parens", "type_star", "type_tuple"
)

import_con_names <- (import_con_names) => uast(
    type: "Import",
    roles: "Import"
)

import_item <- (import_item) => uast(
    type: "Import",
    roles: "Import"
)

import_list <- (import_list) => uast(
    type: "Import",
    roles: "Import"
)

inferred_type_variable <- (inferred_type_variable) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
)

integer <- (integer) => uast(
    type: "Synthetic"
)

kind <- (kind) => uast(
    type: "Synthetic",
    children: "context", "forall", "fun", "implicit_param", "promoted", "type_apply", "type_infix", "type_list", "type_literal", "type_name", "type_parens", "type_star", "type_tuple"
)

modifier <- (modifier) => uast(
    type: "If"
)

module <- (module) => uast(
    type: "Module",
    roles: "Module"
)

namespace <- (namespace) => uast(
    type: "Namespace",
    roles: "Module"
)

natural_key <- (natural_key) => uast(
    type: "Synthetic"
)

operator <- (operator) => uast(
    type: "Synthetic"
)

pattern <- (pattern) => uast(
    type: "Pattern",
    roles: "Pattern",
    children: "constructor_operator", "promoted", "qualified_constructor_operator", "qualified_type", "qualified_type_operator", "ticked", "type", "type_operator"
)

persistent_definitions <- (persistent_definitions) => uast(
    type: "Synthetic"
)

promoted <- (promoted) => uast(
    type: "Synthetic"
)

qualified_constructor <- (qualified_constructor) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
)

qualified_constructor_operator <- (qualified_constructor_operator) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
)

qualified_module <- (qualified_module) => uast(
    type: "If"
)

qualified_operator <- (qualified_operator) => uast(
    type: "If"
)

qualified_type <- (qualified_type) => uast(
    type: "If"
)

qualified_type_operator <- (qualified_type_operator) => uast(
    type: "If"
)

qualified_variable <- (qualified_variable) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
)

quantifiers <- (quantifiers) => uast(
    type: "If"
)

references <- (references) => uast(
    type: "Synthetic"
)

surrogate_key <- (surrogate_key) => uast(
    type: "Synthetic",
    children: "promoted", "type_list", "type_literal", "type_name", "type_parens", "type_star", "type_tuple"
)

ticked <- (ticked) => uast(
    type: "Synthetic"
)

tycon_arrow <- (tycon_arrow) => uast(
    type: "Synthetic"
)

tyfam_injectivity <- (tyfam_injectivity) => uast(
    type: "Synthetic"
)

tyfam_result_type <- (tyfam_result_type) => uast(
    type: "Synthetic"
)

type <- (type) => uast(
    type: "Synthetic"
)

type_apply <- (type_apply) => uast(
    type: "Synthetic"
)

type_infix <- (type_infix) => uast(
    type: "Synthetic",
    children: "constructor_operator", "promoted", "qualified_constructor_operator", "qualified_type_operator", "ticked", "type_apply", "type_infix", "type_list", "type_literal", "type_name", "type_operator", "type_parens", "type_star", "type_tuple"
)

type_invisible <- (type_invisible) => uast(
    type: "Synthetic"
)

type_list <- (type_list) => uast(
    type: "List"
)

type_literal <- (type_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

type_name <- (type_name) => uast(
    type: "Synthetic"
)

type_parens <- (type_parens) => uast(
    type: "Synthetic"
)

type_role <- (type_role) => uast(
    type: "Synthetic"
)

type_star <- (type_star) => uast(
    type: "Synthetic"
)

type_tuple <- (type_tuple) => uast(
    type: "Tuple"
)

type_variable <- (type_variable) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
)

unique_constraint <- (unique_constraint) => uast(
    type: "Synthetic"
)

variable <- (variable) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
)

varop <- (varop) => uast(
    type: "Synthetic"
)

Foreign <- (Foreign) => uast(
    type: "Loop",
    roles: "Loop"
)

Id <- (Id) => uast(
    type: "Synthetic"
)

Primary <- (Primary) => uast(
    type: "Synthetic"
)

References <- (References) => uast(
    type: "Synthetic"
)

_ <- (_) => uast(
    type: "Synthetic"
)

all_names <- (all_names) => uast(
    type: "Synthetic"
)

as <- (as) => uast(
    type: "Synthetic"
)

attribute_exclamation_mark <- (attribute_exclamation_mark) => uast(
    type: "Attribute",
    roles: "Attribute"
)

attribute_name <- (attribute_name) => uast(
    type: "Attribute",
    roles: "Attribute"
)

cascade_action <- (cascade_action) => uast(
    type: "Synthetic"
)

char <- (char) => uast(
    type: "Synthetic"
)

comma <- (comma) => uast(
    type: "Synthetic"
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
)

deriving <- (deriving) => uast(
    type: "Synthetic"
)

float <- (float) => uast(
    type: "Synthetic"
)

forall <- (forall) => uast(
    type: "Loop",
    roles: "Loop"
)

hiding <- (hiding) => uast(
    type: "Synthetic"
)

implicit_parid <- (implicit_parid) => uast(
    type: "Synthetic"
)

import <- (import) => uast(
    type: "Import",
    roles: "Import"
)

import_package <- (import_package) => uast(
    type: "Import",
    roles: "Import"
)

instance <- (instance) => uast(
    type: "Synthetic"
)

is_sum_marker <- (is_sum_marker) => uast(
    type: "Synthetic"
)

module <- (module) => uast(
    type: "Module",
    roles: "Module"
)

nominal <- (nominal) => uast(
    type: "Synthetic"
)

pattern <- (pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
)

phantom <- (phantom) => uast(
    type: "Synthetic"
)

qualified <- (qualified) => uast(
    type: "If"
)

representational <- (representational) => uast(
    type: "Synthetic"
)

role <- (role) => uast(
    type: "Synthetic"
)

sql_constraint_name <- (sql_constraint_name) => uast(
    type: "Synthetic"
)

string <- (string) => uast(
    type: "Synthetic"
)

type <- (type) => uast(
    type: "Synthetic"
)

type_operator <- (type_operator) => uast(
    type: "Synthetic"
)

