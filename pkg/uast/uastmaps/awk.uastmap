args <- (args) => uast(
    type: "Synthetic"
)

array_ref <- (array_ref) => uast(
    type: "Synthetic",
    children: "array_ref", "assignment_exp", "binary_exp", "exp_list", "field_ref", "func_call", "getline_file", "getline_input", "grouping", "identifier", "indirect_func_call", "ns_qualified_name", "number", "piped_io_exp", "regex", "regex_constant", "string", "string_concat", "ternary_exp", "unary_exp", "update_exp"
)

assignment_exp <- (assignment_exp) => uast(
    type: "Assignment",
    roles: "Assignment",
    children: "array_ref", "assignment_exp", "binary_exp", "field_ref", "func_call", "getline_file", "getline_input", "grouping", "identifier", "indirect_func_call", "ns_qualified_name", "number", "piped_io_exp", "regex", "regex_constant", "string", "string_concat", "ternary_exp", "unary_exp", "update_exp"
)

binary_exp <- (binary_exp) => uast(
    type: "Synthetic",
    children: "array_ref", "assignment_exp", "binary_exp", "exp_list", "field_ref", "func_call", "getline_file", "getline_input", "grouping", "identifier", "in", "indirect_func_call", "ns_qualified_name", "number", "piped_io_exp", "regex", "regex_constant", "string", "string_concat", "ternary_exp", "unary_exp", "update_exp"
)

block <- (block) => uast(
    type: "Block",
    roles: "Body"
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
)

delete_statement <- (delete_statement) => uast(
    type: "Synthetic"
)

directive <- (directive) => uast(
    type: "Synthetic"
)

do_while_statement <- (do_while_statement) => uast(
    type: "Loop",
    roles: "Loop",
    children: "array_ref", "assignment_exp", "binary_exp", "field_ref", "func_call", "getline_file", "getline_input", "grouping", "identifier", "indirect_func_call", "ns_qualified_name", "number", "piped_io_exp", "regex", "regex_constant", "string", "string_concat", "ternary_exp", "unary_exp", "update_exp"
)

else_clause <- (else_clause) => uast(
    type: "Synthetic"
)

exit_statement <- (exit_statement) => uast(
    type: "Synthetic"
)

exp_list <- (exp_list) => uast(
    type: "List"
)

field_ref <- (field_ref) => uast(
    type: "Field",
    roles: "Member"
)

for_in_statement <- (for_in_statement) => uast(
    type: "Loop",
    roles: "Loop",
    children: "array_ref", "identifier", "ns_qualified_name"
)

for_statement <- (for_statement) => uast(
    type: "Loop",
    roles: "Loop",
    children: "array_ref", "assignment_exp", "binary_exp", "field_ref", "func_call", "getline_file", "getline_input", "grouping", "identifier", "indirect_func_call", "ns_qualified_name", "number", "piped_io_exp", "regex", "regex_constant", "string", "string_concat", "ternary_exp", "unary_exp", "update_exp"
)

func_call <- (func_call) => uast(
    type: "Call",
    roles: "Call",
    children: "identifier", "ns_qualified_name"
)

func_def <- (func_def) => uast(
    type: "Synthetic",
    children: "identifier", "ns_qualified_name"
)

getline_file <- (getline_file) => uast(
    type: "Synthetic",
    children: "array_ref", "assignment_exp", "binary_exp", "field_ref", "func_call", "getline_file", "getline_input", "grouping", "identifier", "indirect_func_call", "ns_qualified_name", "number", "piped_io_exp", "regex", "regex_constant", "string", "string_concat", "ternary_exp", "unary_exp", "update_exp"
)

getline_input <- (getline_input) => uast(
    type: "Synthetic"
)

grouping <- (grouping) => uast(
    type: "Synthetic"
)

if_statement <- (if_statement) => uast(
    type: "If",
    children: "array_ref", "assignment_exp", "binary_exp", "field_ref", "func_call", "getline_file", "getline_input", "grouping", "identifier", "indirect_func_call", "ns_qualified_name", "number", "piped_io_exp", "regex", "regex_constant", "string", "string_concat", "ternary_exp", "unary_exp", "update_exp"
)

indirect_func_call <- (indirect_func_call) => uast(
    type: "Call",
    roles: "Call"
)

namespace <- (namespace) => uast(
    type: "Namespace",
    roles: "Module"
)

ns_qualified_name <- (ns_qualified_name) => uast(
    type: "If"
)

number <- (number) => uast(
    type: "Synthetic"
)

param_list <- (param_list) => uast(
    type: "List"
)

pattern <- (pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
)

piped_io_exp <- (piped_io_exp) => uast(
    type: "Synthetic",
    children: "array_ref", "assignment_exp", "binary_exp", "field_ref", "func_call", "getline_file", "getline_input", "grouping", "identifier", "indirect_func_call", "ns_qualified_name", "number", "piped_io_exp", "regex", "regex_constant", "string", "string_concat", "ternary_exp", "unary_exp", "update_exp"
)

piped_io_statement <- (piped_io_statement) => uast(
    type: "Synthetic",
    children: "array_ref", "assignment_exp", "binary_exp", "field_ref", "func_call", "getline_file", "getline_input", "grouping", "identifier", "indirect_func_call", "ns_qualified_name", "number", "piped_io_exp", "regex", "regex_constant", "string", "string_concat", "ternary_exp", "unary_exp", "update_exp"
)

print_statement <- (print_statement) => uast(
    type: "Synthetic"
)

printf_statement <- (printf_statement) => uast(
    type: "Synthetic"
)

program <- (program) => uast(
    type: "Synthetic"
)

range_pattern <- (range_pattern) => uast(
    type: "Pattern",
    roles: "Pattern",
    children: "array_ref", "assignment_exp", "binary_exp", "field_ref", "func_call", "getline_file", "getline_input", "grouping", "identifier", "indirect_func_call", "ns_qualified_name", "number", "piped_io_exp", "regex", "regex_constant", "string", "string_concat", "ternary_exp", "unary_exp", "update_exp"
)

redirected_io_statement <- (redirected_io_statement) => uast(
    type: "Synthetic",
    children: "array_ref", "assignment_exp", "binary_exp", "field_ref", "func_call", "getline_file", "getline_input", "grouping", "identifier", "indirect_func_call", "ns_qualified_name", "number", "piped_io_exp", "regex", "regex_constant", "string", "string_concat", "ternary_exp", "unary_exp", "update_exp"
)

regex <- (regex) => uast(
    type: "Synthetic",
    children: "regex_flags", "regex_pattern"
)

regex_constant <- (regex_constant) => uast(
    type: "Synthetic"
)

regex_pattern <- (regex_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
)

return_statement <- (return_statement) => uast(
    type: "Return",
    roles: "Return"
)

rule <- (rule) => uast(
    type: "Synthetic"
)

string <- (string) => uast(
    type: "Synthetic"
)

string_concat <- (string_concat) => uast(
    type: "Synthetic",
    children: "array_ref", "binary_exp", "field_ref", "func_call", "grouping", "identifier", "ns_qualified_name", "number", "string", "string_concat", "ternary_exp", "unary_exp"
)

switch_body <- (switch_body) => uast(
    type: "Switch"
)

switch_case <- (switch_case) => uast(
    type: "Switch",
    children: "number", "regex", "string"
)

switch_default <- (switch_default) => uast(
    type: "Switch"
)

switch_statement <- (switch_statement) => uast(
    type: "Switch"
)

ternary_exp <- (ternary_exp) => uast(
    type: "Synthetic",
    children: "array_ref", "assignment_exp", "binary_exp", "field_ref", "func_call", "getline_file", "getline_input", "grouping", "identifier", "indirect_func_call", "ns_qualified_name", "number", "piped_io_exp", "regex", "regex_constant", "string", "string_concat", "ternary_exp", "unary_exp", "update_exp"
)

unary_exp <- (unary_exp) => uast(
    type: "Synthetic",
    children: "array_ref", "assignment_exp", "binary_exp", "field_ref", "func_call", "getline_file", "getline_input", "grouping", "identifier", "indirect_func_call", "ns_qualified_name", "number", "piped_io_exp", "regex", "regex_constant", "string", "string_concat", "ternary_exp", "unary_exp", "update_exp"
)

update_exp <- (update_exp) => uast(
    type: "Synthetic",
    children: "array_ref", "field_ref", "identifier", "ns_qualified_name"
)

while_statement <- (while_statement) => uast(
    type: "Loop",
    roles: "Loop",
    children: "array_ref", "assignment_exp", "binary_exp", "field_ref", "func_call", "getline_file", "getline_input", "grouping", "identifier", "indirect_func_call", "ns_qualified_name", "number", "piped_io_exp", "regex", "regex_constant", "string", "string_concat", "ternary_exp", "unary_exp", "update_exp"
)

BEGIN <- (BEGIN) => uast(
    type: "Synthetic"
)

BEGINFILE <- (BEGINFILE) => uast(
    type: "Synthetic"
)

END <- (END) => uast(
    type: "Synthetic"
)

ENDFILE <- (ENDFILE) => uast(
    type: "Synthetic"
)

alnum <- (alnum) => uast(
    type: "Synthetic"
)

alpha <- (alpha) => uast(
    type: "Synthetic"
)

and <- (and) => uast(
    type: "Synthetic"
)

asort <- (asort) => uast(
    type: "Synthetic"
)

asorti <- (asorti) => uast(
    type: "Synthetic"
)

bindtextdomain <- (bindtextdomain) => uast(
    type: "Synthetic"
)

blank <- (blank) => uast(
    type: "Synthetic"
)

break_statement <- (break_statement) => uast(
    type: "Break",
    roles: "Break"
)

case <- (case) => uast(
    type: "Case",
    roles: "Branch"
)

cntrl <- (cntrl) => uast(
    type: "Synthetic"
)

compl <- (compl) => uast(
    type: "Synthetic"
)

concatenating_space <- (concatenating_space) => uast(
    type: "Synthetic"
)

continue_statement <- (continue_statement) => uast(
    type: "Continue",
    roles: "Continue"
)

cos <- (cos) => uast(
    type: "Synthetic"
)

dcgettext <- (dcgettext) => uast(
    type: "Synthetic"
)

dcngettext <- (dcngettext) => uast(
    type: "Synthetic"
)

default <- (default) => uast(
    type: "Synthetic"
)

delete <- (delete) => uast(
    type: "Synthetic"
)

digit <- (digit) => uast(
    type: "Synthetic"
)

do <- (do) => uast(
    type: "Synthetic"
)

else <- (else) => uast(
    type: "Synthetic"
)

escape_sequence <- (escape_sequence) => uast(
    type: "Synthetic"
)

exit <- (exit) => uast(
    type: "Synthetic"
)

exp <- (exp) => uast(
    type: "Synthetic"
)

for <- (for) => uast(
    type: "Loop",
    roles: "Loop"
)

func <- (func) => uast(
    type: "Synthetic"
)

function <- (function) => uast(
    type: "Function",
    roles: "Function", "Declaration"
)

gensub <- (gensub) => uast(
    type: "Synthetic"
)

getline <- (getline) => uast(
    type: "Synthetic"
)

graph <- (graph) => uast(
    type: "Synthetic"
)

gsub <- (gsub) => uast(
    type: "Synthetic"
)

identifier <- (identifier) => uast(
    type: "If"
)

if <- (if) => uast(
    type: "If"
)

in <- (in) => uast(
    type: "Synthetic"
)

index <- (index) => uast(
    type: "Index",
    roles: "Index"
)

int <- (int) => uast(
    type: "Synthetic"
)

isarray <- (isarray) => uast(
    type: "Synthetic"
)

length <- (length) => uast(
    type: "Synthetic"
)

log <- (log) => uast(
    type: "Synthetic"
)

lower <- (lower) => uast(
    type: "Synthetic"
)

lshift <- (lshift) => uast(
    type: "If"
)

match <- (match) => uast(
    type: "Match",
    roles: "Match"
)

mktime <- (mktime) => uast(
    type: "Synthetic"
)

namespace <- (namespace) => uast(
    type: "Namespace",
    roles: "Module"
)

next_statement <- (next_statement) => uast(
    type: "Synthetic"
)

nextfile_statement <- (nextfile_statement) => uast(
    type: "Synthetic"
)

or <- (or) => uast(
    type: "Synthetic"
)

patsplit <- (patsplit) => uast(
    type: "Synthetic"
)

print <- (print) => uast(
    type: "Synthetic"
)

printf <- (printf) => uast(
    type: "Synthetic"
)

punct <- (punct) => uast(
    type: "Synthetic"
)

rand <- (rand) => uast(
    type: "Synthetic"
)

regex_flags <- (regex_flags) => uast(
    type: "Synthetic"
)

return <- (return) => uast(
    type: "Return",
    roles: "Return"
)

rshift <- (rshift) => uast(
    type: "If"
)

sin <- (sin) => uast(
    type: "Synthetic"
)

space <- (space) => uast(
    type: "Synthetic"
)

split <- (split) => uast(
    type: "Synthetic"
)

sprintf <- (sprintf) => uast(
    type: "Synthetic"
)

sqrt <- (sqrt) => uast(
    type: "Synthetic"
)

srand <- (srand) => uast(
    type: "Synthetic"
)

strftime <- (strftime) => uast(
    type: "Synthetic"
)

strtonum <- (strtonum) => uast(
    type: "Synthetic"
)

sub <- (sub) => uast(
    type: "Synthetic"
)

substr <- (substr) => uast(
    type: "Synthetic"
)

switch <- (switch) => uast(
    type: "Switch"
)

systime <- (systime) => uast(
    type: "Synthetic"
)

tolower <- (tolower) => uast(
    type: "Synthetic"
)

toupper <- (toupper) => uast(
    type: "Synthetic"
)

typeof <- (typeof) => uast(
    type: "Synthetic"
)

upper <- (upper) => uast(
    type: "Synthetic"
)

while <- (while) => uast(
    type: "Loop",
    roles: "Loop"
)

xdigit <- (xdigit) => uast(
    type: "Synthetic"
)

xor <- (xor) => uast(
    type: "Synthetic"
)

