_abstract_declarator <- (_abstract_declarator) => uast(
    type: "Synthetic"
)

_declarator <- (_declarator) => uast(
    type: "Synthetic"
)

_field_declarator <- (_field_declarator) => uast(
    type: "Field",
    roles: "Member"
)

_type_declarator <- (_type_declarator) => uast(
    type: "Synthetic"
)

expression <- (expression) => uast(
    type: "Synthetic"
)

statement <- (statement) => uast(
    type: "Synthetic"
)

type_specifier <- (type_specifier) => uast(
    type: "If"
)

abstract_array_declarator <- (abstract_array_declarator) => uast(
    type: "Synthetic",
    children: "_abstract_declarator", "expression"
)

abstract_function_declarator <- (abstract_function_declarator) => uast(
    type: "Function",
    roles: "Function", "Declaration",
    children: "_abstract_declarator", "parameter_list"
)

abstract_parenthesized_declarator <- (abstract_parenthesized_declarator) => uast(
    type: "Synthetic"
)

abstract_pointer_declarator <- (abstract_pointer_declarator) => uast(
    type: "Synthetic",
    children: "_abstract_declarator"
)

abstract_reference_declarator <- (abstract_reference_declarator) => uast(
    type: "Synthetic"
)

access_specifier <- (access_specifier) => uast(
    type: "If"
)

alias_declaration <- (alias_declaration) => uast(
    type: "Synthetic",
    children: "type_descriptor", "type_identifier"
)

alignas_qualifier <- (alignas_qualifier) => uast(
    type: "If"
)

alignof_expression <- (alignof_expression) => uast(
    type: "Synthetic",
    children: "type_descriptor"
)

argument_list <- (argument_list) => uast(
    type: "List"
)

array_declarator <- (array_declarator) => uast(
    type: "Synthetic",
    children: "_declarator", "_field_declarator", "_type_declarator", "expression"
)

assignment_expression <- (assignment_expression) => uast(
    type: "Assignment",
    roles: "Assignment",
    children: "and_eq", "expression", "initializer_list", "or_eq", "xor_eq"
)

attribute <- (attribute) => uast(
    type: "Attribute",
    roles: "Attribute",
    children: "identifier"
)

attribute_declaration <- (attribute_declaration) => uast(
    type: "Attribute",
    roles: "Attribute"
)

attribute_specifier <- (attribute_specifier) => uast(
    type: "If"
)

attributed_declarator <- (attributed_declarator) => uast(
    type: "Attribute",
    roles: "Attribute"
)

attributed_statement <- (attributed_statement) => uast(
    type: "Attribute",
    roles: "Attribute"
)

base_class_clause <- (base_class_clause) => uast(
    type: "Class",
    roles: "Class", "Declaration"
)

binary_expression <- (binary_expression) => uast(
    type: "Synthetic",
    children: "and", "bitand", "bitor", "expression", "not_eq", "or", "preproc_defined", "xor"
)

bitfield_clause <- (bitfield_clause) => uast(
    type: "Field",
    roles: "Member"
)

break_statement <- (break_statement) => uast(
    type: "Break",
    roles: "Break"
)

call_expression <- (call_expression) => uast(
    type: "Call",
    roles: "Call",
    children: "argument_list", "expression", "primitive_type"
)

case_statement <- (case_statement) => uast(
    type: "Case",
    roles: "Branch",
    children: "expression"
)

cast_expression <- (cast_expression) => uast(
    type: "Cast",
    children: "expression", "type_descriptor"
)

catch_clause <- (catch_clause) => uast(
    type: "Catch",
    roles: "Catch",
    children: "compound_statement", "parameter_list"
)

char_literal <- (char_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

class_specifier <- (class_specifier) => uast(
    type: "Class",
    roles: "Class", "Declaration",
    children: "field_declaration_list", "qualified_identifier", "template_type", "type_identifier"
)

co_await_expression <- (co_await_expression) => uast(
    type: "Await",
    roles: "Await",
    children: "co_await", "expression"
)

co_return_statement <- (co_return_statement) => uast(
    type: "Return",
    roles: "Return"
)

co_yield_statement <- (co_yield_statement) => uast(
    type: "Yield",
    roles: "Yield"
)

comma_expression <- (comma_expression) => uast(
    type: "Synthetic",
    children: "comma_expression", "expression"
)

compound_literal_expression <- (compound_literal_expression) => uast(
    type: "Literal",
    roles: "Literal",
    children: "initializer_list", "primitive_type", "qualified_identifier", "template_type", "type_descriptor", "type_identifier"
)

compound_requirement <- (compound_requirement) => uast(
    type: "Synthetic"
)

compound_statement <- (compound_statement) => uast(
    type: "Synthetic"
)

concatenated_string <- (concatenated_string) => uast(
    type: "Synthetic"
)

concept_definition <- (concept_definition) => uast(
    type: "Synthetic",
    children: "identifier"
)

condition_clause <- (condition_clause) => uast(
    type: "Synthetic",
    children: "comma_expression", "declaration", "expression", "init_statement"
)

conditional_expression <- (conditional_expression) => uast(
    type: "Synthetic",
    children: "comma_expression", "expression"
)

constraint_conjunction <- (constraint_conjunction) => uast(
    type: "Synthetic",
    children: "and", "constraint_conjunction", "constraint_disjunction", "expression", "template_type", "type_identifier"
)

constraint_disjunction <- (constraint_disjunction) => uast(
    type: "Synthetic",
    children: "constraint_conjunction", "constraint_disjunction", "expression", "or", "template_type", "type_identifier"
)

continue_statement <- (continue_statement) => uast(
    type: "Continue",
    roles: "Continue"
)

declaration <- (declaration) => uast(
    type: "Synthetic",
    children: "_declarator", "expression", "gnu_asm_expression", "init_declarator", "initializer_list", "ms_call_modifier", "operator_cast", "type_specifier"
)

declaration_list <- (declaration_list) => uast(
    type: "List"
)

decltype <- (decltype) => uast(
    type: "Synthetic"
)

default_method_clause <- (default_method_clause) => uast(
    type: "Method",
    roles: "Function", "Declaration", "Member"
)

delete_expression <- (delete_expression) => uast(
    type: "Synthetic"
)

delete_method_clause <- (delete_method_clause) => uast(
    type: "Method",
    roles: "Function", "Declaration", "Member"
)

dependent_name <- (dependent_name) => uast(
    type: "Synthetic"
)

dependent_type <- (dependent_type) => uast(
    type: "Synthetic"
)

destructor_name <- (destructor_name) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
)

do_statement <- (do_statement) => uast(
    type: "Synthetic",
    children: "parenthesized_expression", "statement"
)

else_clause <- (else_clause) => uast(
    type: "Synthetic"
)

enum_specifier <- (enum_specifier) => uast(
    type: "Enum",
    roles: "Enum", "Declaration",
    children: "enumerator_list", "primitive_type", "qualified_identifier", "sized_type_specifier", "template_type", "type_identifier"
)

enumerator <- (enumerator) => uast(
    type: "Enum",
    roles: "Enum", "Declaration",
    children: "expression", "identifier"
)

enumerator_list <- (enumerator_list) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
)

explicit_function_specifier <- (explicit_function_specifier) => uast(
    type: "Function",
    roles: "Function", "Declaration"
)

explicit_object_parameter_declaration <- (explicit_object_parameter_declaration) => uast(
    type: "Parameter",
    roles: "Parameter"
)

export_declaration <- (export_declaration) => uast(
    type: "Synthetic"
)

expression_statement <- (expression_statement) => uast(
    type: "Synthetic"
)

extension_expression <- (extension_expression) => uast(
    type: "Synthetic"
)

field_declaration <- (field_declaration) => uast(
    type: "Field",
    roles: "Member",
    children: "_field_declarator", "expression", "initializer_list", "type_specifier"
)

field_declaration_list <- (field_declaration_list) => uast(
    type: "Field",
    roles: "Member"
)

field_designator <- (field_designator) => uast(
    type: "Field",
    roles: "Member"
)

field_expression <- (field_expression) => uast(
    type: "Field",
    roles: "Member",
    children: "dependent_name", "destructor_name", "expression", "field_identifier", "qualified_identifier", "template_method"
)

field_initializer <- (field_initializer) => uast(
    type: "Field",
    roles: "Member"
)

field_initializer_list <- (field_initializer_list) => uast(
    type: "Field",
    roles: "Member"
)

fold_expression <- (fold_expression) => uast(
    type: "Synthetic",
    children: "and", "bitand", "bitor", "expression", "not_eq", "or", "xor"
)

for_range_loop <- (for_range_loop) => uast(
    type: "Loop",
    roles: "Loop",
    children: "_declarator", "expression", "init_statement", "initializer_list", "statement", "type_specifier"
)

for_statement <- (for_statement) => uast(
    type: "Loop",
    roles: "Loop",
    children: "comma_expression", "declaration", "expression", "statement"
)

friend_declaration <- (friend_declaration) => uast(
    type: "Synthetic"
)

function_declarator <- (function_declarator) => uast(
    type: "Function",
    roles: "Function", "Declaration",
    children: "_declarator", "_field_declarator", "_type_declarator", "parameter_list"
)

function_definition <- (function_definition) => uast(
    type: "Function",
    roles: "Function", "Declaration",
    children: "_declarator", "_field_declarator", "compound_statement", "operator_cast", "try_statement", "type_specifier"
)

generic_expression <- (generic_expression) => uast(
    type: "Synthetic"
)

global_module_fragment_declaration <- (global_module_fragment_declaration) => uast(
    type: "Module",
    roles: "Module"
)

gnu_asm_clobber_list <- (gnu_asm_clobber_list) => uast(
    type: "List",
    children: "concatenated_string", "raw_string_literal", "string_literal"
)

gnu_asm_expression <- (gnu_asm_expression) => uast(
    type: "Synthetic",
    children: "concatenated_string", "gnu_asm_clobber_list", "gnu_asm_goto_list", "gnu_asm_input_operand_list", "gnu_asm_output_operand_list", "raw_string_literal", "string_literal"
)

gnu_asm_goto_list <- (gnu_asm_goto_list) => uast(
    type: "List",
    children: "identifier"
)

gnu_asm_input_operand <- (gnu_asm_input_operand) => uast(
    type: "Synthetic",
    children: "expression", "identifier", "string_literal"
)

gnu_asm_input_operand_list <- (gnu_asm_input_operand_list) => uast(
    type: "List",
    children: "gnu_asm_input_operand"
)

gnu_asm_output_operand <- (gnu_asm_output_operand) => uast(
    type: "Synthetic",
    children: "expression", "identifier", "string_literal"
)

gnu_asm_output_operand_list <- (gnu_asm_output_operand_list) => uast(
    type: "List",
    children: "gnu_asm_output_operand"
)

gnu_asm_qualifier <- (gnu_asm_qualifier) => uast(
    type: "If"
)

goto_statement <- (goto_statement) => uast(
    type: "Synthetic",
    children: "statement_identifier"
)

if_statement <- (if_statement) => uast(
    type: "If",
    children: "condition_clause", "else_clause", "statement"
)

import_declaration <- (import_declaration) => uast(
    type: "Import",
    roles: "Import",
    children: "module_name", "module_partition", "string_literal", "system_lib_string"
)

init_declarator <- (init_declarator) => uast(
    type: "Synthetic",
    children: "_declarator", "argument_list", "expression", "initializer_list"
)

init_statement <- (init_statement) => uast(
    type: "Synthetic"
)

initializer_list <- (initializer_list) => uast(
    type: "List"
)

initializer_pair <- (initializer_pair) => uast(
    type: "Synthetic",
    children: "expression", "field_designator", "field_identifier", "initializer_list", "subscript_designator", "subscript_range_designator"
)

labeled_statement <- (labeled_statement) => uast(
    type: "Synthetic",
    children: "statement_identifier"
)

lambda_capture_initializer <- (lambda_capture_initializer) => uast(
    type: "Lambda",
    roles: "Lambda",
    children: "expression", "identifier"
)

lambda_capture_specifier <- (lambda_capture_specifier) => uast(
    type: "If"
)

lambda_declarator <- (lambda_declarator) => uast(
    type: "Lambda",
    roles: "Lambda",
    children: "parameter_list"
)

lambda_default_capture <- (lambda_default_capture) => uast(
    type: "Lambda",
    roles: "Lambda"
)

lambda_expression <- (lambda_expression) => uast(
    type: "Lambda",
    roles: "Lambda",
    children: "compound_statement", "lambda_capture_specifier", "lambda_declarator", "requires_clause", "template_parameter_list"
)

lambda_specifier <- (lambda_specifier) => uast(
    type: "If"
)

linkage_specification <- (linkage_specification) => uast(
    type: "If",
    children: "declaration", "declaration_list", "function_definition", "string_literal"
)

module_declaration <- (module_declaration) => uast(
    type: "Module",
    roles: "Module",
    children: "module_name", "module_partition"
)

module_name <- (module_name) => uast(
    type: "Module",
    roles: "Module"
)

module_partition <- (module_partition) => uast(
    type: "Module",
    roles: "Module"
)

ms_based_modifier <- (ms_based_modifier) => uast(
    type: "If"
)

ms_call_modifier <- (ms_call_modifier) => uast(
    type: "If"
)

ms_declspec_modifier <- (ms_declspec_modifier) => uast(
    type: "If"
)

ms_pointer_modifier <- (ms_pointer_modifier) => uast(
    type: "If"
)

ms_unaligned_ptr_modifier <- (ms_unaligned_ptr_modifier) => uast(
    type: "If"
)

namespace_alias_definition <- (namespace_alias_definition) => uast(
    type: "Namespace",
    roles: "Module",
    children: "namespace_identifier"
)

namespace_definition <- (namespace_definition) => uast(
    type: "Namespace",
    roles: "Module",
    children: "declaration_list", "namespace_identifier", "nested_namespace_specifier"
)

nested_namespace_specifier <- (nested_namespace_specifier) => uast(
    type: "If"
)

new_declarator <- (new_declarator) => uast(
    type: "Synthetic",
    children: "expression"
)

new_expression <- (new_expression) => uast(
    type: "Synthetic",
    children: "argument_list", "initializer_list", "new_declarator", "type_specifier"
)

noexcept <- (noexcept) => uast(
    type: "Synthetic"
)

null <- (null) => uast(
    type: "Synthetic"
)

offsetof_expression <- (offsetof_expression) => uast(
    type: "Set",
    children: "field_identifier", "type_descriptor"
)

operator_cast <- (operator_cast) => uast(
    type: "Cast",
    children: "_abstract_declarator", "type_specifier"
)

operator_name <- (operator_name) => uast(
    type: "Synthetic"
)

optional_parameter_declaration <- (optional_parameter_declaration) => uast(
    type: "Parameter",
    roles: "Parameter",
    children: "_declarator", "abstract_reference_declarator", "expression", "type_specifier"
)

optional_type_parameter_declaration <- (optional_type_parameter_declaration) => uast(
    type: "Parameter",
    roles: "Parameter",
    children: "type_identifier", "type_specifier"
)

parameter_declaration <- (parameter_declaration) => uast(
    type: "Parameter",
    roles: "Parameter",
    children: "_abstract_declarator", "_declarator", "type_specifier"
)

parameter_list <- (parameter_list) => uast(
    type: "Parameter",
    roles: "Parameter"
)

parameter_pack_expansion <- (parameter_pack_expansion) => uast(
    type: "Parameter",
    roles: "Parameter",
    children: "expression", "type_descriptor"
)

parenthesized_declarator <- (parenthesized_declarator) => uast(
    type: "Synthetic"
)

parenthesized_expression <- (parenthesized_expression) => uast(
    type: "Synthetic"
)

placeholder_type_specifier <- (placeholder_type_specifier) => uast(
    type: "If",
    children: "qualified_identifier", "template_type", "type_identifier"
)

pointer_declarator <- (pointer_declarator) => uast(
    type: "Synthetic",
    children: "_declarator", "_field_declarator", "_type_declarator"
)

pointer_expression <- (pointer_expression) => uast(
    type: "Synthetic",
    children: "expression"
)

pointer_type_declarator <- (pointer_type_declarator) => uast(
    type: "Synthetic",
    children: "_type_declarator"
)

preproc_call <- (preproc_call) => uast(
    type: "Call",
    roles: "Call",
    children: "preproc_arg", "preproc_directive"
)

preproc_def <- (preproc_def) => uast(
    type: "Synthetic",
    children: "identifier", "preproc_arg"
)

preproc_defined <- (preproc_defined) => uast(
    type: "Synthetic"
)

preproc_elif <- (preproc_elif) => uast(
    type: "If",
    children: "binary_expression", "call_expression", "char_literal", "identifier", "number_literal", "parenthesized_expression", "preproc_defined", "preproc_elif", "preproc_elifdef", "preproc_else", "unary_expression"
)

preproc_elifdef <- (preproc_elifdef) => uast(
    type: "If",
    children: "identifier", "preproc_elif", "preproc_elifdef", "preproc_else"
)

preproc_else <- (preproc_else) => uast(
    type: "Synthetic"
)

preproc_function_def <- (preproc_function_def) => uast(
    type: "Function",
    roles: "Function", "Declaration",
    children: "identifier", "preproc_arg", "preproc_params"
)

preproc_if <- (preproc_if) => uast(
    type: "If",
    children: "binary_expression", "call_expression", "char_literal", "identifier", "number_literal", "parenthesized_expression", "preproc_defined", "preproc_elif", "preproc_elifdef", "preproc_else", "unary_expression"
)

preproc_ifdef <- (preproc_ifdef) => uast(
    type: "If",
    children: "identifier", "preproc_elif", "preproc_elifdef", "preproc_else"
)

preproc_include <- (preproc_include) => uast(
    type: "Synthetic",
    children: "call_expression", "identifier", "string_literal", "system_lib_string"
)

preproc_params <- (preproc_params) => uast(
    type: "Synthetic"
)

private_module_fragment_declaration <- (private_module_fragment_declaration) => uast(
    type: "Module",
    roles: "Module"
)

pure_virtual_clause <- (pure_virtual_clause) => uast(
    type: "Synthetic"
)

qualified_identifier <- (qualified_identifier) => uast(
    type: "If",
    children: "decltype", "dependent_name", "destructor_name", "field_identifier", "identifier", "namespace_identifier", "operator_cast", "operator_name", "pointer_type_declarator", "qualified_identifier", "template", "template_function", "template_method", "template_type", "type_identifier"
)

raw_string_literal <- (raw_string_literal) => uast(
    type: "Literal",
    roles: "Literal",
    children: "raw_string_delimiter"
)

ref_qualifier <- (ref_qualifier) => uast(
    type: "If"
)

reference_declarator <- (reference_declarator) => uast(
    type: "Synthetic"
)

requirement_seq <- (requirement_seq) => uast(
    type: "Synthetic"
)

requires_clause <- (requires_clause) => uast(
    type: "Synthetic",
    children: "constraint_conjunction", "constraint_disjunction", "expression", "template_type", "type_identifier"
)

requires_expression <- (requires_expression) => uast(
    type: "Synthetic",
    children: "parameter_list", "requirement_seq"
)

return_statement <- (return_statement) => uast(
    type: "Return",
    roles: "Return"
)

seh_except_clause <- (seh_except_clause) => uast(
    type: "Synthetic",
    children: "compound_statement", "parenthesized_expression"
)

seh_finally_clause <- (seh_finally_clause) => uast(
    type: "Finally",
    roles: "Finally",
    children: "compound_statement"
)

seh_leave_statement <- (seh_leave_statement) => uast(
    type: "Synthetic"
)

seh_try_statement <- (seh_try_statement) => uast(
    type: "Try",
    roles: "Try",
    children: "compound_statement"
)

simple_requirement <- (simple_requirement) => uast(
    type: "Synthetic"
)

sized_type_specifier <- (sized_type_specifier) => uast(
    type: "If",
    children: "primitive_type", "type_identifier"
)

sizeof_expression <- (sizeof_expression) => uast(
    type: "Synthetic",
    children: "expression", "type_descriptor"
)

static_assert_declaration <- (static_assert_declaration) => uast(
    type: "Synthetic",
    children: "concatenated_string", "expression", "raw_string_literal", "string_literal"
)

storage_class_specifier <- (storage_class_specifier) => uast(
    type: "Class",
    roles: "Class", "Declaration"
)

string_literal <- (string_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

struct_specifier <- (struct_specifier) => uast(
    type: "Struct",
    roles: "Struct", "Declaration",
    children: "field_declaration_list", "qualified_identifier", "template_type", "type_identifier"
)

structured_binding_declarator <- (structured_binding_declarator) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
)

subscript_argument_list <- (subscript_argument_list) => uast(
    type: "List"
)

subscript_designator <- (subscript_designator) => uast(
    type: "Synthetic"
)

subscript_expression <- (subscript_expression) => uast(
    type: "Synthetic",
    children: "expression", "subscript_argument_list"
)

subscript_range_designator <- (subscript_range_designator) => uast(
    type: "Synthetic",
    children: "expression"
)

switch_statement <- (switch_statement) => uast(
    type: "Switch",
    children: "compound_statement", "condition_clause"
)

template_argument_list <- (template_argument_list) => uast(
    type: "List"
)

template_declaration <- (template_declaration) => uast(
    type: "Synthetic",
    children: "template_parameter_list"
)

template_function <- (template_function) => uast(
    type: "Function",
    roles: "Function", "Declaration",
    children: "identifier", "template_argument_list"
)

template_instantiation <- (template_instantiation) => uast(
    type: "Synthetic",
    children: "_declarator", "type_specifier"
)

template_method <- (template_method) => uast(
    type: "Method",
    roles: "Function", "Declaration", "Member",
    children: "field_identifier", "operator_name", "template_argument_list"
)

template_parameter_list <- (template_parameter_list) => uast(
    type: "Parameter",
    roles: "Parameter"
)

template_template_parameter_declaration <- (template_template_parameter_declaration) => uast(
    type: "Parameter",
    roles: "Parameter",
    children: "template_parameter_list"
)

template_type <- (template_type) => uast(
    type: "Synthetic",
    children: "template_argument_list", "type_identifier"
)

throw_specifier <- (throw_specifier) => uast(
    type: "If"
)

throw_statement <- (throw_statement) => uast(
    type: "Throw",
    roles: "Throw"
)

trailing_return_type <- (trailing_return_type) => uast(
    type: "Return",
    roles: "Return"
)

translation_unit <- (translation_unit) => uast(
    type: "Synthetic"
)

try_statement <- (try_statement) => uast(
    type: "Try",
    roles: "Try",
    children: "compound_statement"
)

type_definition <- (type_definition) => uast(
    type: "Synthetic",
    children: "_type_declarator", "type_specifier"
)

type_descriptor <- (type_descriptor) => uast(
    type: "Synthetic",
    children: "_abstract_declarator", "type_specifier"
)

type_parameter_declaration <- (type_parameter_declaration) => uast(
    type: "Parameter",
    roles: "Parameter"
)

type_qualifier <- (type_qualifier) => uast(
    type: "If"
)

type_requirement <- (type_requirement) => uast(
    type: "Synthetic"
)

unary_expression <- (unary_expression) => uast(
    type: "Synthetic",
    children: "compl", "expression", "not", "preproc_defined"
)

union_specifier <- (union_specifier) => uast(
    type: "If",
    children: "field_declaration_list", "qualified_identifier", "template_type", "type_identifier"
)

update_expression <- (update_expression) => uast(
    type: "Synthetic",
    children: "expression"
)

user_defined_literal <- (user_defined_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

using_declaration <- (using_declaration) => uast(
    type: "Synthetic"
)

variadic_declarator <- (variadic_declarator) => uast(
    type: "Synthetic"
)

variadic_parameter_declaration <- (variadic_parameter_declaration) => uast(
    type: "Parameter",
    roles: "Parameter",
    children: "reference_declarator", "type_specifier", "variadic_declarator"
)

variadic_type_parameter_declaration <- (variadic_type_parameter_declaration) => uast(
    type: "Parameter",
    roles: "Parameter"
)

virtual_specifier <- (virtual_specifier) => uast(
    type: "If"
)

while_statement <- (while_statement) => uast(
    type: "Loop",
    roles: "Loop",
    children: "condition_clause", "statement"
)

NULL <- (NULL) => uast(
    type: "Synthetic"
)

_Alignas <- (_Alignas) => uast(
    type: "Synthetic"
)

_Alignof <- (_Alignof) => uast(
    type: "Synthetic"
)

_Atomic <- (_Atomic) => uast(
    type: "Synthetic"
)

_Generic <- (_Generic) => uast(
    type: "Synthetic"
)

_Nonnull <- (_Nonnull) => uast(
    type: "Synthetic"
)

_Noreturn <- (_Noreturn) => uast(
    type: "Return",
    roles: "Return"
)

__alignof <- (__alignof) => uast(
    type: "Synthetic"
)

__alignof__ <- (__alignof__) => uast(
    type: "Synthetic"
)

__asm <- (__asm) => uast(
    type: "Synthetic"
)

__asm__ <- (__asm__) => uast(
    type: "Synthetic"
)

__attribute <- (__attribute) => uast(
    type: "Attribute",
    roles: "Attribute"
)

__attribute__ <- (__attribute__) => uast(
    type: "Attribute",
    roles: "Attribute"
)

__based <- (__based) => uast(
    type: "Synthetic"
)

__cdecl <- (__cdecl) => uast(
    type: "Synthetic"
)

__clrcall <- (__clrcall) => uast(
    type: "Call",
    roles: "Call"
)

__declspec <- (__declspec) => uast(
    type: "Synthetic"
)

__except <- (__except) => uast(
    type: "Synthetic"
)

__extension__ <- (__extension__) => uast(
    type: "Synthetic"
)

__fastcall <- (__fastcall) => uast(
    type: "Call",
    roles: "Call"
)

__finally <- (__finally) => uast(
    type: "Finally",
    roles: "Finally"
)

__forceinline <- (__forceinline) => uast(
    type: "Loop",
    roles: "Loop"
)

__inline <- (__inline) => uast(
    type: "Synthetic"
)

__inline__ <- (__inline__) => uast(
    type: "Synthetic"
)

__leave <- (__leave) => uast(
    type: "Synthetic"
)

__restrict__ <- (__restrict__) => uast(
    type: "Synthetic"
)

__stdcall <- (__stdcall) => uast(
    type: "Call",
    roles: "Call"
)

__thiscall <- (__thiscall) => uast(
    type: "Call",
    roles: "Call"
)

__thread <- (__thread) => uast(
    type: "Synthetic"
)

__try <- (__try) => uast(
    type: "Try",
    roles: "Try"
)

__unaligned <- (__unaligned) => uast(
    type: "Synthetic"
)

__vectorcall <- (__vectorcall) => uast(
    type: "Call",
    roles: "Call"
)

__volatile__ <- (__volatile__) => uast(
    type: "Synthetic"
)

_alignof <- (_alignof) => uast(
    type: "Synthetic"
)

_unaligned <- (_unaligned) => uast(
    type: "Synthetic"
)

alignas <- (alignas) => uast(
    type: "Synthetic"
)

alignof <- (alignof) => uast(
    type: "Synthetic"
)

and <- (and) => uast(
    type: "Synthetic"
)

and_eq <- (and_eq) => uast(
    type: "Synthetic"
)

asm <- (asm) => uast(
    type: "Synthetic"
)

auto <- (auto) => uast(
    type: "Synthetic"
)

bitand <- (bitand) => uast(
    type: "Synthetic"
)

bitor <- (bitor) => uast(
    type: "Synthetic"
)

break <- (break) => uast(
    type: "Break",
    roles: "Break"
)

case <- (case) => uast(
    type: "Case",
    roles: "Branch"
)

catch <- (catch) => uast(
    type: "Catch",
    roles: "Catch"
)

character <- (character) => uast(
    type: "Synthetic"
)

class <- (class) => uast(
    type: "Class",
    roles: "Class", "Declaration"
)

co_await <- (co_await) => uast(
    type: "Await",
    roles: "Await"
)

co_return <- (co_return) => uast(
    type: "Return",
    roles: "Return"
)

co_yield <- (co_yield) => uast(
    type: "Yield",
    roles: "Yield"
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
)

compl <- (compl) => uast(
    type: "Synthetic"
)

concept <- (concept) => uast(
    type: "Synthetic"
)

const <- (const) => uast(
    type: "Synthetic"
)

consteval <- (consteval) => uast(
    type: "Synthetic"
)

constexpr <- (constexpr) => uast(
    type: "Synthetic"
)

constinit <- (constinit) => uast(
    type: "Synthetic"
)

continue <- (continue) => uast(
    type: "Continue",
    roles: "Continue"
)

decltype <- (decltype) => uast(
    type: "Synthetic"
)

default <- (default) => uast(
    type: "Synthetic"
)

defined <- (defined) => uast(
    type: "Synthetic"
)

delete <- (delete) => uast(
    type: "Synthetic"
)

do <- (do) => uast(
    type: "Synthetic"
)

else <- (else) => uast(
    type: "Synthetic"
)

enum <- (enum) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
)

escape_sequence <- (escape_sequence) => uast(
    type: "Synthetic"
)

explicit <- (explicit) => uast(
    type: "Synthetic"
)

export <- (export) => uast(
    type: "Synthetic"
)

extern <- (extern) => uast(
    type: "Synthetic"
)

false <- (false) => uast(
    type: "Synthetic"
)

field_identifier <- (field_identifier) => uast(
    type: "If"
)

final <- (final) => uast(
    type: "Synthetic"
)

for <- (for) => uast(
    type: "Loop",
    roles: "Loop"
)

friend <- (friend) => uast(
    type: "Synthetic"
)

goto <- (goto) => uast(
    type: "Synthetic"
)

identifier <- (identifier) => uast(
    type: "If"
)

if <- (if) => uast(
    type: "If"
)

import <- (import) => uast(
    type: "Import",
    roles: "Import"
)

inline <- (inline) => uast(
    type: "Synthetic"
)

literal_suffix <- (literal_suffix) => uast(
    type: "Literal",
    roles: "Literal"
)

long <- (long) => uast(
    type: "Synthetic"
)

module <- (module) => uast(
    type: "Module",
    roles: "Module"
)

ms_restrict_modifier <- (ms_restrict_modifier) => uast(
    type: "If"
)

ms_signed_ptr_modifier <- (ms_signed_ptr_modifier) => uast(
    type: "If"
)

ms_unsigned_ptr_modifier <- (ms_unsigned_ptr_modifier) => uast(
    type: "If"
)

mutable <- (mutable) => uast(
    type: "Synthetic"
)

namespace <- (namespace) => uast(
    type: "Namespace",
    roles: "Module"
)

namespace_identifier <- (namespace_identifier) => uast(
    type: "If"
)

new <- (new) => uast(
    type: "Synthetic"
)

noexcept <- (noexcept) => uast(
    type: "Synthetic"
)

noreturn <- (noreturn) => uast(
    type: "Return",
    roles: "Return"
)

not <- (not) => uast(
    type: "Synthetic"
)

not_eq <- (not_eq) => uast(
    type: "Synthetic"
)

nullptr <- (nullptr) => uast(
    type: "Synthetic"
)

number_literal <- (number_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

offsetof <- (offsetof) => uast(
    type: "Set"
)

operator <- (operator) => uast(
    type: "Synthetic"
)

or <- (or) => uast(
    type: "Synthetic"
)

or_eq <- (or_eq) => uast(
    type: "Synthetic"
)

override <- (override) => uast(
    type: "Synthetic"
)

preproc_arg <- (preproc_arg) => uast(
    type: "Synthetic"
)

preproc_directive <- (preproc_directive) => uast(
    type: "Synthetic"
)

primitive_type <- (primitive_type) => uast(
    type: "Synthetic"
)

private <- (private) => uast(
    type: "Synthetic"
)

protected <- (protected) => uast(
    type: "Synthetic"
)

public <- (public) => uast(
    type: "Synthetic"
)

raw_string_content <- (raw_string_content) => uast(
    type: "Synthetic"
)

raw_string_delimiter <- (raw_string_delimiter) => uast(
    type: "Synthetic"
)

register <- (register) => uast(
    type: "Synthetic"
)

requires <- (requires) => uast(
    type: "Synthetic"
)

restrict <- (restrict) => uast(
    type: "Synthetic"
)

return <- (return) => uast(
    type: "Return",
    roles: "Return"
)

short <- (short) => uast(
    type: "Synthetic"
)

signed <- (signed) => uast(
    type: "Synthetic"
)

sizeof <- (sizeof) => uast(
    type: "Synthetic"
)

statement_identifier <- (statement_identifier) => uast(
    type: "If"
)

static <- (static) => uast(
    type: "Synthetic"
)

static_assert <- (static_assert) => uast(
    type: "Synthetic"
)

string_content <- (string_content) => uast(
    type: "Synthetic"
)

struct <- (struct) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
)

switch <- (switch) => uast(
    type: "Switch"
)

system_lib_string <- (system_lib_string) => uast(
    type: "Synthetic"
)

template <- (template) => uast(
    type: "Synthetic"
)

this <- (this) => uast(
    type: "Synthetic"
)

thread_local <- (thread_local) => uast(
    type: "Synthetic"
)

throw <- (throw) => uast(
    type: "Throw",
    roles: "Throw"
)

true <- (true) => uast(
    type: "Synthetic"
)

try <- (try) => uast(
    type: "Try",
    roles: "Try"
)

type_identifier <- (type_identifier) => uast(
    type: "If"
)

typedef <- (typedef) => uast(
    type: "Synthetic"
)

typename <- (typename) => uast(
    type: "Synthetic"
)

union <- (union) => uast(
    type: "Synthetic"
)

unsigned <- (unsigned) => uast(
    type: "Synthetic"
)

using <- (using) => uast(
    type: "Synthetic"
)

virtual <- (virtual) => uast(
    type: "Synthetic"
)

volatile <- (volatile) => uast(
    type: "Synthetic"
)

while <- (while) => uast(
    type: "Loop",
    roles: "Loop"
)

xor <- (xor) => uast(
    type: "Synthetic"
)

xor_eq <- (xor_eq) => uast(
    type: "Synthetic"
)

