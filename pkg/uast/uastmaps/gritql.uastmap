addOperation <- (addOperation) => uast(
    type: "Synthetic",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

assignmentAsPattern <- (assignmentAsPattern) => uast(
    type: "Assignment",
    roles: "Assignment",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

bubble <- (bubble) => uast(
    type: "Synthetic",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

codeSnippet <- (codeSnippet) => uast(
    type: "Synthetic",
    children: "backtickSnippet", "languageSpecificSnippet", "rawBacktickSnippet"
)

definition <- (definition) => uast(
    type: "Synthetic",
    children: "foreignFunctionDefinition", "functionDefinition", "patternDefinition", "predicateDefinition"
)

divOperation <- (divOperation) => uast(
    type: "Synthetic",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

dot <- (dot) => uast(
    type: "Synthetic"
)

dotdotdot <- (dotdotdot) => uast(
    type: "Synthetic"
)

every <- (every) => uast(
    type: "Synthetic",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

files <- (files) => uast(
    type: "Synthetic",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

foreignFunctionBody <- (foreignFunctionBody) => uast(
    type: "Function",
    roles: "Function", "Declaration",
    children: "foreignLanguageCode"
)

foreignFunctionDefinition <- (foreignFunctionDefinition) => uast(
    type: "Function",
    roles: "Function", "Declaration",
    children: "foreignFunctionBody", "foreignLanguageName", "name", "variable"
)

foreignLanguageCode <- (foreignLanguageCode) => uast(
    type: "Loop",
    roles: "Loop"
)

foreignLanguageName <- (foreignLanguageName) => uast(
    type: "Loop",
    roles: "Loop"
)

functionDefinition <- (functionDefinition) => uast(
    type: "Function",
    roles: "Function", "Declaration",
    children: "functionDefinitionBody", "name", "variable"
)

functionDefinitionBody <- (functionDefinitionBody) => uast(
    type: "Function",
    roles: "Function", "Declaration",
    children: "booleanConstant", "log", "predicateAccumulate", "predicateAnd", "predicateAny", "predicateAssignment", "predicateCall", "predicateEqual", "predicateGreater", "predicateGreaterEqual", "predicateIfElse", "predicateLess", "predicateLessEqual", "predicateMatch", "predicateMaybe", "predicateNot", "predicateNotEqual", "predicateOr", "predicateReturn", "predicateRewrite"
)

langdecl <- (langdecl) => uast(
    type: "Synthetic",
    children: "languageName", "language_flavor"
)

languageName <- (languageName) => uast(
    type: "Synthetic"
)

languageSpecificSnippet <- (languageSpecificSnippet) => uast(
    type: "If",
    children: "doubleQuoteSnippet", "languageName"
)

like <- (like) => uast(
    type: "Synthetic",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

list <- (list) => uast(
    type: "List",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "dotdotdot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

listIndex <- (listIndex) => uast(
    type: "List",
    children: "list", "listIndex", "mapAccessor", "signedIntConstant", "variable"
)

log <- (log) => uast(
    type: "Synthetic",
    children: "stringConstant", "variable"
)

map <- (map) => uast(
    type: "Synthetic",
    children: "mapElement"
)

mapAccessor <- (mapAccessor) => uast(
    type: "Synthetic",
    children: "listIndex", "map", "mapAccessor", "name", "variable"
)

mapElement <- (mapElement) => uast(
    type: "Synthetic",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "name", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

modOperation <- (modOperation) => uast(
    type: "Synthetic",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

mulOperation <- (mulOperation) => uast(
    type: "Synthetic",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

namedArg <- (namedArg) => uast(
    type: "Synthetic",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "name", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

nodeLike <- (nodeLike) => uast(
    type: "Synthetic",
    children: "name", "namedArg"
)

patternAccumulate <- (patternAccumulate) => uast(
    type: "Pattern",
    roles: "Pattern",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

patternAfter <- (patternAfter) => uast(
    type: "Pattern",
    roles: "Pattern",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

patternAnd <- (patternAnd) => uast(
    type: "Pattern",
    roles: "Pattern",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

patternAny <- (patternAny) => uast(
    type: "Pattern",
    roles: "Pattern",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

patternAs <- (patternAs) => uast(
    type: "Pattern",
    roles: "Pattern",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

patternBefore <- (patternBefore) => uast(
    type: "Loop",
    roles: "Loop",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

patternContains <- (patternContains) => uast(
    type: "Pattern",
    roles: "Pattern",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

patternDefinition <- (patternDefinition) => uast(
    type: "Pattern",
    roles: "Pattern",
    children: "langdecl", "name", "patternDefinitionBody", "private", "variable"
)

patternDefinitionBody <- (patternDefinitionBody) => uast(
    type: "Pattern",
    roles: "Pattern",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

patternIfElse <- (patternIfElse) => uast(
    type: "If",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "predicateAccumulate", "predicateAnd", "predicateAny", "predicateAssignment", "predicateCall", "predicateEqual", "predicateGreater", "predicateGreaterEqual", "predicateIfElse", "predicateLess", "predicateLessEqual", "predicateMatch", "predicateMaybe", "predicateNot", "predicateNotEqual", "predicateOr", "predicateReturn", "predicateRewrite", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

patternIncludes <- (patternIncludes) => uast(
    type: "Pattern",
    roles: "Pattern",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

patternLimit <- (patternLimit) => uast(
    type: "Pattern",
    roles: "Pattern",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

patternMaybe <- (patternMaybe) => uast(
    type: "Pattern",
    roles: "Pattern",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

patternNot <- (patternNot) => uast(
    type: "Pattern",
    roles: "Pattern",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

patternOr <- (patternOr) => uast(
    type: "Pattern",
    roles: "Pattern",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

patternOrElse <- (patternOrElse) => uast(
    type: "Pattern",
    roles: "Pattern",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

patternWhere <- (patternWhere) => uast(
    type: "Pattern",
    roles: "Pattern",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "predicateAccumulate", "predicateAnd", "predicateAny", "predicateAssignment", "predicateCall", "predicateEqual", "predicateGreater", "predicateGreaterEqual", "predicateIfElse", "predicateLess", "predicateLessEqual", "predicateMatch", "predicateMaybe", "predicateNot", "predicateNotEqual", "predicateOr", "predicateReturn", "predicateRewrite", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

predicateAccumulate <- (predicateAccumulate) => uast(
    type: "Synthetic",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

predicateAnd <- (predicateAnd) => uast(
    type: "Synthetic",
    children: "booleanConstant", "log", "predicateAccumulate", "predicateAnd", "predicateAny", "predicateAssignment", "predicateCall", "predicateEqual", "predicateGreater", "predicateGreaterEqual", "predicateIfElse", "predicateLess", "predicateLessEqual", "predicateMatch", "predicateMaybe", "predicateNot", "predicateNotEqual", "predicateOr", "predicateReturn", "predicateRewrite"
)

predicateAny <- (predicateAny) => uast(
    type: "Synthetic",
    children: "booleanConstant", "log", "predicateAccumulate", "predicateAnd", "predicateAny", "predicateAssignment", "predicateCall", "predicateEqual", "predicateGreater", "predicateGreaterEqual", "predicateIfElse", "predicateLess", "predicateLessEqual", "predicateMatch", "predicateMaybe", "predicateNot", "predicateNotEqual", "predicateOr", "predicateReturn", "predicateRewrite"
)

predicateAssignment <- (predicateAssignment) => uast(
    type: "Assignment",
    roles: "Assignment",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

predicateCall <- (predicateCall) => uast(
    type: "Call",
    roles: "Call",
    children: "name", "namedArg"
)

predicateDefinition <- (predicateDefinition) => uast(
    type: "Synthetic",
    children: "name", "predicateDefinitionBody", "variable"
)

predicateDefinitionBody <- (predicateDefinitionBody) => uast(
    type: "Synthetic",
    children: "booleanConstant", "log", "predicateAccumulate", "predicateAnd", "predicateAny", "predicateAssignment", "predicateCall", "predicateEqual", "predicateGreater", "predicateGreaterEqual", "predicateIfElse", "predicateLess", "predicateLessEqual", "predicateMatch", "predicateMaybe", "predicateNot", "predicateNotEqual", "predicateOr", "predicateReturn", "predicateRewrite"
)

predicateEqual <- (predicateEqual) => uast(
    type: "Synthetic",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

predicateGreater <- (predicateGreater) => uast(
    type: "Synthetic",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

predicateGreaterEqual <- (predicateGreaterEqual) => uast(
    type: "Synthetic",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

predicateIfElse <- (predicateIfElse) => uast(
    type: "If",
    children: "booleanConstant", "log", "predicateAccumulate", "predicateAnd", "predicateAny", "predicateAssignment", "predicateCall", "predicateEqual", "predicateGreater", "predicateGreaterEqual", "predicateIfElse", "predicateLess", "predicateLessEqual", "predicateMatch", "predicateMaybe", "predicateNot", "predicateNotEqual", "predicateOr", "predicateReturn", "predicateRewrite"
)

predicateLess <- (predicateLess) => uast(
    type: "Synthetic",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

predicateLessEqual <- (predicateLessEqual) => uast(
    type: "Synthetic",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

predicateMatch <- (predicateMatch) => uast(
    type: "Match",
    roles: "Match",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

predicateMaybe <- (predicateMaybe) => uast(
    type: "Synthetic",
    children: "booleanConstant", "log", "predicateAccumulate", "predicateAnd", "predicateAny", "predicateAssignment", "predicateCall", "predicateEqual", "predicateGreater", "predicateGreaterEqual", "predicateIfElse", "predicateLess", "predicateLessEqual", "predicateMatch", "predicateMaybe", "predicateNot", "predicateNotEqual", "predicateOr", "predicateReturn", "predicateRewrite"
)

predicateNot <- (predicateNot) => uast(
    type: "Synthetic",
    children: "booleanConstant", "log", "predicateAccumulate", "predicateAnd", "predicateAny", "predicateAssignment", "predicateCall", "predicateEqual", "predicateGreater", "predicateGreaterEqual", "predicateIfElse", "predicateLess", "predicateLessEqual", "predicateMatch", "predicateMaybe", "predicateNot", "predicateNotEqual", "predicateOr", "predicateReturn", "predicateRewrite"
)

predicateNotEqual <- (predicateNotEqual) => uast(
    type: "Synthetic",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

predicateOr <- (predicateOr) => uast(
    type: "Synthetic",
    children: "booleanConstant", "log", "predicateAccumulate", "predicateAnd", "predicateAny", "predicateAssignment", "predicateCall", "predicateEqual", "predicateGreater", "predicateGreaterEqual", "predicateIfElse", "predicateLess", "predicateLessEqual", "predicateMatch", "predicateMaybe", "predicateNot", "predicateNotEqual", "predicateOr", "predicateReturn", "predicateRewrite"
)

predicateReturn <- (predicateReturn) => uast(
    type: "Return",
    roles: "Return",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

predicateRewrite <- (predicateRewrite) => uast(
    type: "Synthetic",
    children: "addOperation", "annotation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

range <- (range) => uast(
    type: "Synthetic",
    children: "intConstant"
)

regexPattern <- (regexPattern) => uast(
    type: "Pattern",
    roles: "Pattern",
    children: "regex", "snippetRegex", "variable"
)

rewrite <- (rewrite) => uast(
    type: "Synthetic",
    children: "addOperation", "annotation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

sequential <- (sequential) => uast(
    type: "Synthetic",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

snippetRegex <- (snippetRegex) => uast(
    type: "Synthetic",
    children: "backtickSnippet"
)

some <- (some) => uast(
    type: "Synthetic",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

source_file <- (source_file) => uast(
    type: "Synthetic",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "definition", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "langdecl", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "version", "within"
)

subOperation <- (subOperation) => uast(
    type: "Synthetic",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

version <- (version) => uast(
    type: "Synthetic"
)

within <- (within) => uast(
    type: "Synthetic",
    children: "addOperation", "assignmentAsPattern", "booleanConstant", "bottom", "bubble", "codeSnippet", "divOperation", "dot", "doubleConstant", "every", "files", "intConstant", "like", "list", "listIndex", "log", "map", "mapAccessor", "modOperation", "mulOperation", "nodeLike", "patternAccumulate", "patternAfter", "patternAnd", "patternAny", "patternAs", "patternBefore", "patternContains", "patternIfElse", "patternIncludes", "patternLimit", "patternMaybe", "patternNot", "patternOr", "patternOrElse", "patternWhere", "range", "regexPattern", "rewrite", "sequential", "some", "stringConstant", "subOperation", "top", "undefined", "underscore", "variable", "within"
)

after <- (after) => uast(
    type: "Synthetic"
)

and <- (and) => uast(
    type: "Synthetic"
)

annotation <- (annotation) => uast(
    type: "Synthetic"
)

any <- (any) => uast(
    type: "Synthetic"
)

as <- (as) => uast(
    type: "Synthetic"
)

ast <- (ast) => uast(
    type: "Synthetic"
)

backtickSnippet <- (backtickSnippet) => uast(
    type: "Synthetic"
)

before <- (before) => uast(
    type: "Loop",
    roles: "Loop"
)

booleanConstant <- (booleanConstant) => uast(
    type: "Synthetic"
)

bottom <- (bottom) => uast(
    type: "Synthetic"
)

bubble <- (bubble) => uast(
    type: "Synthetic"
)

c <- (c) => uast(
    type: "Synthetic"
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
)

contains <- (contains) => uast(
    type: "Synthetic"
)

cpp <- (cpp) => uast(
    type: "Synthetic"
)

csharp <- (csharp) => uast(
    type: "Synthetic"
)

css <- (css) => uast(
    type: "Synthetic"
)

doubleConstant <- (doubleConstant) => uast(
    type: "Synthetic"
)

doubleQuoteSnippet <- (doubleQuoteSnippet) => uast(
    type: "Synthetic"
)

elixir <- (elixir) => uast(
    type: "Synthetic"
)

else <- (else) => uast(
    type: "Synthetic"
)

end_column <- (end_column) => uast(
    type: "Synthetic"
)

end_line <- (end_line) => uast(
    type: "Synthetic"
)

every <- (every) => uast(
    type: "Synthetic"
)

go <- (go) => uast(
    type: "Synthetic"
)

grit <- (grit) => uast(
    type: "Synthetic"
)

hcl <- (hcl) => uast(
    type: "Synthetic"
)

html <- (html) => uast(
    type: "Synthetic"
)

if <- (if) => uast(
    type: "If"
)

includes <- (includes) => uast(
    type: "Synthetic"
)

intConstant <- (intConstant) => uast(
    type: "Synthetic"
)

java <- (java) => uast(
    type: "Synthetic"
)

js <- (js) => uast(
    type: "Synthetic"
)

json <- (json) => uast(
    type: "Synthetic"
)

kotlin <- (kotlin) => uast(
    type: "Synthetic"
)

language <- (language) => uast(
    type: "Synthetic"
)

language_flavor <- (language_flavor) => uast(
    type: "Synthetic"
)

like <- (like) => uast(
    type: "Synthetic"
)

limit <- (limit) => uast(
    type: "Synthetic"
)

markdown <- (markdown) => uast(
    type: "Synthetic"
)

marzano <- (marzano) => uast(
    type: "Synthetic"
)

maybe <- (maybe) => uast(
    type: "Synthetic"
)

message <- (message) => uast(
    type: "Synthetic"
)

multifile <- (multifile) => uast(
    type: "If"
)

name <- (name) => uast(
    type: "Synthetic"
)

noBraces <- (noBraces) => uast(
    type: "Synthetic"
)

not <- (not) => uast(
    type: "Synthetic"
)

or <- (or) => uast(
    type: "Synthetic"
)

orelse <- (orelse) => uast(
    type: "Synthetic"
)

php <- (php) => uast(
    type: "Synthetic"
)

private <- (private) => uast(
    type: "Synthetic"
)

python <- (python) => uast(
    type: "Synthetic"
)

r <- (r) => uast(
    type: "Synthetic"
)

rawBacktickSnippet <- (rawBacktickSnippet) => uast(
    type: "Synthetic"
)

regex <- (regex) => uast(
    type: "Synthetic"
)

return <- (return) => uast(
    type: "Return",
    roles: "Return"
)

ruby <- (ruby) => uast(
    type: "Synthetic"
)

rust <- (rust) => uast(
    type: "Synthetic"
)

sequential <- (sequential) => uast(
    type: "Synthetic"
)

signedIntConstant <- (signedIntConstant) => uast(
    type: "Synthetic"
)

sol <- (sol) => uast(
    type: "Synthetic"
)

solidity <- (solidity) => uast(
    type: "Synthetic"
)

some <- (some) => uast(
    type: "Synthetic"
)

sql <- (sql) => uast(
    type: "Synthetic"
)

start_column <- (start_column) => uast(
    type: "Synthetic"
)

start_line <- (start_line) => uast(
    type: "Synthetic"
)

stringConstant <- (stringConstant) => uast(
    type: "Synthetic"
)

toml <- (toml) => uast(
    type: "Synthetic"
)

top <- (top) => uast(
    type: "Synthetic"
)

undefined <- (undefined) => uast(
    type: "Synthetic"
)

underscore <- (underscore) => uast(
    type: "Synthetic"
)

universal <- (universal) => uast(
    type: "Synthetic"
)

until <- (until) => uast(
    type: "Synthetic"
)

variable <- (variable) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
)

variable <- (variable) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
)

where <- (where) => uast(
    type: "Synthetic"
)

within <- (within) => uast(
    type: "Synthetic"
)

yaml <- (yaml) => uast(
    type: "Synthetic"
)

