binop <- (binop) => uast(
    type: "Synthetic",
    children: []
)

binop_keyword <- (binop_keyword) => uast(
    type: "Synthetic",
    children: []
)

bool <- (bool) => uast(
    type: "Synthetic",
    children: []
)

expr_binop <- (expr_binop) => uast(
    type: "Synthetic",
    children: []
)

expr_call <- (expr_call) => uast(
    type: "Call",
    roles: "Call"
    children: "bool", "expr_binop", "expr_call", "expr_field", "expr_function", "expr_if", "expr_import", "expr_index", "expr_stmt", "expr_term_braces", "expr_term_brackets", "expr_term_parens", "expr_unop", "ident", "null", "number", "string"
)

expr_field <- (expr_field) => uast(
    type: "Field",
    roles: "Member"
    children: "bool", "expr_call", "expr_field", "expr_index", "expr_term_braces", "expr_term_brackets", "expr_term_parens", "ident", "null", "number", "string"
)

expr_function <- (expr_function) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: "bool", "expr_binop", "expr_call", "expr_field", "expr_function", "expr_if", "expr_import", "expr_index", "expr_stmt", "expr_term_braces", "expr_term_brackets", "expr_term_parens", "expr_unop", "function_args", "ident", "null", "number", "string"
)

expr_if <- (expr_if) => uast(
    type: "If",
    children: "bool", "expr_binop", "expr_call", "expr_field", "expr_function", "expr_if", "expr_import", "expr_index", "expr_stmt", "expr_term_braces", "expr_term_brackets", "expr_term_parens", "expr_unop", "ident", "null", "number", "string"
)

expr_import <- (expr_import) => uast(
    type: "Import",
    roles: "Import"
    children: []
)

expr_index <- (expr_index) => uast(
    type: "Index",
    roles: "Index"
    children: "bool", "expr_binop", "expr_call", "expr_field", "expr_function", "expr_if", "expr_import", "expr_index", "expr_stmt", "expr_term_braces", "expr_term_brackets", "expr_term_parens", "expr_unop", "ident", "null", "number", "string"
)

expr_stmt <- (expr_stmt) => uast(
    type: "Synthetic",
    children: []
)

expr_term_braces <- (expr_term_braces) => uast(
    type: "Synthetic",
    children: []
)

expr_term_brackets <- (expr_term_brackets) => uast(
    type: "Synthetic",
    children: []
)

expr_term_parens <- (expr_term_parens) => uast(
    type: "Synthetic",
    children: []
)

expr_unop <- (expr_unop) => uast(
    type: "Synthetic",
    children: []
)

fstring_double <- (fstring_double) => uast(
    type: "Synthetic",
    children: []
)

fstring_triple <- (fstring_triple) => uast(
    type: "Synthetic",
    children: []
)

function_args <- (function_args) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

number <- (number) => uast(
    type: "Synthetic",
    children: []
)

seq_assoc_expr <- (seq_assoc_expr) => uast(
    type: "Synthetic",
    children: "bool", "expr_binop", "expr_call", "expr_field", "expr_function", "expr_if", "expr_import", "expr_index", "expr_stmt", "expr_term_braces", "expr_term_brackets", "expr_term_parens", "expr_unop", "ident", "null", "number", "string"
)

seq_assoc_ident <- (seq_assoc_ident) => uast(
    type: "Synthetic",
    children: "bool", "expr_binop", "expr_call", "expr_field", "expr_function", "expr_if", "expr_import", "expr_index", "expr_stmt", "expr_term_braces", "expr_term_brackets", "expr_term_parens", "expr_unop", "ident", "null", "number", "string"
)

seq_elem <- (seq_elem) => uast(
    type: "Synthetic",
    children: []
)

seq_for <- (seq_for) => uast(
    type: "Loop",
    roles: "Loop"
    children: "bool", "expr_binop", "expr_call", "expr_field", "expr_function", "expr_if", "expr_import", "expr_index", "expr_term_braces", "expr_term_brackets", "expr_term_parens", "expr_unop", "ident", "null", "number", "seq_assoc_expr", "seq_assoc_ident", "seq_elem", "seq_for", "seq_if", "seq_stmt", "string"
)

seq_if <- (seq_if) => uast(
    type: "If",
    children: "bool", "expr_binop", "expr_call", "expr_field", "expr_function", "expr_if", "expr_import", "expr_index", "expr_term_braces", "expr_term_brackets", "expr_term_parens", "expr_unop", "ident", "null", "number", "seq_assoc_expr", "seq_assoc_ident", "seq_elem", "seq_for", "seq_if", "seq_stmt", "string"
)

seq_stmt <- (seq_stmt) => uast(
    type: "Synthetic",
    children: []
)

source_file <- (source_file) => uast(
    type: "Synthetic",
    children: []
)

stmt_assert <- (stmt_assert) => uast(
    type: "Synthetic",
    children: "bool", "expr_binop", "expr_call", "expr_field", "expr_function", "expr_if", "expr_import", "expr_index", "expr_stmt", "expr_term_braces", "expr_term_brackets", "expr_term_parens", "expr_unop", "ident", "null", "number", "string"
)

stmt_let <- (stmt_let) => uast(
    type: "Synthetic",
    children: "bool", "expr_binop", "expr_call", "expr_field", "expr_function", "expr_if", "expr_import", "expr_index", "expr_stmt", "expr_term_braces", "expr_term_brackets", "expr_term_parens", "expr_unop", "ident", "null", "number", "string", "type_apply", "type_function", "type_term"
)

stmt_trace <- (stmt_trace) => uast(
    type: "Synthetic",
    children: "bool", "expr_binop", "expr_call", "expr_field", "expr_function", "expr_if", "expr_import", "expr_index", "expr_stmt", "expr_term_braces", "expr_term_brackets", "expr_term_parens", "expr_unop", "ident", "null", "number", "string"
)

string <- (string) => uast(
    type: "Synthetic",
    children: []
)

string_double <- (string_double) => uast(
    type: "Synthetic",
    children: []
)

string_hole <- (string_hole) => uast(
    type: "Synthetic",
    children: []
)

string_triple <- (string_triple) => uast(
    type: "Synthetic",
    children: []
)

type_apply <- (type_apply) => uast(
    type: "Synthetic",
    children: "type_apply", "type_function", "type_term"
)

type_function <- (type_function) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: "type_apply", "type_function", "type_term"
)

type_term <- (type_term) => uast(
    type: "Synthetic",
    children: []
)

unop <- (unop) => uast(
    type: "Synthetic",
    children: []
)

unop_keyword <- (unop_keyword) => uast(
    type: "Synthetic",
    children: []
)

and <- (and) => uast(
    type: "Synthetic",
    children: []
)

assert <- (assert) => uast(
    type: "Synthetic",
    children: []
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
    children: []
)

else <- (else) => uast(
    type: "Synthetic",
    children: []
)

false <- (false) => uast(
    type: "Synthetic",
    children: []
)

for <- (for) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

ident <- (ident) => uast(
    type: "Synthetic",
    children: []
)

if <- (if) => uast(
    type: "If",
    children: []
)

import <- (import) => uast(
    type: "Import",
    roles: "Import"
    children: []
)

in <- (in) => uast(
    type: "Synthetic",
    children: []
)

let <- (let) => uast(
    type: "Synthetic",
    children: []
)

not <- (not) => uast(
    type: "Synthetic",
    children: []
)

null <- (null) => uast(
    type: "Synthetic",
    children: []
)

num_binary <- (num_binary) => uast(
    type: "Synthetic",
    children: []
)

num_decimal <- (num_decimal) => uast(
    type: "Synthetic",
    children: []
)

num_hexadecimal <- (num_hexadecimal) => uast(
    type: "Synthetic",
    children: []
)

or <- (or) => uast(
    type: "Synthetic",
    children: []
)

shebang <- (shebang) => uast(
    type: "Synthetic",
    children: []
)

string_escape <- (string_escape) => uast(
    type: "Synthetic",
    children: []
)

trace <- (trace) => uast(
    type: "Synthetic",
    children: []
)

true <- (true) => uast(
    type: "Synthetic",
    children: []
)

