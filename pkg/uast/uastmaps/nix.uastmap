_expression <- (_expression) => uast(
    type: "Synthetic",
    children: []
)

apply_expression <- (apply_expression) => uast(
    type: "Synthetic",
    children: "apply_expression", "attrset_expression", "float_expression", "hpath_expression", "indented_string_expression", "integer_expression", "let_attrset_expression", "list_expression", "parenthesized_expression", "path_expression", "rec_attrset_expression", "select_expression", "spath_expression", "string_expression", "uri_expression", "variable_expression"
)

assert_expression <- (assert_expression) => uast(
    type: "Synthetic",
    children: "_expression", "apply_expression", "assert_expression", "attrset_expression", "binary_expression", "float_expression", "function_expression", "has_attr_expression", "hpath_expression", "if_expression", "indented_string_expression", "integer_expression", "let_attrset_expression", "let_expression", "list_expression", "parenthesized_expression", "path_expression", "rec_attrset_expression", "select_expression", "spath_expression", "string_expression", "unary_expression", "uri_expression", "variable_expression", "with_expression"
)

attrpath <- (attrpath) => uast(
    type: "Synthetic",
    children: "identifier", "interpolation", "string_expression"
)

attrset_expression <- (attrset_expression) => uast(
    type: "Set",
    children: []
)

binary_expression <- (binary_expression) => uast(
    type: "Synthetic",
    children: "apply_expression", "attrset_expression", "binary_expression", "float_expression", "has_attr_expression", "hpath_expression", "indented_string_expression", "integer_expression", "let_attrset_expression", "list_expression", "parenthesized_expression", "path_expression", "rec_attrset_expression", "select_expression", "spath_expression", "string_expression", "unary_expression", "uri_expression", "variable_expression"
)

binding <- (binding) => uast(
    type: "Synthetic",
    children: "_expression", "attrpath"
)

binding_set <- (binding_set) => uast(
    type: "Set",
    children: "binding", "inherit", "inherit_from"
)

formal <- (formal) => uast(
    type: "Loop",
    roles: "Loop"
    children: "_expression", "identifier"
)

formals <- (formals) => uast(
    type: "Loop",
    roles: "Loop"
    children: "ellipses", "formal"
)

function_expression <- (function_expression) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: "apply_expression", "assert_expression", "attrset_expression", "binary_expression", "float_expression", "formals", "function_expression", "has_attr_expression", "hpath_expression", "identifier", "if_expression", "indented_string_expression", "integer_expression", "let_attrset_expression", "let_expression", "list_expression", "parenthesized_expression", "path_expression", "rec_attrset_expression", "select_expression", "spath_expression", "string_expression", "unary_expression", "uri_expression", "variable_expression", "with_expression"
)

has_attr_expression <- (has_attr_expression) => uast(
    type: "Synthetic",
    children: "apply_expression", "attrpath", "attrset_expression", "binary_expression", "float_expression", "has_attr_expression", "hpath_expression", "indented_string_expression", "integer_expression", "let_attrset_expression", "list_expression", "parenthesized_expression", "path_expression", "rec_attrset_expression", "select_expression", "spath_expression", "string_expression", "unary_expression", "uri_expression", "variable_expression"
)

hpath_expression <- (hpath_expression) => uast(
    type: "Synthetic",
    children: []
)

if_expression <- (if_expression) => uast(
    type: "If",
    children: "_expression"
)

indented_string_expression <- (indented_string_expression) => uast(
    type: "Synthetic",
    children: []
)

inherit <- (inherit) => uast(
    type: "Synthetic",
    children: "inherited_attrs"
)

inherit_from <- (inherit_from) => uast(
    type: "Synthetic",
    children: "_expression", "inherited_attrs"
)

inherited_attrs <- (inherited_attrs) => uast(
    type: "Synthetic",
    children: "identifier", "interpolation", "string_expression"
)

interpolation <- (interpolation) => uast(
    type: "Synthetic",
    children: "_expression"
)

let_attrset_expression <- (let_attrset_expression) => uast(
    type: "Set",
    children: []
)

let_expression <- (let_expression) => uast(
    type: "Synthetic",
    children: "apply_expression", "assert_expression", "attrset_expression", "binary_expression", "float_expression", "function_expression", "has_attr_expression", "hpath_expression", "if_expression", "indented_string_expression", "integer_expression", "let_attrset_expression", "let_expression", "list_expression", "parenthesized_expression", "path_expression", "rec_attrset_expression", "select_expression", "spath_expression", "string_expression", "unary_expression", "uri_expression", "variable_expression", "with_expression"
)

list_expression <- (list_expression) => uast(
    type: "List",
    children: "attrset_expression", "float_expression", "hpath_expression", "indented_string_expression", "integer_expression", "let_attrset_expression", "list_expression", "parenthesized_expression", "path_expression", "rec_attrset_expression", "select_expression", "spath_expression", "string_expression", "uri_expression", "variable_expression"
)

parenthesized_expression <- (parenthesized_expression) => uast(
    type: "Synthetic",
    children: "_expression"
)

path_expression <- (path_expression) => uast(
    type: "Synthetic",
    children: []
)

rec_attrset_expression <- (rec_attrset_expression) => uast(
    type: "Set",
    children: []
)

select_expression <- (select_expression) => uast(
    type: "Synthetic",
    children: "attrpath", "attrset_expression", "float_expression", "hpath_expression", "indented_string_expression", "integer_expression", "let_attrset_expression", "list_expression", "parenthesized_expression", "path_expression", "rec_attrset_expression", "select_expression", "spath_expression", "string_expression", "uri_expression", "variable_expression"
)

source_code <- (source_code) => uast(
    type: "Synthetic",
    children: "_expression"
)

string_expression <- (string_expression) => uast(
    type: "Synthetic",
    children: []
)

unary_expression <- (unary_expression) => uast(
    type: "Synthetic",
    children: "apply_expression", "attrset_expression", "binary_expression", "float_expression", "has_attr_expression", "hpath_expression", "indented_string_expression", "integer_expression", "let_attrset_expression", "list_expression", "parenthesized_expression", "path_expression", "rec_attrset_expression", "select_expression", "spath_expression", "string_expression", "unary_expression", "uri_expression", "variable_expression"
)

variable_expression <- (variable_expression) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
    children: "identifier"
)

with_expression <- (with_expression) => uast(
    type: "Synthetic",
    children: "_expression", "apply_expression", "assert_expression", "attrset_expression", "binary_expression", "float_expression", "function_expression", "has_attr_expression", "hpath_expression", "if_expression", "indented_string_expression", "integer_expression", "let_attrset_expression", "let_expression", "list_expression", "parenthesized_expression", "path_expression", "rec_attrset_expression", "select_expression", "spath_expression", "string_expression", "unary_expression", "uri_expression", "variable_expression", "with_expression"
)

assert <- (assert) => uast(
    type: "Synthetic",
    children: []
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
    children: []
)

dollar_escape <- (dollar_escape) => uast(
    type: "Synthetic",
    children: []
)

ellipses <- (ellipses) => uast(
    type: "Synthetic",
    children: []
)

else <- (else) => uast(
    type: "Synthetic",
    children: []
)

escape_sequence <- (escape_sequence) => uast(
    type: "Synthetic",
    children: []
)

float_expression <- (float_expression) => uast(
    type: "Synthetic",
    children: []
)

identifier <- (identifier) => uast(
    type: "If",
    children: []
)

if <- (if) => uast(
    type: "If",
    children: []
)

in <- (in) => uast(
    type: "Synthetic",
    children: []
)

inherit <- (inherit) => uast(
    type: "Synthetic",
    children: []
)

integer_expression <- (integer_expression) => uast(
    type: "Synthetic",
    children: []
)

let <- (let) => uast(
    type: "Synthetic",
    children: []
)

or <- (or) => uast(
    type: "Synthetic",
    children: []
)

path_fragment <- (path_fragment) => uast(
    type: "Synthetic",
    children: []
)

rec <- (rec) => uast(
    type: "Synthetic",
    children: []
)

spath_expression <- (spath_expression) => uast(
    type: "Synthetic",
    children: []
)

string_fragment <- (string_fragment) => uast(
    type: "Synthetic",
    children: []
)

then <- (then) => uast(
    type: "Synthetic",
    children: []
)

uri_expression <- (uri_expression) => uast(
    type: "Synthetic",
    children: []
)

with <- (with) => uast(
    type: "Synthetic",
    children: []
)

