alpine_attribute <- (alpine_attribute) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: []
)

attribute <- (attribute) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: []
)

attribute_name <- (attribute_name) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: []
)

attribute_value <- (attribute_value) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: []
)

blade_comment <- (blade_comment) => uast(
    type: "Comment",
    roles: "Comment"
    children: []
)

directive <- (directive) => uast(
    type: "Synthetic",
    children: []
)

directive_argument <- (directive_argument) => uast(
    type: "Synthetic",
    children: []
)

doctype <- (doctype) => uast(
    type: "Synthetic",
    children: []
)

document <- (document) => uast(
    type: "Synthetic",
    children: []
)

echo_statement <- (echo_statement) => uast(
    type: "Synthetic",
    children: []
)

element <- (element) => uast(
    type: "Synthetic",
    children: []
)

end_tag <- (end_tag) => uast(
    type: "Synthetic",
    children: []
)

erroneous_end_tag <- (erroneous_end_tag) => uast(
    type: "Synthetic",
    children: []
)

escaped_echo_statement <- (escaped_echo_statement) => uast(
    type: "Synthetic",
    children: []
)

expression_attribute <- (expression_attribute) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: []
)

php_directive <- (php_directive) => uast(
    type: "Synthetic",
    children: []
)

quoted_attribute_value <- (quoted_attribute_value) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: []
)

raw_text <- (raw_text) => uast(
    type: "Synthetic",
    children: []
)

script_element <- (script_element) => uast(
    type: "Synthetic",
    children: []
)

self_closing_tag <- (self_closing_tag) => uast(
    type: "Synthetic",
    children: []
)

start_tag <- (start_tag) => uast(
    type: "Synthetic",
    children: []
)

style_element <- (style_element) => uast(
    type: "Synthetic",
    children: []
)

text <- (text) => uast(
    type: "Synthetic",
    children: []
)

unescaped_echo_statement <- (unescaped_echo_statement) => uast(
    type: "Synthetic",
    children: []
)

auth <- (auth) => uast(
    type: "Synthetic",
    children: []
)

break <- (break) => uast(
    type: "Break",
    roles: "Break"
    children: []
)

can <- (can) => uast(
    type: "Synthetic",
    children: []
)

case <- (case) => uast(
    type: "Case",
    roles: "Branch"
    children: []
)

checked <- (checked) => uast(
    type: "Synthetic",
    children: []
)

class <- (class) => uast(
    type: "Class",
    roles: "Class", "Declaration"
    children: []
)

click <- (click) => uast(
    type: "Synthetic",
    children: []
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
    children: []
)

continue <- (continue) => uast(
    type: "Continue",
    roles: "Continue"
    children: []
)

csrf <- (csrf) => uast(
    type: "Synthetic",
    children: []
)

default <- (default) => uast(
    type: "Synthetic",
    children: []
)

disabled <- (disabled) => uast(
    type: "Synthetic",
    children: []
)

doctype <- (doctype) => uast(
    type: "Synthetic",
    children: []
)

each <- (each) => uast(
    type: "Synthetic",
    children: []
)

else <- (else) => uast(
    type: "Synthetic",
    children: []
)

empty <- (empty) => uast(
    type: "Synthetic",
    children: []
)

endPrependOnce <- (endPrependOnce) => uast(
    type: "Synthetic",
    children: []
)

endPushIf <- (endPushIf) => uast(
    type: "If",
    children: []
)

endPushOnce <- (endPushOnce) => uast(
    type: "Synthetic",
    children: []
)

endauth <- (endauth) => uast(
    type: "Synthetic",
    children: []
)

endcan <- (endcan) => uast(
    type: "Synthetic",
    children: []
)

endempty <- (endempty) => uast(
    type: "Synthetic",
    children: []
)

endenv <- (endenv) => uast(
    type: "Synthetic",
    children: []
)

enderror <- (enderror) => uast(
    type: "Synthetic",
    children: []
)

endfor <- (endfor) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

endforeach <- (endforeach) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

endforelse <- (endforelse) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

endfragment <- (endfragment) => uast(
    type: "Synthetic",
    children: []
)

endguest <- (endguest) => uast(
    type: "Synthetic",
    children: []
)

endif <- (endif) => uast(
    type: "If",
    children: []
)

endisset <- (endisset) => uast(
    type: "Set",
    children: []
)

endonce <- (endonce) => uast(
    type: "Synthetic",
    children: []
)

endproduction <- (endproduction) => uast(
    type: "Synthetic",
    children: []
)

endpush <- (endpush) => uast(
    type: "Synthetic",
    children: []
)

endsession <- (endsession) => uast(
    type: "Synthetic",
    children: []
)

endswitch <- (endswitch) => uast(
    type: "Switch",
    children: []
)

endunless <- (endunless) => uast(
    type: "Synthetic",
    children: []
)

endwhile <- (endwhile) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

entity <- (entity) => uast(
    type: "Synthetic",
    children: []
)

env <- (env) => uast(
    type: "Synthetic",
    children: []
)

erroneous_end_tag_name <- (erroneous_end_tag_name) => uast(
    type: "Synthetic",
    children: []
)

error <- (error) => uast(
    type: "Synthetic",
    children: []
)

for <- (for) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

foreach <- (foreach) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

forelse <- (forelse) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

fragment <- (fragment) => uast(
    type: "Synthetic",
    children: []
)

guest <- (guest) => uast(
    type: "Synthetic",
    children: []
)

hasSection <- (hasSection) => uast(
    type: "Synthetic",
    children: []
)

if <- (if) => uast(
    type: "If",
    children: []
)

include <- (include) => uast(
    type: "Synthetic",
    children: []
)

includeFirst <- (includeFirst) => uast(
    type: "Synthetic",
    children: []
)

includeIf <- (includeIf) => uast(
    type: "If",
    children: []
)

includeUnless <- (includeUnless) => uast(
    type: "Synthetic",
    children: []
)

includeWhen <- (includeWhen) => uast(
    type: "Synthetic",
    children: []
)

inject <- (inject) => uast(
    type: "Synthetic",
    children: []
)

isset <- (isset) => uast(
    type: "Set",
    children: []
)

livewire <- (livewire) => uast(
    type: "Synthetic",
    children: []
)

livewireScripts <- (livewireScripts) => uast(
    type: "Synthetic",
    children: []
)

livewireStyles <- (livewireStyles) => uast(
    type: "Synthetic",
    children: []
)

method <- (method) => uast(
    type: "Method",
    roles: "Function", "Declaration", "Member"
    children: []
)

once <- (once) => uast(
    type: "Synthetic",
    children: []
)

php <- (php) => uast(
    type: "Synthetic",
    children: []
)

prepend <- (prepend) => uast(
    type: "Synthetic",
    children: []
)

prependOnce <- (prependOnce) => uast(
    type: "Synthetic",
    children: []
)

production <- (production) => uast(
    type: "Synthetic",
    children: []
)

props <- (props) => uast(
    type: "Synthetic",
    children: []
)

push <- (push) => uast(
    type: "Synthetic",
    children: []
)

pushIf <- (pushIf) => uast(
    type: "If",
    children: []
)

pushOnce <- (pushOnce) => uast(
    type: "Synthetic",
    children: []
)

readonly <- (readonly) => uast(
    type: "Synthetic",
    children: []
)

required <- (required) => uast(
    type: "Synthetic",
    children: []
)

sectionMissing <- (sectionMissing) => uast(
    type: "Synthetic",
    children: []
)

selected <- (selected) => uast(
    type: "Synthetic",
    children: []
)

session <- (session) => uast(
    type: "Synthetic",
    children: []
)

stack <- (stack) => uast(
    type: "Synthetic",
    children: []
)

style <- (style) => uast(
    type: "Synthetic",
    children: []
)

switch <- (switch) => uast(
    type: "Switch",
    children: []
)

tag_name <- (tag_name) => uast(
    type: "Synthetic",
    children: []
)

unless <- (unless) => uast(
    type: "Synthetic",
    children: []
)

use <- (use) => uast(
    type: "Synthetic",
    children: []
)

vite <- (vite) => uast(
    type: "Synthetic",
    children: []
)

while <- (while) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

yield <- (yield) => uast(
    type: "Yield",
    roles: "Yield"
    children: []
)

