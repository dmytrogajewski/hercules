activation_statement <- (activation_statement) => uast(
    type: "Synthetic",
    children: "addition", "and_expression", "boolean_literal", "character_literal", "conditional_statement", "division", "equal", "eqv_expression", "exponentiation", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "integer_division", "is_expression", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "remote_identifier", "string_concat", "string_literal", "subtraction"
)

addition <- (addition) => uast(
    type: "Synthetic",
    children: "addition", "and_expression", "boolean_literal", "character_literal", "conditional_statement", "division", "equal", "eqv_expression", "exponentiation", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "integer_division", "is_expression", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "remote_identifier", "string_concat", "string_literal", "subtraction"
)

and_expression <- (and_expression) => uast(
    type: "Synthetic",
    children: "addition", "and_expression", "boolean_literal", "character_literal", "conditional_statement", "division", "equal", "eqv_expression", "exponentiation", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "integer_division", "is_expression", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "remote_identifier", "string_concat", "string_literal", "subtraction", "then"
)

array_declaration <- (array_declaration) => uast(
    type: "Synthetic",
    children: "addition", "and_expression", "boolean_literal", "character_literal", "conditional_statement", "division", "equal", "eqv_expression", "exponentiation", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "integer_division", "is_expression", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "remote_identifier", "string_concat", "string_literal", "subtraction", "type_expression"
)

begin <- (begin) => uast(
    type: "Synthetic"
)

block <- (block) => uast(
    type: "Block",
    roles: "Body",
    children: "procedure_statement"
)

boolean_literal <- (boolean_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

class_declaration <- (class_declaration) => uast(
    type: "Class",
    roles: "Class", "Declaration",
    children: "identifier", "specification"
)

conditional_statement <- (conditional_statement) => uast(
    type: "Synthetic",
    children: "activation_statement", "addition", "and_expression", "block", "boolean_literal", "character_literal", "conditional_statement", "connection_statement", "division", "equal", "eqv_expression", "exponentiation", "for_statement", "goto_statement", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "inner", "integer_division", "is_expression", "label_declaration", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "reference_assignment", "remote_identifier", "string_concat", "string_literal", "subtraction", "value_assignment", "while_statement"
)

connection_statement <- (connection_statement) => uast(
    type: "Synthetic",
    children: "activation_statement", "addition", "and_expression", "block", "boolean_literal", "character_literal", "conditional_statement", "connection_statement", "division", "equal", "eqv_expression", "exponentiation", "for_statement", "goto_statement", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "inner", "integer_division", "is_expression", "label_declaration", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "reference_assignment", "remote_identifier", "string_concat", "string_literal", "subtraction", "value_assignment", "while_statement"
)

division <- (division) => uast(
    type: "Synthetic",
    children: "addition", "and_expression", "boolean_literal", "character_literal", "conditional_statement", "division", "equal", "eqv_expression", "exponentiation", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "integer_division", "is_expression", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "remote_identifier", "string_concat", "string_literal", "subtraction"
)

do <- (do) => uast(
    type: "Synthetic"
)

end <- (end) => uast(
    type: "Synthetic"
)

equal <- (equal) => uast(
    type: "Synthetic",
    children: "addition", "and_expression", "boolean_literal", "character_literal", "conditional_statement", "division", "equal", "eqv_expression", "exponentiation", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "integer_division", "is_expression", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "remote_identifier", "string_concat", "string_literal", "subtraction"
)

eqv_expression <- (eqv_expression) => uast(
    type: "Synthetic",
    children: "addition", "and_expression", "boolean_literal", "character_literal", "conditional_statement", "division", "equal", "eqv_expression", "exponentiation", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "integer_division", "is_expression", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "remote_identifier", "string_concat", "string_literal", "subtraction"
)

exponentiation <- (exponentiation) => uast(
    type: "Synthetic",
    children: "addition", "and_expression", "boolean_literal", "character_literal", "conditional_statement", "division", "equal", "eqv_expression", "exponentiation", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "integer_division", "is_expression", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "remote_identifier", "string_concat", "string_literal", "subtraction"
)

external_class_declaration <- (external_class_declaration) => uast(
    type: "Class",
    roles: "Class", "Declaration"
)

external_item <- (external_item) => uast(
    type: "Synthetic",
    children: "identifier", "string_literal"
)

external_procedure_declaration <- (external_procedure_declaration) => uast(
    type: "Synthetic",
    children: "identifier", "type_expression"
)

for_statement <- (for_statement) => uast(
    type: "Loop",
    roles: "Loop",
    children: "activation_statement", "addition", "and_expression", "block", "boolean_literal", "character_literal", "conditional_statement", "connection_statement", "division", "equal", "eqv_expression", "exponentiation", "for_statement", "goto_statement", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "inner", "integer_division", "is_expression", "label_declaration", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "reference_assignment", "remote_identifier", "string_concat", "string_literal", "subtraction", "value_assignment", "while_statement"
)

goto <- (goto) => uast(
    type: "Synthetic"
)

goto_statement <- (goto_statement) => uast(
    type: "Synthetic",
    children: "procedure_statement"
)

greater_than <- (greater_than) => uast(
    type: "Synthetic",
    children: "addition", "and_expression", "boolean_literal", "character_literal", "conditional_statement", "division", "equal", "eqv_expression", "exponentiation", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "integer_division", "is_expression", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "remote_identifier", "string_concat", "string_literal", "subtraction"
)

greater_than_or_equal <- (greater_than_or_equal) => uast(
    type: "Synthetic",
    children: "addition", "and_expression", "boolean_literal", "character_literal", "conditional_statement", "division", "equal", "eqv_expression", "exponentiation", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "integer_division", "is_expression", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "remote_identifier", "string_concat", "string_literal", "subtraction"
)

imp_expression <- (imp_expression) => uast(
    type: "Synthetic",
    children: "addition", "and_expression", "boolean_literal", "character_literal", "conditional_statement", "division", "equal", "eqv_expression", "exponentiation", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "integer_division", "is_expression", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "remote_identifier", "string_concat", "string_literal", "subtraction"
)

in_expression <- (in_expression) => uast(
    type: "Synthetic",
    children: "addition", "and_expression", "boolean_literal", "character_literal", "conditional_statement", "division", "equal", "eqv_expression", "exponentiation", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "integer_division", "is_expression", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "remote_identifier", "string_concat", "string_literal", "subtraction"
)

integer_division <- (integer_division) => uast(
    type: "Synthetic",
    children: "addition", "and_expression", "boolean_literal", "character_literal", "conditional_statement", "division", "equal", "eqv_expression", "exponentiation", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "integer_division", "is_expression", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "remote_identifier", "string_concat", "string_literal", "subtraction"
)

is_expression <- (is_expression) => uast(
    type: "Synthetic",
    children: "addition", "and_expression", "boolean_literal", "character_literal", "conditional_statement", "division", "equal", "eqv_expression", "exponentiation", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "integer_division", "is_expression", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "remote_identifier", "string_concat", "string_literal", "subtraction"
)

label_declaration <- (label_declaration) => uast(
    type: "Synthetic"
)

less_than <- (less_than) => uast(
    type: "Synthetic",
    children: "addition", "and_expression", "boolean_literal", "character_literal", "conditional_statement", "division", "equal", "eqv_expression", "exponentiation", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "integer_division", "is_expression", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "remote_identifier", "string_concat", "string_literal", "subtraction"
)

less_than_or_equal <- (less_than_or_equal) => uast(
    type: "Synthetic",
    children: "addition", "and_expression", "boolean_literal", "character_literal", "conditional_statement", "division", "equal", "eqv_expression", "exponentiation", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "integer_division", "is_expression", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "remote_identifier", "string_concat", "string_literal", "subtraction"
)

local_object <- (local_object) => uast(
    type: "Synthetic",
    children: "identifier"
)

multiplication <- (multiplication) => uast(
    type: "Synthetic",
    children: "addition", "and_expression", "boolean_literal", "character_literal", "conditional_statement", "division", "equal", "eqv_expression", "exponentiation", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "integer_division", "is_expression", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "remote_identifier", "string_concat", "string_literal", "subtraction"
)

negative <- (negative) => uast(
    type: "Synthetic"
)

not_equal <- (not_equal) => uast(
    type: "Synthetic",
    children: "addition", "and_expression", "boolean_literal", "character_literal", "conditional_statement", "division", "equal", "eqv_expression", "exponentiation", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "integer_division", "is_expression", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "remote_identifier", "string_concat", "string_literal", "subtraction"
)

not_expression <- (not_expression) => uast(
    type: "Synthetic",
    children: "addition", "and_expression", "boolean_literal", "character_literal", "conditional_statement", "division", "equal", "eqv_expression", "exponentiation", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "integer_division", "is_expression", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "remote_identifier", "string_concat", "string_literal", "subtraction"
)

number_literal <- (number_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

object_generator <- (object_generator) => uast(
    type: "Generator",
    roles: "Generator",
    children: "addition", "and_expression", "boolean_literal", "character_literal", "conditional_statement", "division", "equal", "eqv_expression", "exponentiation", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "integer_division", "is_expression", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "remote_identifier", "string_concat", "string_literal", "subtraction"
)

or_expression <- (or_expression) => uast(
    type: "Synthetic",
    children: "addition", "and_expression", "boolean_literal", "character_literal", "conditional_statement", "division", "else", "equal", "eqv_expression", "exponentiation", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "integer_division", "is_expression", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "remote_identifier", "string_concat", "string_literal", "subtraction"
)

otherwise_clause <- (otherwise_clause) => uast(
    type: "Synthetic",
    children: "activation_statement", "block", "conditional_statement", "connection_statement", "for_statement", "goto_statement", "inner", "label_declaration", "object_generator", "procedure_statement", "reference_assignment", "value_assignment", "while_statement"
)

positive <- (positive) => uast(
    type: "Synthetic"
)

procedure_declaration <- (procedure_declaration) => uast(
    type: "Synthetic",
    children: "identifier", "specification", "type_expression"
)

procedure_statement <- (procedure_statement) => uast(
    type: "Synthetic",
    children: "addition", "and_expression", "boolean_literal", "character_literal", "conditional_statement", "division", "equal", "eqv_expression", "exponentiation", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "integer_division", "is_expression", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "remote_identifier", "string_concat", "string_literal", "subtraction"
)

protection_specification <- (protection_specification) => uast(
    type: "If"
)

qualified_object <- (qualified_object) => uast(
    type: "If",
    children: "addition", "and_expression", "boolean_literal", "character_literal", "conditional_statement", "division", "equal", "eqv_expression", "exponentiation", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "integer_division", "is_expression", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "remote_identifier", "string_concat", "string_literal", "subtraction"
)

ref_equal <- (ref_equal) => uast(
    type: "Synthetic",
    children: "addition", "and_expression", "boolean_literal", "character_literal", "conditional_statement", "division", "equal", "eqv_expression", "exponentiation", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "integer_division", "is_expression", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "remote_identifier", "string_concat", "string_literal", "subtraction"
)

ref_expression <- (ref_expression) => uast(
    type: "Synthetic",
    children: "identifier"
)

ref_not_equal <- (ref_not_equal) => uast(
    type: "Synthetic",
    children: "addition", "and_expression", "boolean_literal", "character_literal", "conditional_statement", "division", "equal", "eqv_expression", "exponentiation", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "integer_division", "is_expression", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "remote_identifier", "string_concat", "string_literal", "subtraction"
)

reference_assignment <- (reference_assignment) => uast(
    type: "Assignment",
    roles: "Assignment",
    children: "addition", "and_expression", "boolean_literal", "character_literal", "conditional_statement", "division", "equal", "eqv_expression", "exponentiation", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "integer_division", "is_expression", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "reference_assignment", "remote_identifier", "string_concat", "string_literal", "subtraction"
)

remote_identifier <- (remote_identifier) => uast(
    type: "If",
    children: "addition", "and_expression", "boolean_literal", "character_literal", "conditional_statement", "division", "equal", "eqv_expression", "exponentiation", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "integer_division", "is_expression", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "remote_identifier", "string_concat", "string_literal", "subtraction"
)

source_file <- (source_file) => uast(
    type: "Synthetic"
)

specification <- (specification) => uast(
    type: "If"
)

string_concat <- (string_concat) => uast(
    type: "Synthetic",
    children: "addition", "and_expression", "boolean_literal", "character_literal", "conditional_statement", "division", "equal", "eqv_expression", "exponentiation", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "integer_division", "is_expression", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "remote_identifier", "string_concat", "string_literal", "subtraction"
)

string_literal <- (string_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

subtraction <- (subtraction) => uast(
    type: "Synthetic",
    children: "addition", "and_expression", "boolean_literal", "character_literal", "conditional_statement", "division", "equal", "eqv_expression", "exponentiation", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "integer_division", "is_expression", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "remote_identifier", "string_concat", "string_literal", "subtraction"
)

switch_declaration <- (switch_declaration) => uast(
    type: "Switch",
    children: "identifier"
)

type_expression <- (type_expression) => uast(
    type: "Synthetic"
)

value_assignment <- (value_assignment) => uast(
    type: "Assignment",
    roles: "Assignment",
    children: "addition", "and_expression", "boolean_literal", "character_literal", "conditional_statement", "division", "equal", "eqv_expression", "exponentiation", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "integer_division", "is_expression", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "remote_identifier", "string_concat", "string_literal", "subtraction", "value_assignment"
)

variable_declaration <- (variable_declaration) => uast(
    type: "Variable",
    roles: "Variable", "Declaration",
    children: "addition", "and_expression", "boolean_literal", "character_literal", "conditional_statement", "division", "equal", "eqv_expression", "exponentiation", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "integer_division", "is_expression", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "remote_identifier", "string_concat", "string_literal", "subtraction", "type_expression"
)

virtual_spec <- (virtual_spec) => uast(
    type: "Synthetic",
    children: "identifier"
)

when_clause <- (when_clause) => uast(
    type: "Synthetic",
    children: "activation_statement", "block", "conditional_statement", "connection_statement", "for_statement", "goto_statement", "identifier", "inner", "label_declaration", "object_generator", "procedure_statement", "reference_assignment", "value_assignment", "while_statement"
)

while_statement <- (while_statement) => uast(
    type: "Loop",
    roles: "Loop",
    children: "activation_statement", "addition", "and_expression", "block", "boolean_literal", "character_literal", "conditional_statement", "connection_statement", "division", "equal", "eqv_expression", "exponentiation", "for_statement", "goto_statement", "greater_than", "greater_than_or_equal", "identifier", "imp_expression", "in_expression", "inner", "integer_division", "is_expression", "label_declaration", "less_than", "less_than_or_equal", "local_object", "multiplication", "negative", "none", "not_equal", "not_expression", "notext", "number_literal", "object_generator", "or_expression", "positive", "procedure_statement", "qualified_object", "ref_equal", "ref_not_equal", "reference_assignment", "remote_identifier", "string_concat", "string_literal", "subtraction", "value_assignment", "while_statement"
)

activate <- (activate) => uast(
    type: "Synthetic"
)

after <- (after) => uast(
    type: "Synthetic"
)

and <- (and) => uast(
    type: "Synthetic"
)

array <- (array) => uast(
    type: "Synthetic"
)

at <- (at) => uast(
    type: "Synthetic"
)

before <- (before) => uast(
    type: "Loop",
    roles: "Loop"
)

begin <- (begin) => uast(
    type: "Synthetic"
)

boolean <- (boolean) => uast(
    type: "Synthetic"
)

character <- (character) => uast(
    type: "Synthetic"
)

character_literal <- (character_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

class <- (class) => uast(
    type: "Class",
    roles: "Class", "Declaration"
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
)

delay <- (delay) => uast(
    type: "Synthetic"
)

directive <- (directive) => uast(
    type: "Synthetic"
)

else <- (else) => uast(
    type: "Synthetic"
)

end <- (end) => uast(
    type: "Synthetic"
)

end_comment <- (end_comment) => uast(
    type: "Comment",
    roles: "Comment"
)

eq <- (eq) => uast(
    type: "Synthetic"
)

eqv <- (eqv) => uast(
    type: "Synthetic"
)

external <- (external) => uast(
    type: "Synthetic"
)

first_directive <- (first_directive) => uast(
    type: "Synthetic"
)

for <- (for) => uast(
    type: "Loop",
    roles: "Loop"
)

ge <- (ge) => uast(
    type: "Synthetic"
)

gt <- (gt) => uast(
    type: "Synthetic"
)

hidden <- (hidden) => uast(
    type: "Synthetic"
)

identifier <- (identifier) => uast(
    type: "If"
)

if <- (if) => uast(
    type: "If"
)

imp <- (imp) => uast(
    type: "Synthetic"
)

in <- (in) => uast(
    type: "Synthetic"
)

inner <- (inner) => uast(
    type: "Synthetic"
)

inspect <- (inspect) => uast(
    type: "Synthetic"
)

integer <- (integer) => uast(
    type: "Synthetic"
)

is <- (is) => uast(
    type: "Synthetic"
)

label <- (label) => uast(
    type: "Synthetic"
)

le <- (le) => uast(
    type: "Synthetic"
)

line_comment <- (line_comment) => uast(
    type: "Comment",
    roles: "Comment"
)

long <- (long) => uast(
    type: "Synthetic"
)

lt <- (lt) => uast(
    type: "Synthetic"
)

name <- (name) => uast(
    type: "Synthetic"
)

ne <- (ne) => uast(
    type: "Synthetic"
)

new <- (new) => uast(
    type: "Synthetic"
)

none <- (none) => uast(
    type: "Synthetic"
)

not <- (not) => uast(
    type: "Synthetic"
)

notext <- (notext) => uast(
    type: "Synthetic"
)

or <- (or) => uast(
    type: "Synthetic"
)

otherwise <- (otherwise) => uast(
    type: "Synthetic"
)

prior <- (prior) => uast(
    type: "Synthetic"
)

procedure <- (procedure) => uast(
    type: "Synthetic"
)

protected <- (protected) => uast(
    type: "Synthetic"
)

qua <- (qua) => uast(
    type: "Synthetic"
)

reactivate <- (reactivate) => uast(
    type: "Synthetic"
)

real <- (real) => uast(
    type: "Synthetic"
)

ref <- (ref) => uast(
    type: "Synthetic"
)

short <- (short) => uast(
    type: "Synthetic"
)

step <- (step) => uast(
    type: "Synthetic"
)

switch <- (switch) => uast(
    type: "Switch"
)

text <- (text) => uast(
    type: "Synthetic"
)

then <- (then) => uast(
    type: "Synthetic"
)

this <- (this) => uast(
    type: "Synthetic"
)

until <- (until) => uast(
    type: "Synthetic"
)

value <- (value) => uast(
    type: "Synthetic"
)

virtual <- (virtual) => uast(
    type: "Synthetic"
)

when <- (when) => uast(
    type: "Synthetic"
)

while <- (while) => uast(
    type: "Loop",
    roles: "Loop"
)

