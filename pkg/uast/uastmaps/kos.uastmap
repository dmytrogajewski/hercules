additive_operator <- (additive_operator) => uast(
    type: "Synthetic"
)

argument_list <- (argument_list) => uast(
    type: "List",
    children: "identifier"
)

arithmetic_assignment <- (arithmetic_assignment) => uast(
    type: "Assignment",
    roles: "Assignment",
    children: "identifier"
)

arithmetic_assignment_operator <- (arithmetic_assignment_operator) => uast(
    type: "Assignment",
    roles: "Assignment"
)

array <- (array) => uast(
    type: "Synthetic"
)

array_element <- (array_element) => uast(
    type: "Synthetic",
    children: "identifier"
)

assert_statement <- (assert_statement) => uast(
    type: "Synthetic",
    children: "identifier"
)

assignment <- (assignment) => uast(
    type: "Assignment",
    roles: "Assignment",
    children: "identifier"
)

binary_expression <- (binary_expression) => uast(
    type: "Synthetic",
    children: "identifier"
)

bitwise_operator <- (bitwise_operator) => uast(
    type: "Synthetic"
)

class_body <- (class_body) => uast(
    type: "Class",
    roles: "Class", "Declaration"
)

class_decl <- (class_decl) => uast(
    type: "Class",
    roles: "Class", "Declaration",
    children: "identifier"
)

class_literal <- (class_literal) => uast(
    type: "Class",
    roles: "Class", "Declaration"
)

class_member <- (class_member) => uast(
    type: "Class",
    roles: "Class", "Declaration"
)

comparison_operator <- (comparison_operator) => uast(
    type: "Synthetic"
)

compound_statement <- (compound_statement) => uast(
    type: "Synthetic"
)

conditional_expression <- (conditional_expression) => uast(
    type: "Synthetic",
    children: "identifier"
)

const_list <- (const_list) => uast(
    type: "List",
    children: "identifier"
)

constructor_literal <- (constructor_literal) => uast(
    type: "Struct",
    roles: "Struct", "Declaration",
    children: "parameter_list"
)

data_member <- (data_member) => uast(
    type: "Synthetic",
    children: "identifier"
)

default_case <- (default_case) => uast(
    type: "Case",
    roles: "Branch"
)

default_parameter <- (default_parameter) => uast(
    type: "Parameter",
    roles: "Parameter",
    children: "identifier"
)

defer_statement <- (defer_statement) => uast(
    type: "Synthetic"
)

do_statement <- (do_statement) => uast(
    type: "Synthetic"
)

expression <- (expression) => uast(
    type: "Synthetic",
    children: "identifier"
)

extends_decl <- (extends_decl) => uast(
    type: "Synthetic",
    children: "identifier"
)

for_statement <- (for_statement) => uast(
    type: "Loop",
    roles: "Loop",
    children: "identifier"
)

formatted_string <- (formatted_string) => uast(
    type: "Loop",
    roles: "Loop",
    children: "identifier"
)

function_decl <- (function_decl) => uast(
    type: "Function",
    roles: "Function", "Declaration",
    children: "identifier", "parameter_list"
)

function_literal <- (function_literal) => uast(
    type: "Function",
    roles: "Function", "Declaration",
    children: "identifier", "parameter_list"
)

if_statement <- (if_statement) => uast(
    type: "If",
    children: "identifier"
)

import <- (import) => uast(
    type: "Import",
    roles: "Import",
    children: "identifier"
)

invocation <- (invocation) => uast(
    type: "Synthetic",
    children: "argument_list", "identifier"
)

list_parameter <- (list_parameter) => uast(
    type: "Parameter",
    roles: "Parameter",
    children: "identifier"
)

logical_operator <- (logical_operator) => uast(
    type: "Synthetic"
)

loop_statement <- (loop_statement) => uast(
    type: "Loop",
    roles: "Loop"
)

multiplicative_operator <- (multiplicative_operator) => uast(
    type: "Synthetic"
)

object <- (object) => uast(
    type: "Synthetic"
)

parameter_list <- (parameter_list) => uast(
    type: "Parameter",
    roles: "Parameter",
    children: "identifier"
)

property <- (property) => uast(
    type: "Property",
    roles: "Member",
    children: "identifier", "property_identifier"
)

public_statement <- (public_statement) => uast(
    type: "Synthetic"
)

refinement <- (refinement) => uast(
    type: "Synthetic",
    children: "identifier", "property_identifier"
)

repeat_statement <- (repeat_statement) => uast(
    type: "Synthetic",
    children: "identifier"
)

return_statement <- (return_statement) => uast(
    type: "Return",
    roles: "Return",
    children: "identifier"
)

source_file <- (source_file) => uast(
    type: "Synthetic"
)

switch_case <- (switch_case) => uast(
    type: "Switch",
    children: "identifier"
)

switch_statement <- (switch_statement) => uast(
    type: "Switch",
    children: "identifier"
)

throw_statement <- (throw_statement) => uast(
    type: "Throw",
    roles: "Throw",
    children: "identifier"
)

try_statement <- (try_statement) => uast(
    type: "Try",
    roles: "Try",
    children: "identifier"
)

unary_expression <- (unary_expression) => uast(
    type: "Synthetic",
    children: "identifier"
)

unary_operator <- (unary_operator) => uast(
    type: "UnaryOp",
    roles: "Operator"
)

var_list <- (var_list) => uast(
    type: "List",
    children: "identifier"
)

variable_definition <- (variable_definition) => uast(
    type: "Variable",
    roles: "Variable", "Declaration",
    children: "identifier"
)

while_statement <- (while_statement) => uast(
    type: "Loop",
    roles: "Loop",
    children: "identifier"
)

with_object_expression <- (with_object_expression) => uast(
    type: "Synthetic",
    children: "identifier"
)

with_statement <- (with_statement) => uast(
    type: "Synthetic"
)

yield_expression <- (yield_expression) => uast(
    type: "Yield",
    roles: "Yield",
    children: "identifier"
)

_ <- (_) => uast(
    type: "Synthetic"
)

assert <- (assert) => uast(
    type: "Synthetic"
)

break_statement <- (break_statement) => uast(
    type: "Break",
    roles: "Break"
)

case <- (case) => uast(
    type: "Case",
    roles: "Branch"
)

catch <- (catch) => uast(
    type: "Catch",
    roles: "Catch"
)

class <- (class) => uast(
    type: "Class",
    roles: "Class", "Declaration"
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
)

const <- (const) => uast(
    type: "Synthetic"
)

constructor <- (constructor) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
)

continue_statement <- (continue_statement) => uast(
    type: "Continue",
    roles: "Continue"
)

default <- (default) => uast(
    type: "Synthetic"
)

defer <- (defer) => uast(
    type: "Synthetic"
)

delete <- (delete) => uast(
    type: "Synthetic"
)

do <- (do) => uast(
    type: "Synthetic"
)

else <- (else) => uast(
    type: "Synthetic"
)

extends <- (extends) => uast(
    type: "Synthetic"
)

fallthrough_statement <- (fallthrough_statement) => uast(
    type: "Synthetic"
)

false <- (false) => uast(
    type: "Synthetic"
)

for <- (for) => uast(
    type: "Loop",
    roles: "Loop"
)

fun <- (fun) => uast(
    type: "Synthetic"
)

identifier <- (identifier) => uast(
    type: "If"
)

if <- (if) => uast(
    type: "If"
)

import <- (import) => uast(
    type: "Import",
    roles: "Import"
)

in <- (in) => uast(
    type: "Synthetic"
)

instanceof <- (instanceof) => uast(
    type: "Synthetic"
)

line <- (line) => uast(
    type: "Synthetic"
)

loop <- (loop) => uast(
    type: "Loop",
    roles: "Loop"
)

number <- (number) => uast(
    type: "Synthetic"
)

property_identifier <- (property_identifier) => uast(
    type: "If"
)

propertyof <- (propertyof) => uast(
    type: "Property",
    roles: "Member"
)

public <- (public) => uast(
    type: "Synthetic"
)

repeat <- (repeat) => uast(
    type: "Synthetic"
)

return <- (return) => uast(
    type: "Return",
    roles: "Return"
)

string_literal <- (string_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

string_literal_begin <- (string_literal_begin) => uast(
    type: "Literal",
    roles: "Literal"
)

string_literal_continuation <- (string_literal_continuation) => uast(
    type: "Literal",
    roles: "Literal"
)

string_literal_end <- (string_literal_end) => uast(
    type: "Literal",
    roles: "Literal"
)

super <- (super) => uast(
    type: "Synthetic"
)

switch <- (switch) => uast(
    type: "Switch"
)

this <- (this) => uast(
    type: "Synthetic"
)

throw <- (throw) => uast(
    type: "Throw",
    roles: "Throw"
)

true <- (true) => uast(
    type: "Synthetic"
)

try <- (try) => uast(
    type: "Try",
    roles: "Try"
)

typeof <- (typeof) => uast(
    type: "Synthetic"
)

var <- (var) => uast(
    type: "Synthetic"
)

void <- (void) => uast(
    type: "Synthetic"
)

while <- (while) => uast(
    type: "Loop",
    roles: "Loop"
)

with <- (with) => uast(
    type: "Synthetic"
)

yield <- (yield) => uast(
    type: "Yield",
    roles: "Yield"
)

