action <- (action) => uast(
    type: "Synthetic"
)

action_expression <- (action_expression) => uast(
    type: "Synthetic"
)

actual <- (actual) => uast(
    type: "Synthetic"
)

attribute <- (attribute) => uast(
    type: "Attribute",
    roles: "Attribute"
)

declaration <- (declaration) => uast(
    type: "Synthetic"
)

equality_symbol <- (equality_symbol) => uast(
    type: "Synthetic"
)

expression <- (expression) => uast(
    type: "Synthetic"
)

flags <- (flags) => uast(
    type: "Synthetic"
)

funcall <- (funcall) => uast(
    type: "Call",
    roles: "Call"
)

grammar_attribute <- (grammar_attribute) => uast(
    type: "Attribute",
    roles: "Attribute"
)

header <- (header) => uast(
    type: "Synthetic"
)

lax_actual <- (lax_actual) => uast(
    type: "Synthetic"
)

menhir_action <- (menhir_action) => uast(
    type: "Synthetic"
)

modifier <- (modifier) => uast(
    type: "If"
)

new_rule <- (new_rule) => uast(
    type: "Synthetic"
)

non_terminal <- (non_terminal) => uast(
    type: "Synthetic"
)

ocaml <- (ocaml) => uast(
    type: "Synthetic"
)

ocaml_type <- (ocaml_type) => uast(
    type: "Synthetic"
)

old_rule <- (old_rule) => uast(
    type: "Synthetic"
)

pattern <- (pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
)

postlude <- (postlude) => uast(
    type: "Synthetic"
)

precedence <- (precedence) => uast(
    type: "Synthetic"
)

priority_keyword <- (priority_keyword) => uast(
    type: "Synthetic"
)

producer <- (producer) => uast(
    type: "Synthetic"
)

production_group <- (production_group) => uast(
    type: "Synthetic"
)

seq_expression <- (seq_expression) => uast(
    type: "Synthetic"
)

source_file <- (source_file) => uast(
    type: "Synthetic"
)

strict_actual <- (strict_actual) => uast(
    type: "Synthetic"
)

symbol <- (symbol) => uast(
    type: "Synthetic"
)

symbol_expression <- (symbol_expression) => uast(
    type: "Synthetic"
)

terminal_alias_attrs <- (terminal_alias_attrs) => uast(
    type: "Synthetic"
)

type <- (type) => uast(
    type: "Synthetic"
)

_ <- (_) => uast(
    type: "Synthetic"
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
)

let <- (let) => uast(
    type: "Synthetic"
)

lid <- (lid) => uast(
    type: "Synthetic"
)

line_comment <- (line_comment) => uast(
    type: "Comment",
    roles: "Comment"
)

ocaml_comment <- (ocaml_comment) => uast(
    type: "Comment",
    roles: "Comment"
)

qid <- (qid) => uast(
    type: "Synthetic"
)

uid <- (uid) => uast(
    type: "Synthetic"
)

