argument <- (argument) => uast(
    type: "Synthetic",
    children: []
)

arguments <- (arguments) => uast(
    type: "Synthetic",
    children: []
)

block <- (block) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

body <- (body) => uast(
    type: "Synthetic",
    children: []
)

continuation <- (continuation) => uast(
    type: "Synthetic",
    children: []
)

dictionary_variable <- (dictionary_variable) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
    children: []
)

else_statement <- (else_statement) => uast(
    type: "Synthetic",
    children: "block"
)

elseif_statement <- (elseif_statement) => uast(
    type: "If",
    children: "argument", "block"
)

except_statement <- (except_statement) => uast(
    type: "Synthetic",
    children: []
)

finally_statement <- (finally_statement) => uast(
    type: "Finally",
    roles: "Finally"
    children: []
)

for_statement <- (for_statement) => uast(
    type: "Loop",
    roles: "Loop"
    children: "block", "in", "in_enumerate", "in_range", "in_zip", "variable_list"
)

if_statement <- (if_statement) => uast(
    type: "If",
    children: "argument", "block", "else_statement", "elseif_statement"
)

in <- (in) => uast(
    type: "Synthetic",
    children: []
)

in_enumerate <- (in_enumerate) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
    children: []
)

in_range <- (in_range) => uast(
    type: "Synthetic",
    children: []
)

in_zip <- (in_zip) => uast(
    type: "Synthetic",
    children: []
)

inline_else_statement <- (inline_else_statement) => uast(
    type: "Synthetic",
    children: []
)

inline_elseif_statement <- (inline_elseif_statement) => uast(
    type: "If",
    children: []
)

inline_if_statement <- (inline_if_statement) => uast(
    type: "If",
    children: []
)

inline_python_expression <- (inline_python_expression) => uast(
    type: "Synthetic",
    children: []
)

inline_statement <- (inline_statement) => uast(
    type: "Synthetic",
    children: []
)

keyword_definition <- (keyword_definition) => uast(
    type: "Synthetic",
    children: []
)

keyword_invocation <- (keyword_invocation) => uast(
    type: "Synthetic",
    children: []
)

keyword_setting <- (keyword_setting) => uast(
    type: "Set",
    children: "keyword_setting_name"
)

keyword_setting_name <- (keyword_setting_name) => uast(
    type: "Set",
    children: []
)

keywords_section <- (keywords_section) => uast(
    type: "Synthetic",
    children: []
)

list_variable <- (list_variable) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
    children: []
)

python_expression <- (python_expression) => uast(
    type: "Synthetic",
    children: []
)

return_statement <- (return_statement) => uast(
    type: "Return",
    roles: "Return"
    children: []
)

return_value <- (return_value) => uast(
    type: "Return",
    roles: "Return"
    children: []
)

scalar_variable <- (scalar_variable) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
    children: []
)

section <- (section) => uast(
    type: "Synthetic",
    children: []
)

setting_name <- (setting_name) => uast(
    type: "Set",
    children: []
)

setting_statement <- (setting_statement) => uast(
    type: "Set",
    children: "setting_name"
)

settings_section <- (settings_section) => uast(
    type: "Set",
    children: []
)

source_file <- (source_file) => uast(
    type: "Synthetic",
    children: []
)

statement <- (statement) => uast(
    type: "Synthetic",
    children: []
)

test_case_definition <- (test_case_definition) => uast(
    type: "Case",
    roles: "Branch"
    children: []
)

test_case_setting <- (test_case_setting) => uast(
    type: "Case",
    roles: "Branch"
    children: "test_case_setting_name"
)

test_case_setting_name <- (test_case_setting_name) => uast(
    type: "Case",
    roles: "Branch"
    children: []
)

test_cases_section <- (test_cases_section) => uast(
    type: "Case",
    roles: "Branch"
    children: []
)

try_statement <- (try_statement) => uast(
    type: "Try",
    roles: "Try"
    children: []
)

variable_assignment <- (variable_assignment) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
    children: []
)

variable_definition <- (variable_definition) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
    children: []
)

variable_list <- (variable_list) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
    children: []
)

variables_section <- (variables_section) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
    children: []
)

while_statement <- (while_statement) => uast(
    type: "Loop",
    roles: "Loop"
    children: "arguments", "block"
)

ELSE <- (ELSE) => uast(
    type: "Synthetic",
    children: []
)

END <- (END) => uast(
    type: "Synthetic",
    children: []
)

EXCEPT <- (EXCEPT) => uast(
    type: "Synthetic",
    children: []
)

FINALLY <- (FINALLY) => uast(
    type: "Finally",
    roles: "Finally"
    children: []
)

FOR <- (FOR) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

IF <- (IF) => uast(
    type: "If",
    children: []
)

IN <- (IN) => uast(
    type: "Synthetic",
    children: []
)

RETURN <- (RETURN) => uast(
    type: "Return",
    roles: "Return"
    children: []
)

TRY <- (TRY) => uast(
    type: "Try",
    roles: "Try"
    children: []
)

WHILE <- (WHILE) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

break_statement <- (break_statement) => uast(
    type: "Break",
    roles: "Break"
    children: []
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
    children: []
)

continue_statement <- (continue_statement) => uast(
    type: "Continue",
    roles: "Continue"
    children: []
)

ellipses <- (ellipses) => uast(
    type: "Synthetic",
    children: []
)

extra_text <- (extra_text) => uast(
    type: "Synthetic",
    children: []
)

keyword <- (keyword) => uast(
    type: "Synthetic",
    children: []
)

name <- (name) => uast(
    type: "Synthetic",
    children: []
)

section_header <- (section_header) => uast(
    type: "Synthetic",
    children: []
)

text_chunk <- (text_chunk) => uast(
    type: "Synthetic",
    children: []
)

variable_name <- (variable_name) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
    children: []
)

