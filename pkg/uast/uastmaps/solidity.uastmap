any_pragma_token <- (any_pragma_token) => uast(
    type: "Synthetic",
    children: []
)

any_source_type <- (any_source_type) => uast(
    type: "Synthetic",
    children: []
)

array_access <- (array_access) => uast(
    type: "Synthetic",
    children: "expression"
)

assembly_flags <- (assembly_flags) => uast(
    type: "Synthetic",
    children: []
)

assembly_statement <- (assembly_statement) => uast(
    type: "Synthetic",
    children: []
)

assignment_expression <- (assignment_expression) => uast(
    type: "Assignment",
    roles: "Assignment"
    children: "expression"
)

augmented_assignment_expression <- (augmented_assignment_expression) => uast(
    type: "Assignment",
    roles: "Assignment"
    children: "expression"
)

binary_expression <- (binary_expression) => uast(
    type: "Synthetic",
    children: "expression"
)

block_statement <- (block_statement) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

boolean_literal <- (boolean_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

break_statement <- (break_statement) => uast(
    type: "Break",
    roles: "Break"
    children: []
)

call_argument <- (call_argument) => uast(
    type: "Call",
    roles: "Call"
    children: []
)

call_expression <- (call_expression) => uast(
    type: "Call",
    roles: "Call"
    children: "expression"
)

call_struct_argument <- (call_struct_argument) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: "expression", "identifier"
)

catch_clause <- (catch_clause) => uast(
    type: "Catch",
    roles: "Catch"
    children: "block_statement"
)

constant_variable_declaration <- (constant_variable_declaration) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
    children: "expression", "identifier", "type_name"
)

constructor_definition <- (constructor_definition) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: "function_body"
)

continue_statement <- (continue_statement) => uast(
    type: "Continue",
    roles: "Continue"
    children: []
)

contract_body <- (contract_body) => uast(
    type: "Synthetic",
    children: []
)

contract_declaration <- (contract_declaration) => uast(
    type: "Synthetic",
    children: "contract_body", "identifier"
)

do_while_statement <- (do_while_statement) => uast(
    type: "Loop",
    roles: "Loop"
    children: "expression", "statement"
)

emit_statement <- (emit_statement) => uast(
    type: "Synthetic",
    children: "expression"
)

enum_body <- (enum_body) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
    children: []
)

enum_declaration <- (enum_declaration) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
    children: "enum_body", "identifier"
)

error_declaration <- (error_declaration) => uast(
    type: "Synthetic",
    children: "identifier"
)

error_parameter <- (error_parameter) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: "identifier", "type_name"
)

event_definition <- (event_definition) => uast(
    type: "Synthetic",
    children: "identifier"
)

event_parameter <- (event_parameter) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: "identifier", "type_name"
)

expression <- (expression) => uast(
    type: "Synthetic",
    children: []
)

expression_statement <- (expression_statement) => uast(
    type: "Synthetic",
    children: []
)

fallback_receive_definition <- (fallback_receive_definition) => uast(
    type: "Synthetic",
    children: "function_body"
)

false <- (false) => uast(
    type: "Synthetic",
    children: []
)

for_statement <- (for_statement) => uast(
    type: "Loop",
    roles: "Loop"
    children: "expression", "expression_statement", "statement", "variable_declaration_statement"
)

function_body <- (function_body) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

function_definition <- (function_definition) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: "function_body", "identifier", "return_type_definition"
)

hex_string_literal <- (hex_string_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

if_statement <- (if_statement) => uast(
    type: "If",
    children: "else", "expression", "statement"
)

import_directive <- (import_directive) => uast(
    type: "Import",
    roles: "Import"
    children: "identifier", "string"
)

inheritance_specifier <- (inheritance_specifier) => uast(
    type: "If",
    children: "call_argument", "user_defined_type"
)

inline_array_expression <- (inline_array_expression) => uast(
    type: "Synthetic",
    children: []
)

interface_declaration <- (interface_declaration) => uast(
    type: "Interface",
    roles: "Interface", "Declaration"
    children: "contract_body", "identifier"
)

library_declaration <- (library_declaration) => uast(
    type: "Synthetic",
    children: "contract_body", "identifier"
)

member_expression <- (member_expression) => uast(
    type: "Synthetic",
    children: "expression", "identifier"
)

meta_type_expression <- (meta_type_expression) => uast(
    type: "Synthetic",
    children: []
)

modifier_definition <- (modifier_definition) => uast(
    type: "If",
    children: "function_body", "identifier"
)

modifier_invocation <- (modifier_invocation) => uast(
    type: "If",
    children: []
)

new_expression <- (new_expression) => uast(
    type: "Synthetic",
    children: "type_name"
)

number_literal <- (number_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

number_unit <- (number_unit) => uast(
    type: "Synthetic",
    children: []
)

override_specifier <- (override_specifier) => uast(
    type: "If",
    children: []
)

parameter <- (parameter) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: "calldata", "identifier", "memory", "storage", "type_name"
)

parenthesized_expression <- (parenthesized_expression) => uast(
    type: "Synthetic",
    children: []
)

payable_conversion_expression <- (payable_conversion_expression) => uast(
    type: "Synthetic",
    children: []
)

pragma_directive <- (pragma_directive) => uast(
    type: "Synthetic",
    children: []
)

pragma_value <- (pragma_value) => uast(
    type: "Synthetic",
    children: []
)

primitive_type <- (primitive_type) => uast(
    type: "Synthetic",
    children: []
)

return_parameter <- (return_parameter) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: "calldata", "memory", "storage", "type_name"
)

return_statement <- (return_statement) => uast(
    type: "Return",
    roles: "Return"
    children: []
)

return_type_definition <- (return_type_definition) => uast(
    type: "Return",
    roles: "Return"
    children: []
)

revert_arguments <- (revert_arguments) => uast(
    type: "Synthetic",
    children: []
)

revert_statement <- (revert_statement) => uast(
    type: "Synthetic",
    children: "expression"
)

slice_access <- (slice_access) => uast(
    type: "Slice",
    children: "expression"
)

solidity_pragma_token <- (solidity_pragma_token) => uast(
    type: "Synthetic",
    children: "solidity_version", "solidity_version_comparison_operator"
)

solidity_version_comparison_operator <- (solidity_version_comparison_operator) => uast(
    type: "Synthetic",
    children: []
)

source_file <- (source_file) => uast(
    type: "Synthetic",
    children: []
)

state_location <- (state_location) => uast(
    type: "Synthetic",
    children: []
)

state_mutability <- (state_mutability) => uast(
    type: "Synthetic",
    children: []
)

state_variable_declaration <- (state_variable_declaration) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
    children: "expression", "identifier", "state_location", "type_name", "visibility"
)

statement <- (statement) => uast(
    type: "Synthetic",
    children: []
)

string <- (string) => uast(
    type: "Synthetic",
    children: []
)

string_literal <- (string_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

struct_body <- (struct_body) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: []
)

struct_declaration <- (struct_declaration) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: "identifier", "struct_body"
)

struct_expression <- (struct_expression) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: "expression"
)

struct_field_assignment <- (struct_field_assignment) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: "expression", "identifier"
)

struct_member <- (struct_member) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: "identifier", "type_name"
)

ternary_expression <- (ternary_expression) => uast(
    type: "Synthetic",
    children: []
)

true <- (true) => uast(
    type: "Synthetic",
    children: []
)

try_statement <- (try_statement) => uast(
    type: "Try",
    roles: "Try"
    children: "block_statement", "expression"
)

tuple_expression <- (tuple_expression) => uast(
    type: "Tuple",
    children: []
)

type_alias <- (type_alias) => uast(
    type: "Synthetic",
    children: []
)

type_cast_expression <- (type_cast_expression) => uast(
    type: "Cast",
    children: []
)

type_name <- (type_name) => uast(
    type: "Synthetic",
    children: "identifier", "parameter", "primitive_type", "type_name", "user_defined_type"
)

unary_expression <- (unary_expression) => uast(
    type: "Synthetic",
    children: "delete", "expression"
)

unicode_string_literal <- (unicode_string_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

update_expression <- (update_expression) => uast(
    type: "Synthetic",
    children: "expression"
)

user_defined_type <- (user_defined_type) => uast(
    type: "Synthetic",
    children: []
)

user_defined_type_definition <- (user_defined_type_definition) => uast(
    type: "Synthetic",
    children: "identifier"
)

using_directive <- (using_directive) => uast(
    type: "Synthetic",
    children: "any_source_type", "type_name"
)

variable_declaration <- (variable_declaration) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
    children: "calldata", "identifier", "memory", "storage", "type_name"
)

variable_declaration_statement <- (variable_declaration_statement) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
    children: "expression"
)

variable_declaration_tuple <- (variable_declaration_tuple) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
    children: []
)

visibility <- (visibility) => uast(
    type: "Synthetic",
    children: []
)

while_statement <- (while_statement) => uast(
    type: "Loop",
    roles: "Loop"
    children: "expression", "statement"
)

yul_assignment <- (yul_assignment) => uast(
    type: "Assignment",
    roles: "Assignment"
    children: []
)

yul_block <- (yul_block) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

yul_boolean <- (yul_boolean) => uast(
    type: "Synthetic",
    children: []
)

yul_break <- (yul_break) => uast(
    type: "Break",
    roles: "Break"
    children: []
)

yul_continue <- (yul_continue) => uast(
    type: "Continue",
    roles: "Continue"
    children: []
)

yul_evm_builtin <- (yul_evm_builtin) => uast(
    type: "Synthetic",
    children: []
)

yul_for_statement <- (yul_for_statement) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

yul_function_call <- (yul_function_call) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: "yul_evm_builtin", "yul_identifier"
)

yul_function_definition <- (yul_function_definition) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

yul_identifier <- (yul_identifier) => uast(
    type: "If",
    children: []
)

yul_if_statement <- (yul_if_statement) => uast(
    type: "If",
    children: []
)

yul_label <- (yul_label) => uast(
    type: "Synthetic",
    children: []
)

yul_path <- (yul_path) => uast(
    type: "Synthetic",
    children: []
)

yul_string_literal <- (yul_string_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

yul_switch_statement <- (yul_switch_statement) => uast(
    type: "Switch",
    children: []
)

yul_variable_declaration <- (yul_variable_declaration) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
    children: "yul_boolean", "yul_decimal_number", "yul_function_call", "yul_hex_number", "yul_identifier", "yul_path", "yul_string_literal"
)

_ <- (_) => uast(
    type: "Synthetic",
    children: []
)

abstract <- (abstract) => uast(
    type: "Synthetic",
    children: []
)

add <- (add) => uast(
    type: "Synthetic",
    children: []
)

addmod <- (addmod) => uast(
    type: "Synthetic",
    children: []
)

address <- (address) => uast(
    type: "Synthetic",
    children: []
)

and <- (and) => uast(
    type: "Synthetic",
    children: []
)

anonymous <- (anonymous) => uast(
    type: "Synthetic",
    children: []
)

as <- (as) => uast(
    type: "Synthetic",
    children: []
)

assembly <- (assembly) => uast(
    type: "Synthetic",
    children: []
)

balance <- (balance) => uast(
    type: "Synthetic",
    children: []
)

basefee <- (basefee) => uast(
    type: "Synthetic",
    children: []
)

blobfee <- (blobfee) => uast(
    type: "Synthetic",
    children: []
)

blobhash <- (blobhash) => uast(
    type: "Synthetic",
    children: []
)

blockhash <- (blockhash) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

bool <- (bool) => uast(
    type: "Synthetic",
    children: []
)

break <- (break) => uast(
    type: "Break",
    roles: "Break"
    children: []
)

byte <- (byte) => uast(
    type: "Synthetic",
    children: []
)

bytes <- (bytes) => uast(
    type: "Synthetic",
    children: []
)

bytes1 <- (bytes1) => uast(
    type: "Synthetic",
    children: []
)

bytes10 <- (bytes10) => uast(
    type: "Synthetic",
    children: []
)

bytes11 <- (bytes11) => uast(
    type: "Synthetic",
    children: []
)

bytes12 <- (bytes12) => uast(
    type: "Synthetic",
    children: []
)

bytes13 <- (bytes13) => uast(
    type: "Synthetic",
    children: []
)

bytes14 <- (bytes14) => uast(
    type: "Synthetic",
    children: []
)

bytes15 <- (bytes15) => uast(
    type: "Synthetic",
    children: []
)

bytes16 <- (bytes16) => uast(
    type: "Synthetic",
    children: []
)

bytes17 <- (bytes17) => uast(
    type: "Synthetic",
    children: []
)

bytes18 <- (bytes18) => uast(
    type: "Synthetic",
    children: []
)

bytes19 <- (bytes19) => uast(
    type: "Synthetic",
    children: []
)

bytes2 <- (bytes2) => uast(
    type: "Synthetic",
    children: []
)

bytes20 <- (bytes20) => uast(
    type: "Synthetic",
    children: []
)

bytes21 <- (bytes21) => uast(
    type: "Synthetic",
    children: []
)

bytes22 <- (bytes22) => uast(
    type: "Synthetic",
    children: []
)

bytes23 <- (bytes23) => uast(
    type: "Synthetic",
    children: []
)

bytes24 <- (bytes24) => uast(
    type: "Synthetic",
    children: []
)

bytes25 <- (bytes25) => uast(
    type: "Synthetic",
    children: []
)

bytes26 <- (bytes26) => uast(
    type: "Synthetic",
    children: []
)

bytes27 <- (bytes27) => uast(
    type: "Synthetic",
    children: []
)

bytes28 <- (bytes28) => uast(
    type: "Synthetic",
    children: []
)

bytes29 <- (bytes29) => uast(
    type: "Synthetic",
    children: []
)

bytes3 <- (bytes3) => uast(
    type: "Synthetic",
    children: []
)

bytes30 <- (bytes30) => uast(
    type: "Synthetic",
    children: []
)

bytes31 <- (bytes31) => uast(
    type: "Synthetic",
    children: []
)

bytes32 <- (bytes32) => uast(
    type: "Synthetic",
    children: []
)

bytes4 <- (bytes4) => uast(
    type: "Synthetic",
    children: []
)

bytes5 <- (bytes5) => uast(
    type: "Synthetic",
    children: []
)

bytes6 <- (bytes6) => uast(
    type: "Synthetic",
    children: []
)

bytes7 <- (bytes7) => uast(
    type: "Synthetic",
    children: []
)

bytes8 <- (bytes8) => uast(
    type: "Synthetic",
    children: []
)

bytes9 <- (bytes9) => uast(
    type: "Synthetic",
    children: []
)

call <- (call) => uast(
    type: "Call",
    roles: "Call"
    children: []
)

callcode <- (callcode) => uast(
    type: "Call",
    roles: "Call"
    children: []
)

calldata <- (calldata) => uast(
    type: "Call",
    roles: "Call"
    children: []
)

calldatacopy <- (calldatacopy) => uast(
    type: "Call",
    roles: "Call"
    children: []
)

calldataload <- (calldataload) => uast(
    type: "Call",
    roles: "Call"
    children: []
)

calldatasize <- (calldatasize) => uast(
    type: "Call",
    roles: "Call"
    children: []
)

caller <- (caller) => uast(
    type: "Call",
    roles: "Call"
    children: []
)

callvalue <- (callvalue) => uast(
    type: "Call",
    roles: "Call"
    children: []
)

case <- (case) => uast(
    type: "Case",
    roles: "Branch"
    children: []
)

catch <- (catch) => uast(
    type: "Catch",
    roles: "Catch"
    children: []
)

chainid <- (chainid) => uast(
    type: "Synthetic",
    children: []
)

coinbase <- (coinbase) => uast(
    type: "Synthetic",
    children: []
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
    children: []
)

constant <- (constant) => uast(
    type: "Synthetic",
    children: []
)

constructor <- (constructor) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: []
)

continue <- (continue) => uast(
    type: "Continue",
    roles: "Continue"
    children: []
)

contract <- (contract) => uast(
    type: "Synthetic",
    children: []
)

create <- (create) => uast(
    type: "Synthetic",
    children: []
)

create2 <- (create2) => uast(
    type: "Synthetic",
    children: []
)

days <- (days) => uast(
    type: "Synthetic",
    children: []
)

default <- (default) => uast(
    type: "Synthetic",
    children: []
)

delegatecall <- (delegatecall) => uast(
    type: "Call",
    roles: "Call"
    children: []
)

delete <- (delete) => uast(
    type: "Synthetic",
    children: []
)

difficulty <- (difficulty) => uast(
    type: "If",
    children: []
)

div <- (div) => uast(
    type: "Synthetic",
    children: []
)

do <- (do) => uast(
    type: "Synthetic",
    children: []
)

else <- (else) => uast(
    type: "Synthetic",
    children: []
)

emit <- (emit) => uast(
    type: "Synthetic",
    children: []
)

enum <- (enum) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
    children: []
)

enum_value <- (enum_value) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
    children: []
)

eq <- (eq) => uast(
    type: "Synthetic",
    children: []
)

error <- (error) => uast(
    type: "Synthetic",
    children: []
)

ether <- (ether) => uast(
    type: "Synthetic",
    children: []
)

event <- (event) => uast(
    type: "Synthetic",
    children: []
)

exp <- (exp) => uast(
    type: "Synthetic",
    children: []
)

extcodecopy <- (extcodecopy) => uast(
    type: "Synthetic",
    children: []
)

extcodehash <- (extcodehash) => uast(
    type: "Synthetic",
    children: []
)

extcodesize <- (extcodesize) => uast(
    type: "Synthetic",
    children: []
)

external <- (external) => uast(
    type: "Synthetic",
    children: []
)

fallback <- (fallback) => uast(
    type: "Synthetic",
    children: []
)

false <- (false) => uast(
    type: "Synthetic",
    children: []
)

finney <- (finney) => uast(
    type: "Synthetic",
    children: []
)

fixed <- (fixed) => uast(
    type: "Synthetic",
    children: []
)

for <- (for) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

from <- (from) => uast(
    type: "Synthetic",
    children: []
)

function <- (function) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

gas <- (gas) => uast(
    type: "Synthetic",
    children: []
)

gaslimit <- (gaslimit) => uast(
    type: "Synthetic",
    children: []
)

gasprice <- (gasprice) => uast(
    type: "Synthetic",
    children: []
)

gt <- (gt) => uast(
    type: "Synthetic",
    children: []
)

gwei <- (gwei) => uast(
    type: "Synthetic",
    children: []
)

hex <- (hex) => uast(
    type: "Synthetic",
    children: []
)

hours <- (hours) => uast(
    type: "Synthetic",
    children: []
)

identifier <- (identifier) => uast(
    type: "If",
    children: []
)

if <- (if) => uast(
    type: "If",
    children: []
)

immutable <- (immutable) => uast(
    type: "Synthetic",
    children: []
)

import <- (import) => uast(
    type: "Import",
    roles: "Import"
    children: []
)

indexed <- (indexed) => uast(
    type: "Index",
    roles: "Index"
    children: []
)

int <- (int) => uast(
    type: "Synthetic",
    children: []
)

int104 <- (int104) => uast(
    type: "Synthetic",
    children: []
)

int112 <- (int112) => uast(
    type: "Synthetic",
    children: []
)

int120 <- (int120) => uast(
    type: "Synthetic",
    children: []
)

int128 <- (int128) => uast(
    type: "Synthetic",
    children: []
)

int136 <- (int136) => uast(
    type: "Synthetic",
    children: []
)

int144 <- (int144) => uast(
    type: "Synthetic",
    children: []
)

int152 <- (int152) => uast(
    type: "Synthetic",
    children: []
)

int16 <- (int16) => uast(
    type: "Synthetic",
    children: []
)

int160 <- (int160) => uast(
    type: "Synthetic",
    children: []
)

int168 <- (int168) => uast(
    type: "Synthetic",
    children: []
)

int176 <- (int176) => uast(
    type: "Synthetic",
    children: []
)

int184 <- (int184) => uast(
    type: "Synthetic",
    children: []
)

int192 <- (int192) => uast(
    type: "Synthetic",
    children: []
)

int200 <- (int200) => uast(
    type: "Synthetic",
    children: []
)

int208 <- (int208) => uast(
    type: "Synthetic",
    children: []
)

int216 <- (int216) => uast(
    type: "Synthetic",
    children: []
)

int224 <- (int224) => uast(
    type: "Synthetic",
    children: []
)

int232 <- (int232) => uast(
    type: "Synthetic",
    children: []
)

int24 <- (int24) => uast(
    type: "Synthetic",
    children: []
)

int240 <- (int240) => uast(
    type: "Synthetic",
    children: []
)

int248 <- (int248) => uast(
    type: "Synthetic",
    children: []
)

int256 <- (int256) => uast(
    type: "Synthetic",
    children: []
)

int32 <- (int32) => uast(
    type: "Synthetic",
    children: []
)

int40 <- (int40) => uast(
    type: "Synthetic",
    children: []
)

int48 <- (int48) => uast(
    type: "Synthetic",
    children: []
)

int56 <- (int56) => uast(
    type: "Synthetic",
    children: []
)

int64 <- (int64) => uast(
    type: "Synthetic",
    children: []
)

int72 <- (int72) => uast(
    type: "Synthetic",
    children: []
)

int8 <- (int8) => uast(
    type: "Synthetic",
    children: []
)

int80 <- (int80) => uast(
    type: "Synthetic",
    children: []
)

int88 <- (int88) => uast(
    type: "Synthetic",
    children: []
)

int96 <- (int96) => uast(
    type: "Synthetic",
    children: []
)

interface <- (interface) => uast(
    type: "Interface",
    roles: "Interface", "Declaration"
    children: []
)

internal <- (internal) => uast(
    type: "Synthetic",
    children: []
)

invalid <- (invalid) => uast(
    type: "Synthetic",
    children: []
)

is <- (is) => uast(
    type: "Synthetic",
    children: []
)

iszero <- (iszero) => uast(
    type: "Synthetic",
    children: []
)

keccak256 <- (keccak256) => uast(
    type: "Synthetic",
    children: []
)

let <- (let) => uast(
    type: "Synthetic",
    children: []
)

library <- (library) => uast(
    type: "Synthetic",
    children: []
)

log0 <- (log0) => uast(
    type: "Synthetic",
    children: []
)

log1 <- (log1) => uast(
    type: "Synthetic",
    children: []
)

log2 <- (log2) => uast(
    type: "Synthetic",
    children: []
)

log3 <- (log3) => uast(
    type: "Synthetic",
    children: []
)

log4 <- (log4) => uast(
    type: "Synthetic",
    children: []
)

lt <- (lt) => uast(
    type: "Synthetic",
    children: []
)

mapping <- (mapping) => uast(
    type: "Synthetic",
    children: []
)

mcopy <- (mcopy) => uast(
    type: "Synthetic",
    children: []
)

memory <- (memory) => uast(
    type: "Synthetic",
    children: []
)

minutes <- (minutes) => uast(
    type: "Synthetic",
    children: []
)

mload <- (mload) => uast(
    type: "Synthetic",
    children: []
)

mod <- (mod) => uast(
    type: "Synthetic",
    children: []
)

modifier <- (modifier) => uast(
    type: "If",
    children: []
)

msize <- (msize) => uast(
    type: "Synthetic",
    children: []
)

mstore <- (mstore) => uast(
    type: "Synthetic",
    children: []
)

mstore8 <- (mstore8) => uast(
    type: "Synthetic",
    children: []
)

mul <- (mul) => uast(
    type: "Synthetic",
    children: []
)

mulmod <- (mulmod) => uast(
    type: "Synthetic",
    children: []
)

new <- (new) => uast(
    type: "Synthetic",
    children: []
)

not <- (not) => uast(
    type: "Synthetic",
    children: []
)

number <- (number) => uast(
    type: "Synthetic",
    children: []
)

or <- (or) => uast(
    type: "Synthetic",
    children: []
)

origin <- (origin) => uast(
    type: "Synthetic",
    children: []
)

override <- (override) => uast(
    type: "Synthetic",
    children: []
)

payable <- (payable) => uast(
    type: "Synthetic",
    children: []
)

pop <- (pop) => uast(
    type: "Synthetic",
    children: []
)

pragma <- (pragma) => uast(
    type: "Synthetic",
    children: []
)

private <- (private) => uast(
    type: "Synthetic",
    children: []
)

public <- (public) => uast(
    type: "Synthetic",
    children: []
)

pure <- (pure) => uast(
    type: "Synthetic",
    children: []
)

receive <- (receive) => uast(
    type: "Synthetic",
    children: []
)

return <- (return) => uast(
    type: "Return",
    roles: "Return"
    children: []
)

returndatacopy <- (returndatacopy) => uast(
    type: "Return",
    roles: "Return"
    children: []
)

returndatasize <- (returndatasize) => uast(
    type: "Return",
    roles: "Return"
    children: []
)

returns <- (returns) => uast(
    type: "Return",
    roles: "Return"
    children: []
)

revert <- (revert) => uast(
    type: "Synthetic",
    children: []
)

sar <- (sar) => uast(
    type: "Synthetic",
    children: []
)

sdiv <- (sdiv) => uast(
    type: "Synthetic",
    children: []
)

seconds <- (seconds) => uast(
    type: "Synthetic",
    children: []
)

selfbalance <- (selfbalance) => uast(
    type: "Synthetic",
    children: []
)

selfdestruct <- (selfdestruct) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: []
)

sgt <- (sgt) => uast(
    type: "Synthetic",
    children: []
)

shl <- (shl) => uast(
    type: "Synthetic",
    children: []
)

shr <- (shr) => uast(
    type: "Synthetic",
    children: []
)

signextend <- (signextend) => uast(
    type: "Synthetic",
    children: []
)

sload <- (sload) => uast(
    type: "Synthetic",
    children: []
)

slt <- (slt) => uast(
    type: "Synthetic",
    children: []
)

smod <- (smod) => uast(
    type: "Synthetic",
    children: []
)

solidity <- (solidity) => uast(
    type: "Synthetic",
    children: []
)

solidity_version <- (solidity_version) => uast(
    type: "Synthetic",
    children: []
)

sstore <- (sstore) => uast(
    type: "Synthetic",
    children: []
)

staticcall <- (staticcall) => uast(
    type: "Call",
    roles: "Call"
    children: []
)

stop <- (stop) => uast(
    type: "Synthetic",
    children: []
)

storage <- (storage) => uast(
    type: "Synthetic",
    children: []
)

string <- (string) => uast(
    type: "Synthetic",
    children: []
)

struct <- (struct) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: []
)

sub <- (sub) => uast(
    type: "Synthetic",
    children: []
)

switch <- (switch) => uast(
    type: "Switch",
    children: []
)

szabo <- (szabo) => uast(
    type: "Synthetic",
    children: []
)

timestamp <- (timestamp) => uast(
    type: "Synthetic",
    children: []
)

tload <- (tload) => uast(
    type: "Synthetic",
    children: []
)

transient <- (transient) => uast(
    type: "Synthetic",
    children: []
)

true <- (true) => uast(
    type: "Synthetic",
    children: []
)

try <- (try) => uast(
    type: "Try",
    roles: "Try"
    children: []
)

tstore <- (tstore) => uast(
    type: "Synthetic",
    children: []
)

type <- (type) => uast(
    type: "Synthetic",
    children: []
)

ufixed <- (ufixed) => uast(
    type: "Synthetic",
    children: []
)

uint <- (uint) => uast(
    type: "Synthetic",
    children: []
)

uint104 <- (uint104) => uast(
    type: "Synthetic",
    children: []
)

uint112 <- (uint112) => uast(
    type: "Synthetic",
    children: []
)

uint120 <- (uint120) => uast(
    type: "Synthetic",
    children: []
)

uint128 <- (uint128) => uast(
    type: "Synthetic",
    children: []
)

uint136 <- (uint136) => uast(
    type: "Synthetic",
    children: []
)

uint144 <- (uint144) => uast(
    type: "Synthetic",
    children: []
)

uint152 <- (uint152) => uast(
    type: "Synthetic",
    children: []
)

uint16 <- (uint16) => uast(
    type: "Synthetic",
    children: []
)

uint160 <- (uint160) => uast(
    type: "Synthetic",
    children: []
)

uint168 <- (uint168) => uast(
    type: "Synthetic",
    children: []
)

uint176 <- (uint176) => uast(
    type: "Synthetic",
    children: []
)

uint184 <- (uint184) => uast(
    type: "Synthetic",
    children: []
)

uint192 <- (uint192) => uast(
    type: "Synthetic",
    children: []
)

uint200 <- (uint200) => uast(
    type: "Synthetic",
    children: []
)

uint208 <- (uint208) => uast(
    type: "Synthetic",
    children: []
)

uint216 <- (uint216) => uast(
    type: "Synthetic",
    children: []
)

uint224 <- (uint224) => uast(
    type: "Synthetic",
    children: []
)

uint232 <- (uint232) => uast(
    type: "Synthetic",
    children: []
)

uint24 <- (uint24) => uast(
    type: "Synthetic",
    children: []
)

uint240 <- (uint240) => uast(
    type: "Synthetic",
    children: []
)

uint248 <- (uint248) => uast(
    type: "Synthetic",
    children: []
)

uint256 <- (uint256) => uast(
    type: "Synthetic",
    children: []
)

uint32 <- (uint32) => uast(
    type: "Synthetic",
    children: []
)

uint40 <- (uint40) => uast(
    type: "Synthetic",
    children: []
)

uint48 <- (uint48) => uast(
    type: "Synthetic",
    children: []
)

uint56 <- (uint56) => uast(
    type: "Synthetic",
    children: []
)

uint64 <- (uint64) => uast(
    type: "Synthetic",
    children: []
)

uint72 <- (uint72) => uast(
    type: "Synthetic",
    children: []
)

uint8 <- (uint8) => uast(
    type: "Synthetic",
    children: []
)

uint80 <- (uint80) => uast(
    type: "Synthetic",
    children: []
)

uint88 <- (uint88) => uast(
    type: "Synthetic",
    children: []
)

uint96 <- (uint96) => uast(
    type: "Synthetic",
    children: []
)

unchecked <- (unchecked) => uast(
    type: "Synthetic",
    children: []
)

unicode <- (unicode) => uast(
    type: "Synthetic",
    children: []
)

using <- (using) => uast(
    type: "Synthetic",
    children: []
)

var <- (var) => uast(
    type: "Synthetic",
    children: []
)

view <- (view) => uast(
    type: "Synthetic",
    children: []
)

virtual <- (virtual) => uast(
    type: "Synthetic",
    children: []
)

weeks <- (weeks) => uast(
    type: "Synthetic",
    children: []
)

wei <- (wei) => uast(
    type: "Synthetic",
    children: []
)

while <- (while) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

xor <- (xor) => uast(
    type: "Synthetic",
    children: []
)

years <- (years) => uast(
    type: "Synthetic",
    children: []
)

yul_decimal_number <- (yul_decimal_number) => uast(
    type: "Synthetic",
    children: []
)

yul_hex_number <- (yul_hex_number) => uast(
    type: "Synthetic",
    children: []
)

yul_leave <- (yul_leave) => uast(
    type: "Synthetic",
    children: []
)

