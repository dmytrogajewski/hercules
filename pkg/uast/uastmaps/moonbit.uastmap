_expression <- (_expression) => uast(
    type: "Synthetic",
    children: []
)

_pattern <- (_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
    children: []
)

_statement_expression <- (_statement_expression) => uast(
    type: "Synthetic",
    children: []
)

_structure_item <- (_structure_item) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: []
)

_type <- (_type) => uast(
    type: "Synthetic",
    children: []
)

access_expression <- (access_expression) => uast(
    type: "Synthetic",
    children: []
)

accessor <- (accessor) => uast(
    type: "Synthetic",
    children: []
)

and_expression <- (and_expression) => uast(
    type: "Synthetic",
    children: []
)

anonymous_lambda_expression <- (anonymous_lambda_expression) => uast(
    type: "Lambda",
    roles: "Lambda"
    children: []
)

anonymous_matrix_lambda_expression <- (anonymous_matrix_lambda_expression) => uast(
    type: "Lambda",
    roles: "Lambda"
    children: []
)

any_pattern <- (any_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
    children: []
)

apply_expression <- (apply_expression) => uast(
    type: "Synthetic",
    children: []
)

apply_operator <- (apply_operator) => uast(
    type: "Synthetic",
    children: []
)

apply_type <- (apply_type) => uast(
    type: "Synthetic",
    children: []
)

argument <- (argument) => uast(
    type: "Synthetic",
    children: []
)

arguments <- (arguments) => uast(
    type: "Synthetic",
    children: []
)

array_access_expression <- (array_access_expression) => uast(
    type: "Synthetic",
    children: []
)

array_expression <- (array_expression) => uast(
    type: "Synthetic",
    children: []
)

array_pattern <- (array_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
    children: []
)

array_sub_pattern <- (array_sub_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
    children: []
)

arrow_function_expression <- (arrow_function_expression) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

as_expression <- (as_expression) => uast(
    type: "Synthetic",
    children: []
)

as_pattern <- (as_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
    children: []
)

assign_expression <- (assign_expression) => uast(
    type: "Synthetic",
    children: []
)

assign_operator <- (assign_operator) => uast(
    type: "Synthetic",
    children: []
)

atomic_expression <- (atomic_expression) => uast(
    type: "Synthetic",
    children: []
)

atomic_pattern <- (atomic_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
    children: []
)

attribute <- (attribute) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: []
)

attribute_expression <- (attribute_expression) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: []
)

attribute_properties <- (attribute_properties) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: []
)

attribute_property <- (attribute_property) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: []
)

attributes <- (attributes) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: []
)

binary_expression <- (binary_expression) => uast(
    type: "Synthetic",
    children: []
)

block_expression <- (block_expression) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

boolean_literal <- (boolean_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

break_expression <- (break_expression) => uast(
    type: "Break",
    roles: "Break"
    children: []
)

byte_literal <- (byte_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

bytes_literal <- (bytes_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

case_clause <- (case_clause) => uast(
    type: "Case",
    roles: "Branch"
    children: []
)

char_literal <- (char_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

const_definition <- (const_definition) => uast(
    type: "Synthetic",
    children: []
)

constraint <- (constraint) => uast(
    type: "Synthetic",
    children: []
)

constraint_expression <- (constraint_expression) => uast(
    type: "Synthetic",
    children: []
)

constraint_pattern <- (constraint_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
    children: []
)

constraints <- (constraints) => uast(
    type: "Synthetic",
    children: []
)

constructor_expression <- (constructor_expression) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: []
)

constructor_parameter <- (constructor_parameter) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: []
)

constructor_pattern <- (constructor_pattern) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: []
)

constructor_pattern_argument <- (constructor_pattern_argument) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: []
)

continue_expression <- (continue_expression) => uast(
    type: "Continue",
    roles: "Continue"
    children: []
)

derive_directive <- (derive_directive) => uast(
    type: "Synthetic",
    children: []
)

derive_item <- (derive_item) => uast(
    type: "Synthetic",
    children: []
)

dot_apply_expression <- (dot_apply_expression) => uast(
    type: "Synthetic",
    children: []
)

dot_dot_apply_expression <- (dot_dot_apply_expression) => uast(
    type: "Synthetic",
    children: []
)

dot_dot_identifier <- (dot_dot_identifier) => uast(
    type: "If",
    children: []
)

dot_identifier <- (dot_identifier) => uast(
    type: "If",
    children: []
)

double_literal <- (double_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

else_clause <- (else_clause) => uast(
    type: "Synthetic",
    children: []
)

empty_struct_or_map_pattern <- (empty_struct_or_map_pattern) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: []
)

enum_constructor <- (enum_constructor) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: []
)

enum_constructor_payload <- (enum_constructor_payload) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: []
)

enum_definition <- (enum_definition) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
    children: []
)

error_annotation <- (error_annotation) => uast(
    type: "Synthetic",
    children: []
)

error_type_definition <- (error_type_definition) => uast(
    type: "Synthetic",
    children: []
)

escape_sequence <- (escape_sequence) => uast(
    type: "Synthetic",
    children: []
)

external_linkage <- (external_linkage) => uast(
    type: "Synthetic",
    children: []
)

external_source <- (external_source) => uast(
    type: "Synthetic",
    children: []
)

float_literal <- (float_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

for_binder <- (for_binder) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

for_expression <- (for_expression) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

for_in_expression <- (for_in_expression) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

forwarded_labelled_argument <- (forwarded_labelled_argument) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

forwarded_optional_argument <- (forwarded_optional_argument) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

function_alias_definition <- (function_alias_definition) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

function_alias_target <- (function_alias_target) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

function_alias_targets <- (function_alias_targets) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

function_definition <- (function_definition) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

function_identifier <- (function_identifier) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

function_type <- (function_type) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

guard_else_expression <- (guard_else_expression) => uast(
    type: "Synthetic",
    children: []
)

guard_expression <- (guard_expression) => uast(
    type: "Synthetic",
    children: []
)

guard_let_else_expression <- (guard_let_else_expression) => uast(
    type: "Synthetic",
    children: []
)

guard_let_expression <- (guard_let_expression) => uast(
    type: "Synthetic",
    children: []
)

identifier <- (identifier) => uast(
    type: "If",
    children: []
)

if_expression <- (if_expression) => uast(
    type: "If",
    children: []
)

impl_definition <- (impl_definition) => uast(
    type: "Synthetic",
    children: []
)

interpolator <- (interpolator) => uast(
    type: "Synthetic",
    children: []
)

is_expression <- (is_expression) => uast(
    type: "Synthetic",
    children: []
)

label <- (label) => uast(
    type: "Synthetic",
    children: []
)

labeled_expression <- (labeled_expression) => uast(
    type: "Synthetic",
    children: []
)

labeled_expression_pun <- (labeled_expression_pun) => uast(
    type: "Synthetic",
    children: []
)

labeled_pattern <- (labeled_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
    children: []
)

labeled_pattern_pun <- (labeled_pattern_pun) => uast(
    type: "Pattern",
    roles: "Pattern"
    children: []
)

labelled_argument <- (labelled_argument) => uast(
    type: "Synthetic",
    children: []
)

labelled_parameter <- (labelled_parameter) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

left_value <- (left_value) => uast(
    type: "Synthetic",
    children: []
)

let_expression <- (let_expression) => uast(
    type: "Synthetic",
    children: []
)

let_mut_expression <- (let_mut_expression) => uast(
    type: "Synthetic",
    children: []
)

letrec_expression <- (letrec_expression) => uast(
    type: "Synthetic",
    children: []
)

literal <- (literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

loop_expression <- (loop_expression) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

loop_label <- (loop_label) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

map_element_expression <- (map_element_expression) => uast(
    type: "Synthetic",
    children: []
)

map_element_key <- (map_element_key) => uast(
    type: "Synthetic",
    children: []
)

map_element_pattern <- (map_element_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
    children: []
)

map_expression <- (map_expression) => uast(
    type: "Synthetic",
    children: []
)

map_pattern <- (map_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
    children: []
)

match_expression <- (match_expression) => uast(
    type: "Match",
    roles: "Match"
    children: []
)

matrix_case_clause <- (matrix_case_clause) => uast(
    type: "Case",
    roles: "Branch"
    children: []
)

method_expression <- (method_expression) => uast(
    type: "Method",
    roles: "Function", "Declaration", "Member"
    children: []
)

multiline_interpolation_content <- (multiline_interpolation_content) => uast(
    type: "Synthetic",
    children: []
)

multiline_interpolation_fragment <- (multiline_interpolation_fragment) => uast(
    type: "Synthetic",
    children: []
)

multiline_string_fragment <- (multiline_string_fragment) => uast(
    type: "Synthetic",
    children: []
)

multiline_string_literal <- (multiline_string_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

mutability <- (mutability) => uast(
    type: "Synthetic",
    children: []
)

named_lambda_expression <- (named_lambda_expression) => uast(
    type: "Lambda",
    roles: "Lambda"
    children: []
)

named_matrix_expression <- (named_matrix_expression) => uast(
    type: "Synthetic",
    children: []
)

option_type <- (option_type) => uast(
    type: "Synthetic",
    children: []
)

optional_argument <- (optional_argument) => uast(
    type: "Synthetic",
    children: []
)

optional_label <- (optional_label) => uast(
    type: "Synthetic",
    children: []
)

optional_parameter <- (optional_parameter) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

optional_parameter_with_default <- (optional_parameter_with_default) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

or_pattern <- (or_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
    children: []
)

parameter <- (parameter) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

parameters <- (parameters) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

parenthesized_expression <- (parenthesized_expression) => uast(
    type: "Synthetic",
    children: []
)

parenthesized_pattern <- (parenthesized_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
    children: []
)

parenthesized_type <- (parenthesized_type) => uast(
    type: "Synthetic",
    children: []
)

pattern_guard <- (pattern_guard) => uast(
    type: "Pattern",
    roles: "Pattern"
    children: []
)

positional_parameter <- (positional_parameter) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

pub <- (pub) => uast(
    type: "Synthetic",
    children: []
)

pub_attribute <- (pub_attribute) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: []
)

qualified_identifier <- (qualified_identifier) => uast(
    type: "If",
    children: []
)

qualified_type_identifier <- (qualified_type_identifier) => uast(
    type: "If",
    children: []
)

raise_expression <- (raise_expression) => uast(
    type: "Synthetic",
    children: []
)

range_expression <- (range_expression) => uast(
    type: "Synthetic",
    children: []
)

range_pattern <- (range_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
    children: []
)

return_expression <- (return_expression) => uast(
    type: "Return",
    roles: "Return"
    children: []
)

return_type <- (return_type) => uast(
    type: "Return",
    roles: "Return"
    children: []
)

string_fragment <- (string_fragment) => uast(
    type: "Synthetic",
    children: []
)

string_interpolation <- (string_interpolation) => uast(
    type: "Synthetic",
    children: []
)

string_literal <- (string_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

struct_definition <- (struct_definition) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: []
)

struct_expression <- (struct_expression) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: []
)

struct_field_declaration <- (struct_field_declaration) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: []
)

struct_field_expression <- (struct_field_expression) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: []
)

struct_field_pattern <- (struct_field_pattern) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: []
)

struct_pattern <- (struct_pattern) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: []
)

structure <- (structure) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: []
)

super_trait_declaration <- (super_trait_declaration) => uast(
    type: "Synthetic",
    children: []
)

test_definition <- (test_definition) => uast(
    type: "Synthetic",
    children: []
)

trait_alias_definition <- (trait_alias_definition) => uast(
    type: "Synthetic",
    children: []
)

trait_alias_target <- (trait_alias_target) => uast(
    type: "Synthetic",
    children: []
)

trait_alias_targets <- (trait_alias_targets) => uast(
    type: "Synthetic",
    children: []
)

trait_definition <- (trait_definition) => uast(
    type: "Synthetic",
    children: []
)

trait_method_declaration <- (trait_method_declaration) => uast(
    type: "Method",
    roles: "Function", "Declaration", "Member"
    children: []
)

trait_method_default_annotation <- (trait_method_default_annotation) => uast(
    type: "Method",
    roles: "Function", "Declaration", "Member"
    children: []
)

trait_method_parameter <- (trait_method_parameter) => uast(
    type: "Method",
    roles: "Function", "Declaration", "Member"
    children: []
)

trait_object_type <- (trait_object_type) => uast(
    type: "Synthetic",
    children: []
)

try_catch_clause <- (try_catch_clause) => uast(
    type: "Try",
    roles: "Try"
    children: []
)

try_else_clause <- (try_else_clause) => uast(
    type: "Try",
    roles: "Try"
    children: []
)

try_expression <- (try_expression) => uast(
    type: "Try",
    roles: "Try"
    children: []
)

try_question_expression <- (try_question_expression) => uast(
    type: "Try",
    roles: "Try"
    children: []
)

tuple_expression <- (tuple_expression) => uast(
    type: "Tuple",
    children: []
)

tuple_pattern <- (tuple_pattern) => uast(
    type: "Tuple",
    children: []
)

tuple_type <- (tuple_type) => uast(
    type: "Tuple",
    children: []
)

type_alias_definition <- (type_alias_definition) => uast(
    type: "Synthetic",
    children: []
)

type_alias_target <- (type_alias_target) => uast(
    type: "Synthetic",
    children: []
)

type_alias_targets <- (type_alias_targets) => uast(
    type: "Synthetic",
    children: []
)

type_annotation <- (type_annotation) => uast(
    type: "TypeAnnotation",
    roles: "Type"
    children: []
)

type_arguments <- (type_arguments) => uast(
    type: "Synthetic",
    children: []
)

type_definition <- (type_definition) => uast(
    type: "Synthetic",
    children: []
)

type_identifier <- (type_identifier) => uast(
    type: "If",
    children: []
)

type_name <- (type_name) => uast(
    type: "Synthetic",
    children: []
)

type_parameters <- (type_parameters) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

unary_expression <- (unary_expression) => uast(
    type: "Synthetic",
    children: []
)

unescaped_string_fragment <- (unescaped_string_fragment) => uast(
    type: "Synthetic",
    children: []
)

unit_expression <- (unit_expression) => uast(
    type: "Synthetic",
    children: []
)

value_definition <- (value_definition) => uast(
    type: "Synthetic",
    children: []
)

visibility <- (visibility) => uast(
    type: "Synthetic",
    children: []
)

while_expression <- (while_expression) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

F <- (F) => uast(
    type: "Synthetic",
    children: []
)

_ <- (_) => uast(
    type: "Synthetic",
    children: []
)

all <- (all) => uast(
    type: "Synthetic",
    children: []
)

and <- (and) => uast(
    type: "Synthetic",
    children: []
)

as <- (as) => uast(
    type: "Synthetic",
    children: []
)

async <- (async) => uast(
    type: "Synthetic",
    children: []
)

break <- (break) => uast(
    type: "Break",
    roles: "Break"
    children: []
)

catch <- (catch) => uast(
    type: "Catch",
    roles: "Catch"
    children: []
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
    children: []
)

const <- (const) => uast(
    type: "Synthetic",
    children: []
)

continue <- (continue) => uast(
    type: "Continue",
    roles: "Continue"
    children: []
)

derive <- (derive) => uast(
    type: "Synthetic",
    children: []
)

dot_lowercase_identifier <- (dot_lowercase_identifier) => uast(
    type: "If",
    children: []
)

dot_uppercase_identifier <- (dot_uppercase_identifier) => uast(
    type: "If",
    children: []
)

else <- (else) => uast(
    type: "Synthetic",
    children: []
)

enum <- (enum) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
    children: []
)

extern <- (extern) => uast(
    type: "Synthetic",
    children: []
)

false <- (false) => uast(
    type: "Synthetic",
    children: []
)

fn <- (fn) => uast(
    type: "Synthetic",
    children: []
)

fnalias <- (fnalias) => uast(
    type: "Synthetic",
    children: []
)

for <- (for) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

guard <- (guard) => uast(
    type: "Synthetic",
    children: []
)

if <- (if) => uast(
    type: "If",
    children: []
)

impl <- (impl) => uast(
    type: "Synthetic",
    children: []
)

in <- (in) => uast(
    type: "Synthetic",
    children: []
)

integer_literal <- (integer_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

is <- (is) => uast(
    type: "Synthetic",
    children: []
)

let <- (let) => uast(
    type: "Synthetic",
    children: []
)

letrec <- (letrec) => uast(
    type: "Synthetic",
    children: []
)

loop <- (loop) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

lowercase_identifier <- (lowercase_identifier) => uast(
    type: "If",
    children: []
)

match <- (match) => uast(
    type: "Match",
    roles: "Match"
    children: []
)

multiline_string_content <- (multiline_string_content) => uast(
    type: "Synthetic",
    children: []
)

mut <- (mut) => uast(
    type: "Synthetic",
    children: []
)

open <- (open) => uast(
    type: "Synthetic",
    children: []
)

package_identifier <- (package_identifier) => uast(
    type: "If",
    children: []
)

priv <- (priv) => uast(
    type: "Synthetic",
    children: []
)

pub <- (pub) => uast(
    type: "Synthetic",
    children: []
)

raise <- (raise) => uast(
    type: "Synthetic",
    children: []
)

readonly <- (readonly) => uast(
    type: "Synthetic",
    children: []
)

return <- (return) => uast(
    type: "Return",
    roles: "Return"
    children: []
)

struct <- (struct) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: []
)

suberror <- (suberror) => uast(
    type: "Synthetic",
    children: []
)

test <- (test) => uast(
    type: "Synthetic",
    children: []
)

trait <- (trait) => uast(
    type: "Synthetic",
    children: []
)

traitalias <- (traitalias) => uast(
    type: "Synthetic",
    children: []
)

true <- (true) => uast(
    type: "Synthetic",
    children: []
)

try <- (try) => uast(
    type: "Try",
    roles: "Try"
    children: []
)

type <- (type) => uast(
    type: "Synthetic",
    children: []
)

typealias <- (typealias) => uast(
    type: "Synthetic",
    children: []
)

unfinished <- (unfinished) => uast(
    type: "Synthetic",
    children: []
)

uppercase_identifier <- (uppercase_identifier) => uast(
    type: "If",
    children: []
)

while <- (while) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

with <- (with) => uast(
    type: "Synthetic",
    children: []
)

