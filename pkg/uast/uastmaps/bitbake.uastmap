_compound_statement <- (_compound_statement) => uast(
    type: "Synthetic",
    children: []
)

_simple_statement <- (_simple_statement) => uast(
    type: "Synthetic",
    children: []
)

expression <- (expression) => uast(
    type: "Synthetic",
    children: []
)

parameter <- (parameter) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

pattern <- (pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
    children: []
)

primary_expression <- (primary_expression) => uast(
    type: "Synthetic",
    children: []
)

addhandler_statement <- (addhandler_statement) => uast(
    type: "Synthetic",
    children: []
)

addtask_statement <- (addtask_statement) => uast(
    type: "Synthetic",
    children: []
)

aliased_import <- (aliased_import) => uast(
    type: "Import",
    roles: "Import"
    children: "dotted_name", "python_identifier"
)

anonymous_python_function <- (anonymous_python_function) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

argument_list <- (argument_list) => uast(
    type: "List",
    children: []
)

as_pattern <- (as_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
    children: "as_pattern_target"
)

assert_statement <- (assert_statement) => uast(
    type: "Synthetic",
    children: []
)

assignment <- (assignment) => uast(
    type: "Assignment",
    roles: "Assignment"
    children: "assignment", "augmented_assignment", "expression", "expression_list", "pattern", "pattern_list", "type", "yield"
)

attribute <- (attribute) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: "primary_expression", "python_identifier"
)

augmented_assignment <- (augmented_assignment) => uast(
    type: "Assignment",
    roles: "Assignment"
    children: "assignment", "augmented_assignment", "expression", "expression_list", "pattern", "pattern_list", "yield"
)

await <- (await) => uast(
    type: "Await",
    roles: "Await"
    children: []
)

binary_operator <- (binary_operator) => uast(
    type: "BinaryOp",
    roles: "Operator"
    children: "primary_expression"
)

block <- (block) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

boolean_operator <- (boolean_operator) => uast(
    type: "Synthetic",
    children: "and", "expression", "or"
)

break_statement <- (break_statement) => uast(
    type: "Break",
    roles: "Break"
    children: []
)

call <- (call) => uast(
    type: "Call",
    roles: "Call"
    children: "argument_list", "generator_expression", "primary_expression"
)

chevron <- (chevron) => uast(
    type: "Synthetic",
    children: []
)

comparison_operator <- (comparison_operator) => uast(
    type: "Synthetic",
    children: "in", "is"
)

concatenated_string <- (concatenated_string) => uast(
    type: "Synthetic",
    children: []
)

concatenation <- (concatenation) => uast(
    type: "Synthetic",
    children: []
)

conditional_expression <- (conditional_expression) => uast(
    type: "Synthetic",
    children: []
)

constrained_type <- (constrained_type) => uast(
    type: "Synthetic",
    children: []
)

continue_statement <- (continue_statement) => uast(
    type: "Continue",
    roles: "Continue"
    children: []
)

default_parameter <- (default_parameter) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: "expression", "python_identifier", "tuple_pattern"
)

delete_statement <- (delete_statement) => uast(
    type: "Synthetic",
    children: []
)

deltask_statement <- (deltask_statement) => uast(
    type: "Synthetic",
    children: []
)

dictionary <- (dictionary) => uast(
    type: "Dict",
    children: []
)

dictionary_comprehension <- (dictionary_comprehension) => uast(
    type: "Dict",
    children: "pair"
)

dictionary_splat <- (dictionary_splat) => uast(
    type: "Dict",
    children: []
)

dictionary_splat_pattern <- (dictionary_splat_pattern) => uast(
    type: "Dict",
    children: []
)

dotted_name <- (dotted_name) => uast(
    type: "Synthetic",
    children: []
)

elif_clause <- (elif_clause) => uast(
    type: "If",
    children: "block", "expression"
)

else_clause <- (else_clause) => uast(
    type: "Synthetic",
    children: "block"
)

except_clause <- (except_clause) => uast(
    type: "Synthetic",
    children: []
)

except_group_clause <- (except_group_clause) => uast(
    type: "Synthetic",
    children: []
)

exec_statement <- (exec_statement) => uast(
    type: "Synthetic",
    children: "python_identifier", "python_string"
)

export_functions_statement <- (export_functions_statement) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

export_statement <- (export_statement) => uast(
    type: "Synthetic",
    children: []
)

expression_list <- (expression_list) => uast(
    type: "List",
    children: []
)

expression_statement <- (expression_statement) => uast(
    type: "Synthetic",
    children: []
)

finally_clause <- (finally_clause) => uast(
    type: "Finally",
    roles: "Finally"
    children: []
)

for_in_clause <- (for_in_clause) => uast(
    type: "Loop",
    roles: "Loop"
    children: "expression", "pattern", "pattern_list"
)

for_statement <- (for_statement) => uast(
    type: "Loop",
    roles: "Loop"
    children: "block", "else_clause", "expression", "expression_list", "pattern", "pattern_list"
)

format_expression <- (format_expression) => uast(
    type: "Loop",
    roles: "Loop"
    children: "expression", "expression_list", "format_specifier", "pattern_list", "type_conversion", "yield"
)

format_specifier <- (format_specifier) => uast(
    type: "If",
    children: []
)

function_definition <- (function_definition) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

future_import_statement <- (future_import_statement) => uast(
    type: "Import",
    roles: "Import"
    children: "aliased_import", "dotted_name"
)

generator_expression <- (generator_expression) => uast(
    type: "Generator",
    roles: "Generator"
    children: "expression"
)

generic_type <- (generic_type) => uast(
    type: "Synthetic",
    children: []
)

global_statement <- (global_statement) => uast(
    type: "Synthetic",
    children: []
)

if_clause <- (if_clause) => uast(
    type: "If",
    children: []
)

if_statement <- (if_statement) => uast(
    type: "If",
    children: "block", "elif_clause", "else_clause", "expression"
)

import_from_statement <- (import_from_statement) => uast(
    type: "Import",
    roles: "Import"
    children: "aliased_import", "dotted_name", "relative_import"
)

import_prefix <- (import_prefix) => uast(
    type: "Import",
    roles: "Import"
    children: []
)

import_statement <- (import_statement) => uast(
    type: "Import",
    roles: "Import"
    children: "aliased_import", "dotted_name"
)

include_directive <- (include_directive) => uast(
    type: "Synthetic",
    children: []
)

include_path <- (include_path) => uast(
    type: "Synthetic",
    children: []
)

inherit_directive <- (inherit_directive) => uast(
    type: "Synthetic",
    children: []
)

inline_python <- (inline_python) => uast(
    type: "Synthetic",
    children: []
)

interpolation <- (interpolation) => uast(
    type: "Synthetic",
    children: "expression", "expression_list", "format_specifier", "pattern_list", "type_conversion", "yield"
)

keyword_argument <- (keyword_argument) => uast(
    type: "Synthetic",
    children: "expression", "python_identifier"
)

keyword_separator <- (keyword_separator) => uast(
    type: "Synthetic",
    children: []
)

lambda <- (lambda) => uast(
    type: "Lambda",
    roles: "Lambda"
    children: "expression", "lambda_parameters"
)

lambda_parameters <- (lambda_parameters) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

list <- (list) => uast(
    type: "List",
    children: []
)

list_comprehension <- (list_comprehension) => uast(
    type: "List",
    children: "expression"
)

list_pattern <- (list_pattern) => uast(
    type: "List",
    children: []
)

list_splat <- (list_splat) => uast(
    type: "List",
    children: []
)

list_splat_pattern <- (list_splat_pattern) => uast(
    type: "List",
    children: []
)

literal <- (literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

member_type <- (member_type) => uast(
    type: "Synthetic",
    children: []
)

named_expression <- (named_expression) => uast(
    type: "Synthetic",
    children: "expression", "python_identifier"
)

nonlocal_statement <- (nonlocal_statement) => uast(
    type: "Synthetic",
    children: []
)

not_operator <- (not_operator) => uast(
    type: "Synthetic",
    children: "expression"
)

override <- (override) => uast(
    type: "Synthetic",
    children: []
)

overrides_statement <- (overrides_statement) => uast(
    type: "Synthetic",
    children: []
)

pair <- (pair) => uast(
    type: "Synthetic",
    children: "expression"
)

parameters <- (parameters) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

parenthesized_expression <- (parenthesized_expression) => uast(
    type: "Synthetic",
    children: []
)

parenthesized_list_splat <- (parenthesized_list_splat) => uast(
    type: "List",
    children: []
)

pass_statement <- (pass_statement) => uast(
    type: "Synthetic",
    children: []
)

pattern_list <- (pattern_list) => uast(
    type: "List",
    children: []
)

positional_separator <- (positional_separator) => uast(
    type: "Synthetic",
    children: []
)

print_statement <- (print_statement) => uast(
    type: "Synthetic",
    children: "expression"
)

python_function_definition <- (python_function_definition) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: "block", "parameters", "python_identifier", "type"
)

python_string <- (python_string) => uast(
    type: "Synthetic",
    children: []
)

raise_statement <- (raise_statement) => uast(
    type: "Synthetic",
    children: "expression"
)

recipe <- (recipe) => uast(
    type: "Synthetic",
    children: []
)

relative_import <- (relative_import) => uast(
    type: "Import",
    roles: "Import"
    children: []
)

require_directive <- (require_directive) => uast(
    type: "Synthetic",
    children: []
)

return_statement <- (return_statement) => uast(
    type: "Return",
    roles: "Return"
    children: []
)

set <- (set) => uast(
    type: "Set",
    children: []
)

set_comprehension <- (set_comprehension) => uast(
    type: "Set",
    children: "expression"
)

slice <- (slice) => uast(
    type: "Slice",
    children: []
)

splat_type <- (splat_type) => uast(
    type: "Synthetic",
    children: []
)

string <- (string) => uast(
    type: "Synthetic",
    children: []
)

string_content <- (string_content) => uast(
    type: "Synthetic",
    children: []
)

subscript <- (subscript) => uast(
    type: "Synthetic",
    children: "expression", "primary_expression", "slice"
)

try_statement <- (try_statement) => uast(
    type: "Try",
    roles: "Try"
    children: "block"
)

tuple <- (tuple) => uast(
    type: "Tuple",
    children: []
)

tuple_pattern <- (tuple_pattern) => uast(
    type: "Tuple",
    children: []
)

type <- (type) => uast(
    type: "Synthetic",
    children: []
)

type_parameter <- (type_parameter) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

typed_default_parameter <- (typed_default_parameter) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: "expression", "python_identifier", "type"
)

typed_parameter <- (typed_parameter) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: "type"
)

unary_operator <- (unary_operator) => uast(
    type: "UnaryOp",
    roles: "Operator"
    children: "primary_expression"
)

union_type <- (union_type) => uast(
    type: "Synthetic",
    children: []
)

unset_statement <- (unset_statement) => uast(
    type: "Set",
    children: []
)

variable_assignment <- (variable_assignment) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
    children: []
)

variable_expansion <- (variable_expansion) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
    children: []
)

variable_flag <- (variable_flag) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
    children: []
)

while_statement <- (while_statement) => uast(
    type: "Loop",
    roles: "Loop"
    children: "block", "else_clause", "expression"
)

wildcard_import <- (wildcard_import) => uast(
    type: "Import",
    roles: "Import"
    children: []
)

with_clause <- (with_clause) => uast(
    type: "Synthetic",
    children: []
)

with_item <- (with_item) => uast(
    type: "Synthetic",
    children: "expression"
)

with_statement <- (with_statement) => uast(
    type: "Synthetic",
    children: "block"
)

yield <- (yield) => uast(
    type: "Yield",
    roles: "Yield"
    children: []
)

EXPORT_FUNCTIONS <- (EXPORT_FUNCTIONS) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

INHERIT <- (INHERIT) => uast(
    type: "Synthetic",
    children: []
)

OVERRIDES <- (OVERRIDES) => uast(
    type: "Synthetic",
    children: []
)

__future__ <- (__future__) => uast(
    type: "Synthetic",
    children: []
)

addhandler <- (addhandler) => uast(
    type: "Synthetic",
    children: []
)

addtask <- (addtask) => uast(
    type: "Synthetic",
    children: []
)

after <- (after) => uast(
    type: "Synthetic",
    children: []
)

and <- (and) => uast(
    type: "Synthetic",
    children: []
)

append <- (append) => uast(
    type: "Synthetic",
    children: []
)

as <- (as) => uast(
    type: "Synthetic",
    children: []
)

assert <- (assert) => uast(
    type: "Synthetic",
    children: []
)

async <- (async) => uast(
    type: "Synthetic",
    children: []
)

await <- (await) => uast(
    type: "Await",
    roles: "Await"
    children: []
)

before <- (before) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

break <- (break) => uast(
    type: "Break",
    roles: "Break"
    children: []
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
    children: []
)

continue <- (continue) => uast(
    type: "Continue",
    roles: "Continue"
    children: []
)

def <- (def) => uast(
    type: "Synthetic",
    children: []
)

del <- (del) => uast(
    type: "Synthetic",
    children: []
)

deltask <- (deltask) => uast(
    type: "Synthetic",
    children: []
)

elif <- (elif) => uast(
    type: "If",
    children: []
)

ellipsis <- (ellipsis) => uast(
    type: "Synthetic",
    children: []
)

else <- (else) => uast(
    type: "Synthetic",
    children: []
)

escape_interpolation <- (escape_interpolation) => uast(
    type: "Synthetic",
    children: []
)

escape_sequence <- (escape_sequence) => uast(
    type: "Synthetic",
    children: []
)

except <- (except) => uast(
    type: "Synthetic",
    children: []
)

exec <- (exec) => uast(
    type: "Synthetic",
    children: []
)

export <- (export) => uast(
    type: "Synthetic",
    children: []
)

fakeroot <- (fakeroot) => uast(
    type: "Synthetic",
    children: []
)

false <- (false) => uast(
    type: "Synthetic",
    children: []
)

finally <- (finally) => uast(
    type: "Finally",
    roles: "Finally"
    children: []
)

flag <- (flag) => uast(
    type: "Synthetic",
    children: []
)

float <- (float) => uast(
    type: "Synthetic",
    children: []
)

for <- (for) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

from <- (from) => uast(
    type: "Synthetic",
    children: []
)

global <- (global) => uast(
    type: "Synthetic",
    children: []
)

identifier <- (identifier) => uast(
    type: "If",
    children: []
)

if <- (if) => uast(
    type: "If",
    children: []
)

import <- (import) => uast(
    type: "Import",
    roles: "Import"
    children: []
)

in <- (in) => uast(
    type: "Synthetic",
    children: []
)

include <- (include) => uast(
    type: "Synthetic",
    children: []
)

inherit <- (inherit) => uast(
    type: "Synthetic",
    children: []
)

inherit_path <- (inherit_path) => uast(
    type: "Synthetic",
    children: []
)

integer <- (integer) => uast(
    type: "Synthetic",
    children: []
)

is <- (is) => uast(
    type: "Synthetic",
    children: []
)

lambda <- (lambda) => uast(
    type: "Lambda",
    roles: "Lambda"
    children: []
)

line_continuation <- (line_continuation) => uast(
    type: "Synthetic",
    children: []
)

noexec <- (noexec) => uast(
    type: "Synthetic",
    children: []
)

none <- (none) => uast(
    type: "Synthetic",
    children: []
)

nonlocal <- (nonlocal) => uast(
    type: "Synthetic",
    children: []
)

not <- (not) => uast(
    type: "Synthetic",
    children: []
)

or <- (or) => uast(
    type: "Synthetic",
    children: []
)

pass <- (pass) => uast(
    type: "Synthetic",
    children: []
)

prepend <- (prepend) => uast(
    type: "Synthetic",
    children: []
)

print <- (print) => uast(
    type: "Synthetic",
    children: []
)

python <- (python) => uast(
    type: "Synthetic",
    children: []
)

python_identifier <- (python_identifier) => uast(
    type: "If",
    children: []
)

raise <- (raise) => uast(
    type: "Synthetic",
    children: []
)

remove <- (remove) => uast(
    type: "Synthetic",
    children: []
)

require <- (require) => uast(
    type: "Synthetic",
    children: []
)

return <- (return) => uast(
    type: "Return",
    roles: "Return"
    children: []
)

shell_content <- (shell_content) => uast(
    type: "Synthetic",
    children: []
)

string_end <- (string_end) => uast(
    type: "Synthetic",
    children: []
)

string_start <- (string_start) => uast(
    type: "Synthetic",
    children: []
)

true <- (true) => uast(
    type: "Synthetic",
    children: []
)

try <- (try) => uast(
    type: "Try",
    roles: "Try"
    children: []
)

type_conversion <- (type_conversion) => uast(
    type: "Synthetic",
    children: []
)

unset <- (unset) => uast(
    type: "Set",
    children: []
)

while <- (while) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

with <- (with) => uast(
    type: "Synthetic",
    children: []
)

yield <- (yield) => uast(
    type: "Yield",
    roles: "Yield"
    children: []
)

