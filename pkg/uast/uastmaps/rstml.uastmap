_declaration_statement <- (_declaration_statement) => uast(
    type: "Synthetic",
    children: []
)

_expression <- (_expression) => uast(
    type: "Synthetic",
    children: []
)

_literal <- (_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

_literal_pattern <- (_literal_pattern) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

_pattern <- (_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
    children: []
)

_type <- (_type) => uast(
    type: "Synthetic",
    children: []
)

abstract_type <- (abstract_type) => uast(
    type: "Synthetic",
    children: "function_type", "generic_type", "removed_trait_bound", "scoped_type_identifier", "tuple_type", "type_identifier"
)

arguments <- (arguments) => uast(
    type: "Synthetic",
    children: []
)

array_expression <- (array_expression) => uast(
    type: "Synthetic",
    children: "_expression"
)

array_type <- (array_type) => uast(
    type: "Synthetic",
    children: "_expression", "_type"
)

assignment_expression <- (assignment_expression) => uast(
    type: "Assignment",
    roles: "Assignment"
    children: "_expression"
)

associated_type <- (associated_type) => uast(
    type: "Synthetic",
    children: "trait_bounds", "type_identifier", "type_parameters"
)

async_block <- (async_block) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

attribute <- (attribute) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: "_expression", "token_tree"
)

attribute_item <- (attribute_item) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: []
)

await_expression <- (await_expression) => uast(
    type: "Await",
    roles: "Await"
    children: []
)

base_field_initializer <- (base_field_initializer) => uast(
    type: "Field",
    roles: "Member"
    children: []
)

binary_expression <- (binary_expression) => uast(
    type: "Synthetic",
    children: "_expression"
)

block <- (block) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

block_comment <- (block_comment) => uast(
    type: "Block",
    roles: "Body"
    children: "doc_comment", "inner_doc_comment_marker", "outer_doc_comment_marker"
)

boolean_literal <- (boolean_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

bounded_type <- (bounded_type) => uast(
    type: "Synthetic",
    children: []
)

bracketed_type <- (bracketed_type) => uast(
    type: "Synthetic",
    children: []
)

break_expression <- (break_expression) => uast(
    type: "Break",
    roles: "Break"
    children: []
)

call_expression <- (call_expression) => uast(
    type: "Call",
    roles: "Call"
    children: "_literal", "arguments", "array_expression", "assignment_expression", "async_block", "await_expression", "binary_expression", "block", "break_expression", "call_expression", "closure_expression", "compound_assignment_expr", "const_block", "continue_expression", "field_expression", "for_expression", "generic_function", "identifier", "if_expression", "index_expression", "loop_expression", "macro_invocation", "match_expression", "metavariable", "parenthesized_expression", "reference_expression", "return_expression", "scoped_identifier", "self", "struct_expression", "try_block", "try_expression", "tuple_expression", "type_cast_expression", "unary_expression", "unit_expression", "unsafe_block", "while_expression", "yield_expression"
)

captured_pattern <- (captured_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
    children: []
)

close_tag <- (close_tag) => uast(
    type: "Synthetic",
    children: "node_identifier"
)

closure_expression <- (closure_expression) => uast(
    type: "Synthetic",
    children: "_", "_expression", "_type", "closure_parameters"
)

closure_parameters <- (closure_parameters) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

comment_node <- (comment_node) => uast(
    type: "Comment",
    roles: "Comment"
    children: []
)

compound_assignment_expr <- (compound_assignment_expr) => uast(
    type: "Assignment",
    roles: "Assignment"
    children: "_expression"
)

const_block <- (const_block) => uast(
    type: "Block",
    roles: "Body"
    children: "block"
)

const_item <- (const_item) => uast(
    type: "Synthetic",
    children: "_expression", "_type", "identifier"
)

const_parameter <- (const_parameter) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: "_type", "identifier"
)

constrained_type_parameter <- (constrained_type_parameter) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: "lifetime", "trait_bounds", "type_identifier"
)

continue_expression <- (continue_expression) => uast(
    type: "Continue",
    roles: "Continue"
    children: []
)

declaration_list <- (declaration_list) => uast(
    type: "List",
    children: []
)

delim_nodes <- (delim_nodes) => uast(
    type: "Synthetic",
    children: []
)

doctype_node <- (doctype_node) => uast(
    type: "Synthetic",
    children: []
)

dynamic_type <- (dynamic_type) => uast(
    type: "Synthetic",
    children: "function_type", "generic_type", "higher_ranked_trait_bound", "scoped_type_identifier", "type_identifier"
)

element_node <- (element_node) => uast(
    type: "Synthetic",
    children: "close_tag", "open_tag"
)

else_clause <- (else_clause) => uast(
    type: "Synthetic",
    children: []
)

empty_statement <- (empty_statement) => uast(
    type: "Synthetic",
    children: []
)

enum_item <- (enum_item) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
    children: "enum_variant_list", "type_identifier", "type_parameters"
)

enum_variant <- (enum_variant) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
    children: "_expression", "field_declaration_list", "identifier", "ordered_field_declaration_list"
)

enum_variant_list <- (enum_variant_list) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
    children: []
)

expression_statement <- (expression_statement) => uast(
    type: "Synthetic",
    children: []
)

extern_crate_declaration <- (extern_crate_declaration) => uast(
    type: "Synthetic",
    children: "identifier"
)

extern_modifier <- (extern_modifier) => uast(
    type: "If",
    children: []
)

field_declaration <- (field_declaration) => uast(
    type: "Field",
    roles: "Member"
    children: "_type", "field_identifier"
)

field_declaration_list <- (field_declaration_list) => uast(
    type: "Field",
    roles: "Member"
    children: []
)

field_expression <- (field_expression) => uast(
    type: "Field",
    roles: "Member"
    children: "_expression", "field_identifier", "integer_literal"
)

field_initializer <- (field_initializer) => uast(
    type: "Field",
    roles: "Member"
    children: "_expression", "field_identifier", "integer_literal"
)

field_initializer_list <- (field_initializer_list) => uast(
    type: "Field",
    roles: "Member"
    children: []
)

field_pattern <- (field_pattern) => uast(
    type: "Field",
    roles: "Member"
    children: "_pattern", "field_identifier", "shorthand_field_identifier"
)

for_expression <- (for_expression) => uast(
    type: "Loop",
    roles: "Loop"
    children: "_expression", "_pattern", "block"
)

for_lifetimes <- (for_lifetimes) => uast(
    type: "If",
    children: []
)

foreign_mod_item <- (foreign_mod_item) => uast(
    type: "Loop",
    roles: "Loop"
    children: "declaration_list"
)

fragment_specifier <- (fragment_specifier) => uast(
    type: "If",
    children: []
)

function_item <- (function_item) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: "_type", "block", "identifier", "metavariable", "parameters", "type_parameters"
)

function_modifiers <- (function_modifiers) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

function_signature_item <- (function_signature_item) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: "_type", "identifier", "metavariable", "parameters", "type_parameters"
)

function_type <- (function_type) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: "_type", "parameters", "scoped_type_identifier", "type_identifier"
)

generic_function <- (generic_function) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: "field_expression", "identifier", "scoped_identifier", "type_arguments"
)

generic_identifier <- (generic_identifier) => uast(
    type: "If",
    children: []
)

generic_type <- (generic_type) => uast(
    type: "Synthetic",
    children: "identifier", "scoped_identifier", "scoped_type_identifier", "type_arguments", "type_identifier"
)

generic_type_with_turbofish <- (generic_type_with_turbofish) => uast(
    type: "Synthetic",
    children: "scoped_identifier", "type_arguments", "type_identifier"
)

higher_ranked_trait_bound <- (higher_ranked_trait_bound) => uast(
    type: "Synthetic",
    children: "_type", "type_parameters"
)

identifier <- (identifier) => uast(
    type: "If",
    children: []
)

if_expression <- (if_expression) => uast(
    type: "If",
    children: "_expression", "block", "else_clause", "let_chain", "let_condition"
)

impl_item <- (impl_item) => uast(
    type: "Synthetic",
    children: "_type", "declaration_list", "generic_type", "scoped_type_identifier", "type_identifier", "type_parameters"
)

index_expression <- (index_expression) => uast(
    type: "Index",
    roles: "Index"
    children: []
)

inner_attribute_item <- (inner_attribute_item) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: []
)

label <- (label) => uast(
    type: "Synthetic",
    children: []
)

let_chain <- (let_chain) => uast(
    type: "Synthetic",
    children: []
)

let_condition <- (let_condition) => uast(
    type: "Synthetic",
    children: "_expression", "_pattern"
)

let_declaration <- (let_declaration) => uast(
    type: "Synthetic",
    children: "_expression", "_pattern", "_type", "block"
)

lifetime <- (lifetime) => uast(
    type: "If",
    children: []
)

line_comment <- (line_comment) => uast(
    type: "Comment",
    roles: "Comment"
    children: "doc_comment", "inner_doc_comment_marker", "outer_doc_comment_marker"
)

loop_expression <- (loop_expression) => uast(
    type: "Loop",
    roles: "Loop"
    children: "block"
)

macro_definition <- (macro_definition) => uast(
    type: "Synthetic",
    children: "identifier"
)

macro_invocation <- (macro_invocation) => uast(
    type: "Synthetic",
    children: "identifier", "scoped_identifier"
)

macro_rule <- (macro_rule) => uast(
    type: "Synthetic",
    children: "token_tree", "token_tree_pattern"
)

match_arm <- (match_arm) => uast(
    type: "Match",
    roles: "Match"
    children: "_expression", "match_pattern"
)

match_block <- (match_block) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

match_expression <- (match_expression) => uast(
    type: "Match",
    roles: "Match"
    children: "_expression", "match_block"
)

match_pattern <- (match_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
    children: "_expression", "let_chain", "let_condition"
)

mod_item <- (mod_item) => uast(
    type: "Synthetic",
    children: "declaration_list", "identifier"
)

mut_pattern <- (mut_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
    children: []
)

negative_literal <- (negative_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

never_type <- (never_type) => uast(
    type: "Synthetic",
    children: []
)

node_attribute <- (node_attribute) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: "node_identifier", "rust_expression"
)

node_identifier <- (node_identifier) => uast(
    type: "If",
    children: []
)

open_tag <- (open_tag) => uast(
    type: "Synthetic",
    children: "block", "node_attribute", "node_identifier"
)

optional_type_parameter <- (optional_type_parameter) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: "_type", "constrained_type_parameter", "type_identifier"
)

or_pattern <- (or_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
    children: []
)

ordered_field_declaration_list <- (ordered_field_declaration_list) => uast(
    type: "Field",
    roles: "Member"
    children: "_type"
)

parameter <- (parameter) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: "_pattern", "_type", "self"
)

parameters <- (parameters) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

parenthesized_expression <- (parenthesized_expression) => uast(
    type: "Synthetic",
    children: []
)

pointer_type <- (pointer_type) => uast(
    type: "Synthetic",
    children: "_type"
)

qualified_type <- (qualified_type) => uast(
    type: "If",
    children: "_type"
)

range_expression <- (range_expression) => uast(
    type: "Synthetic",
    children: []
)

range_pattern <- (range_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
    children: []
)

raw_string_literal <- (raw_string_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

ref_pattern <- (ref_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
    children: []
)

reference_expression <- (reference_expression) => uast(
    type: "Synthetic",
    children: "_expression"
)

reference_pattern <- (reference_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
    children: []
)

reference_type <- (reference_type) => uast(
    type: "Synthetic",
    children: "_type"
)

remaining_field_pattern <- (remaining_field_pattern) => uast(
    type: "Field",
    roles: "Member"
    children: []
)

removed_trait_bound <- (removed_trait_bound) => uast(
    type: "Synthetic",
    children: []
)

return_expression <- (return_expression) => uast(
    type: "Return",
    roles: "Return"
    children: []
)

scoped_identifier <- (scoped_identifier) => uast(
    type: "If",
    children: "bracketed_type", "crate", "generic_type", "identifier", "metavariable", "scoped_identifier", "self", "super"
)

scoped_type_identifier <- (scoped_type_identifier) => uast(
    type: "If",
    children: "bracketed_type", "crate", "generic_type", "identifier", "metavariable", "scoped_identifier", "self", "super", "type_identifier"
)

scoped_use_list <- (scoped_use_list) => uast(
    type: "List",
    children: "crate", "identifier", "metavariable", "scoped_identifier", "self", "super", "use_list"
)

self_closing_element_node <- (self_closing_element_node) => uast(
    type: "Synthetic",
    children: "block", "generic_identifier", "node_attribute", "node_identifier"
)

self_parameter <- (self_parameter) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

shorthand_field_initializer <- (shorthand_field_initializer) => uast(
    type: "Field",
    roles: "Member"
    children: []
)

slice_pattern <- (slice_pattern) => uast(
    type: "Slice",
    children: []
)

source_file <- (source_file) => uast(
    type: "Synthetic",
    children: []
)

static_item <- (static_item) => uast(
    type: "Synthetic",
    children: "_expression", "_type", "identifier"
)

string_literal <- (string_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

struct_expression <- (struct_expression) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: "field_initializer_list", "generic_type_with_turbofish", "scoped_type_identifier", "type_identifier"
)

struct_item <- (struct_item) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: "field_declaration_list", "ordered_field_declaration_list", "type_identifier", "type_parameters"
)

struct_pattern <- (struct_pattern) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: "scoped_type_identifier", "type_identifier"
)

token_binding_pattern <- (token_binding_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
    children: "fragment_specifier", "metavariable"
)

token_repetition <- (token_repetition) => uast(
    type: "Synthetic",
    children: []
)

token_repetition_pattern <- (token_repetition_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
    children: []
)

token_tree <- (token_tree) => uast(
    type: "Synthetic",
    children: []
)

token_tree_pattern <- (token_tree_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
    children: []
)

trait_bounds <- (trait_bounds) => uast(
    type: "Synthetic",
    children: []
)

trait_item <- (trait_item) => uast(
    type: "Synthetic",
    children: "declaration_list", "trait_bounds", "type_identifier", "type_parameters"
)

try_block <- (try_block) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

try_expression <- (try_expression) => uast(
    type: "Try",
    roles: "Try"
    children: []
)

tuple_expression <- (tuple_expression) => uast(
    type: "Tuple",
    children: []
)

tuple_pattern <- (tuple_pattern) => uast(
    type: "Tuple",
    children: []
)

tuple_struct_pattern <- (tuple_struct_pattern) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: "generic_type", "identifier", "scoped_identifier"
)

tuple_type <- (tuple_type) => uast(
    type: "Tuple",
    children: []
)

type_arguments <- (type_arguments) => uast(
    type: "Synthetic",
    children: []
)

type_binding <- (type_binding) => uast(
    type: "Synthetic",
    children: "_type", "type_arguments", "type_identifier"
)

type_cast_expression <- (type_cast_expression) => uast(
    type: "Cast",
    children: "_expression", "_type"
)

type_item <- (type_item) => uast(
    type: "Synthetic",
    children: "_type", "type_identifier", "type_parameters"
)

type_parameters <- (type_parameters) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

unary_expression <- (unary_expression) => uast(
    type: "Synthetic",
    children: []
)

union_item <- (union_item) => uast(
    type: "Synthetic",
    children: "field_declaration_list", "type_identifier", "type_parameters"
)

unit_expression <- (unit_expression) => uast(
    type: "Synthetic",
    children: []
)

unit_type <- (unit_type) => uast(
    type: "Synthetic",
    children: []
)

unsafe_block <- (unsafe_block) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

use_as_clause <- (use_as_clause) => uast(
    type: "Synthetic",
    children: "crate", "identifier", "metavariable", "scoped_identifier", "self", "super"
)

use_declaration <- (use_declaration) => uast(
    type: "Synthetic",
    children: "crate", "identifier", "metavariable", "scoped_identifier", "scoped_use_list", "self", "super", "use_as_clause", "use_list", "use_wildcard"
)

use_list <- (use_list) => uast(
    type: "List",
    children: []
)

use_wildcard <- (use_wildcard) => uast(
    type: "Synthetic",
    children: []
)

variadic_parameter <- (variadic_parameter) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: "_pattern"
)

visibility_modifier <- (visibility_modifier) => uast(
    type: "If",
    children: []
)

where_clause <- (where_clause) => uast(
    type: "Synthetic",
    children: []
)

where_predicate <- (where_predicate) => uast(
    type: "Synthetic",
    children: "array_type", "generic_type", "higher_ranked_trait_bound", "lifetime", "pointer_type", "primitive_type", "reference_type", "scoped_type_identifier", "trait_bounds", "tuple_type", "type_identifier"
)

while_expression <- (while_expression) => uast(
    type: "Loop",
    roles: "Loop"
    children: "_expression", "block", "let_chain", "let_condition"
)

yield_expression <- (yield_expression) => uast(
    type: "Yield",
    roles: "Yield"
    children: []
)

_ <- (_) => uast(
    type: "Synthetic",
    children: []
)

as <- (as) => uast(
    type: "Synthetic",
    children: []
)

async <- (async) => uast(
    type: "Synthetic",
    children: []
)

await <- (await) => uast(
    type: "Await",
    roles: "Await"
    children: []
)

block <- (block) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

break <- (break) => uast(
    type: "Break",
    roles: "Break"
    children: []
)

char_literal <- (char_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

const <- (const) => uast(
    type: "Synthetic",
    children: []
)

continue <- (continue) => uast(
    type: "Continue",
    roles: "Continue"
    children: []
)

crate <- (crate) => uast(
    type: "Synthetic",
    children: []
)

default <- (default) => uast(
    type: "Synthetic",
    children: []
)

doc_comment <- (doc_comment) => uast(
    type: "Comment",
    roles: "Comment"
    children: []
)

dyn <- (dyn) => uast(
    type: "Synthetic",
    children: []
)

else <- (else) => uast(
    type: "Synthetic",
    children: []
)

enum <- (enum) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
    children: []
)

escape_sequence <- (escape_sequence) => uast(
    type: "Synthetic",
    children: []
)

expr <- (expr) => uast(
    type: "Synthetic",
    children: []
)

extern <- (extern) => uast(
    type: "Synthetic",
    children: []
)

false <- (false) => uast(
    type: "Synthetic",
    children: []
)

field_identifier <- (field_identifier) => uast(
    type: "If",
    children: []
)

float_literal <- (float_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

fn <- (fn) => uast(
    type: "Synthetic",
    children: []
)

for <- (for) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

ident <- (ident) => uast(
    type: "Synthetic",
    children: []
)

if <- (if) => uast(
    type: "If",
    children: []
)

impl <- (impl) => uast(
    type: "Synthetic",
    children: []
)

in <- (in) => uast(
    type: "Synthetic",
    children: []
)

inner_doc_comment_marker <- (inner_doc_comment_marker) => uast(
    type: "Comment",
    roles: "Comment"
    children: []
)

integer_literal <- (integer_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

item <- (item) => uast(
    type: "Synthetic",
    children: []
)

let <- (let) => uast(
    type: "Synthetic",
    children: []
)

lifetime <- (lifetime) => uast(
    type: "If",
    children: []
)

literal <- (literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

loop <- (loop) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

match <- (match) => uast(
    type: "Match",
    roles: "Match"
    children: []
)

meta <- (meta) => uast(
    type: "Synthetic",
    children: []
)

metavariable <- (metavariable) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
    children: []
)

mod <- (mod) => uast(
    type: "Synthetic",
    children: []
)

move <- (move) => uast(
    type: "Synthetic",
    children: []
)

mutable_specifier <- (mutable_specifier) => uast(
    type: "If",
    children: []
)

outer_doc_comment_marker <- (outer_doc_comment_marker) => uast(
    type: "Comment",
    roles: "Comment"
    children: []
)

pat <- (pat) => uast(
    type: "Synthetic",
    children: []
)

path <- (path) => uast(
    type: "Synthetic",
    children: []
)

primitive_type <- (primitive_type) => uast(
    type: "Synthetic",
    children: []
)

pub <- (pub) => uast(
    type: "Synthetic",
    children: []
)

ref <- (ref) => uast(
    type: "Synthetic",
    children: []
)

return <- (return) => uast(
    type: "Return",
    roles: "Return"
    children: []
)

self <- (self) => uast(
    type: "Synthetic",
    children: []
)

shebang <- (shebang) => uast(
    type: "Synthetic",
    children: []
)

shorthand_field_identifier <- (shorthand_field_identifier) => uast(
    type: "If",
    children: []
)

static <- (static) => uast(
    type: "Synthetic",
    children: []
)

stmt <- (stmt) => uast(
    type: "Synthetic",
    children: []
)

string_content <- (string_content) => uast(
    type: "Synthetic",
    children: []
)

struct <- (struct) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: []
)

super <- (super) => uast(
    type: "Synthetic",
    children: []
)

text_node <- (text_node) => uast(
    type: "Synthetic",
    children: []
)

trait <- (trait) => uast(
    type: "Synthetic",
    children: []
)

true <- (true) => uast(
    type: "Synthetic",
    children: []
)

try <- (try) => uast(
    type: "Try",
    roles: "Try"
    children: []
)

tt <- (tt) => uast(
    type: "Synthetic",
    children: []
)

ty <- (ty) => uast(
    type: "Synthetic",
    children: []
)

type <- (type) => uast(
    type: "Synthetic",
    children: []
)

type_identifier <- (type_identifier) => uast(
    type: "If",
    children: []
)

union <- (union) => uast(
    type: "Synthetic",
    children: []
)

unsafe <- (unsafe) => uast(
    type: "Synthetic",
    children: []
)

use <- (use) => uast(
    type: "Synthetic",
    children: []
)

view <- (view) => uast(
    type: "Synthetic",
    children: []
)

vis <- (vis) => uast(
    type: "Synthetic",
    children: []
)

where <- (where) => uast(
    type: "Synthetic",
    children: []
)

while <- (while) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

yield <- (yield) => uast(
    type: "Yield",
    roles: "Yield"
    children: []
)

