[language "elixir", extensions: ".ex", ".exs"]

access_call <- (access_call) => uast(
    type: "Call",
    roles: "Call",
    children: "access_call", "alias", "anonymous_function", "atom", "binary_operator", "bitstring", "block", "boolean", "call", "char", "charlist", "dot", "float", "identifier", "integer", "list", "map", "nil", "operator_identifier", "quoted_atom", "sigil", "string", "tuple", "unary_operator"
)

after_block <- (after_block) => uast(
    token: "self",
    roles: "Call",
    type: "Block",
    roles: "Body"
)

anonymous_function <- (anonymous_function) => uast(
    type: "Function",
    roles: "Function", "Declaration"
)

arguments <- (arguments) => uast(
    token: "self",
    type: "Lambda"
)

binary_operator <- (binary_operator) => uast(
    type: "BinaryOp",
    roles: "Operator",
    children: "access_call", "alias", "and", "anonymous_function", "arguments", "atom", "binary_operator", "bitstring", "block", "boolean", "call", "char", "charlist", "dot", "float", "identifier", "in", "integer", "keywords", "list", "map", "nil", "operator_identifier", "or", "quoted_atom", "sigil", "string", "tuple", "unary_operator", "when"
)

bitstring <- (bitstring) => uast(
    token: "self",
    type: "Synthetic"
)

block <- (block) => uast(
    type: "Block",
    roles: "Body"
)

body <- (body) => uast(
    token: "self",
    roles: "Body",
    type: "Block"
)

boolean <- (boolean) => uast(
    type: "Synthetic"
)

call <- (call) => uast(
    token: "self",
    type: "Call",
    roles: "Call",
    children: "call", "dot", "identifier"
)

catch_block <- (catch_block) => uast(
    type: "Block",
    roles: "Body"
)

charlist <- (charlist) => uast(
    token: "self",
    roles: "Body",
    type: "List"
)

do_block <- (do_block) => uast(
    type: "Block",
    roles: "Body"
)

dot <- (dot) => uast(
    token: "self",
    roles: "Body",
    type: "Block",
    children: "access_call", "alias", "anonymous_function", "atom", "binary_operator", "bitstring", "block", "boolean", "call", "char", "charlist", "dot", "float", "identifier", "integer", "list", "map", "nil", "operator_identifier", "quoted_atom", "sigil", "string", "tuple", "unary_operator"
)

else_block <- (else_block) => uast(
    type: "Block",
    roles: "Body"
)

identifier <- (identifier) => uast(
    token: "self",
    roles: "Body",
    type: "Block"
)

interpolation <- (interpolation) => uast(
    type: "Synthetic"
)

keywords <- (keywords) => uast(
    token: "self",
    type: "Synthetic"
)

list <- (list) => uast(
    type: "List"
)

map <- (map) => uast(
    token: "self",
    type: "Synthetic"
)

map_content <- (map_content) => uast(
    type: "Synthetic"
)

nil <- (nil) => uast(
    token: "self",
    type: "Synthetic"
)

operator_identifier <- (operator_identifier) => uast(
    type: "If"
)

pair <- (pair) => uast(
    token: "self",
    roles: "Reference",
    type: "Identifier",
    children: "access_call", "alias", "anonymous_function", "atom", "binary_operator", "bitstring", "block", "boolean", "call", "char", "charlist", "dot", "float", "identifier", "integer", "keyword", "list", "map", "nil", "operator_identifier", "quoted_atom", "quoted_keyword", "sigil", "string", "tuple", "unary_operator"
)

quoted_atom <- (quoted_atom) => uast(
    type: "Synthetic"
)

quoted_keyword <- (quoted_keyword) => uast(
    token: "self",
    type: "Synthetic"
)

rescue_block <- (rescue_block) => uast(
    type: "Block",
    roles: "Body"
)

sigil <- (sigil) => uast(
    token: "self",
    roles: "Body",
    type: "Block"
)

source <- (source) => uast(
    type: "Synthetic"
)

stab_clause <- (stab_clause) => uast(
    token: "self",
    type: "Synthetic",
    children: "arguments", "binary_operator", "body"
)

string <- (string) => uast(
    type: "Synthetic"
)

struct <- (struct) => uast(
    token: "self",
    type: "Struct",
    roles: "Struct", "Declaration"
)

tuple <- (tuple) => uast(
    type: "Tuple"
)

unary_operator <- (unary_operator) => uast(
    token: "self",
    type: "UnaryOp",
    roles: "Operator",
    children: "access_call", "alias", "anonymous_function", "atom", "binary_operator", "bitstring", "block", "boolean", "call", "char", "charlist", "dot", "float", "identifier", "integer", "list", "map", "nil", "not", "operator_identifier", "quoted_atom", "sigil", "string", "tuple", "unary_operator"
)

after <- (after) => uast(
    type: "Synthetic"
)

alias <- (alias) => uast(
    token: "self",
    type: "Synthetic"
)

and <- (and) => uast(
    type: "Synthetic"
)

atom <- (atom) => uast(
    token: "self",
    type: "Synthetic"
)

catch <- (catch) => uast(
    type: "Catch",
    roles: "Catch"
)

char <- (char) => uast(
    token: "self",
    type: "Synthetic"
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
)

do <- (do) => uast(
    token: "self",
    roles: "Comment",
    type: "Comment"
)

else <- (else) => uast(
    type: "Synthetic"
)

end <- (end) => uast(
    token: "self",
    type: "Synthetic"
)

escape_sequence <- (escape_sequence) => uast(
    type: "Synthetic"
)

false <- (false) => uast(
    token: "self",
    type: "Synthetic"
)

float <- (float) => uast(
    type: "Synthetic"
)

fn <- (fn) => uast(
    token: "self",
    type: "Synthetic"
)

in <- (in) => uast(
    type: "Synthetic"
)

integer <- (integer) => uast(
    token: "self",
    type: "Synthetic"
)

keyword <- (keyword) => uast(
    type: "Synthetic"
)

nil <- (nil) => uast(
    token: "self",
    type: "Synthetic"
)

not <- (not) => uast(
    type: "Synthetic"
)

or <- (or) => uast(
    token: "self",
    type: "Synthetic"
)

quoted_content <- (quoted_content) => uast(
    type: "Synthetic"
)

rescue <- (rescue) => uast(
    token: "self",
    type: "Synthetic"
)

sigil_modifiers <- (sigil_modifiers) => uast(
    type: "If"
)

sigil_name <- (sigil_name) => uast(
    token: "self",
    type: "Synthetic"
)

true <- (true) => uast(
    type: "Synthetic"
)

when <- (when) => uast(
    token: "self",
    type: "Synthetic"
)