add <- (add) => uast(
    type: "Synthetic"
)

and <- (and) => uast(
    type: "Synthetic"
)

assign <- (assign) => uast(
    type: "Synthetic"
)

bitand <- (bitand) => uast(
    type: "Synthetic"
)

bitor <- (bitor) => uast(
    type: "Synthetic"
)

bitshl <- (bitshl) => uast(
    type: "Synthetic"
)

bitshr <- (bitshr) => uast(
    type: "Synthetic"
)

bitxor <- (bitxor) => uast(
    type: "Synthetic"
)

block <- (block) => uast(
    type: "Block",
    roles: "Body"
)

bool_literal <- (bool_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

call <- (call) => uast(
    type: "Call",
    roles: "Call"
)

declaration <- (declaration) => uast(
    type: "Synthetic",
    children: "add", "and", "assign", "bitand", "bitor", "bitshl", "bitshr", "bitxor", "block", "bool_literal", "call", "declaration", "decrement", "dereference", "divide", "eq", "ge", "gt", "identifier", "if", "increment", "integer_literal", "le", "logical_negate", "lt", "member_access", "multiply", "ne", "or", "remainder", "return", "string_literal", "subscript", "subtract", "type_array", "type_enum", "type_ffi", "type_function", "type_pointer", "type_pointer_to_pointer", "type_primitive", "type_reference", "type_struct", "type_sum", "type_union", "while"
)

decrement <- (decrement) => uast(
    type: "Synthetic"
)

dereference <- (dereference) => uast(
    type: "Synthetic"
)

divide <- (divide) => uast(
    type: "Synthetic"
)

eq <- (eq) => uast(
    type: "Synthetic"
)

ge <- (ge) => uast(
    type: "Synthetic"
)

gt <- (gt) => uast(
    type: "Synthetic"
)

if <- (if) => uast(
    type: "If",
    children: "add", "and", "assign", "bitand", "bitor", "bitshl", "bitshr", "bitxor", "block", "bool_literal", "call", "declaration", "decrement", "dereference", "divide", "eq", "ge", "gt", "identifier", "if", "increment", "integer_literal", "le", "logical_negate", "lt", "member_access", "multiply", "ne", "or", "remainder", "return", "string_literal", "subscript", "subtract", "type_array", "type_enum", "type_ffi", "type_function", "type_pointer", "type_pointer_to_pointer", "type_primitive", "type_reference", "type_struct", "type_sum", "type_union", "while"
)

increment <- (increment) => uast(
    type: "Synthetic"
)

integer_literal <- (integer_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

le <- (le) => uast(
    type: "Synthetic"
)

logical_negate <- (logical_negate) => uast(
    type: "Synthetic"
)

lt <- (lt) => uast(
    type: "Synthetic"
)

member_access <- (member_access) => uast(
    type: "Synthetic"
)

module_declaration <- (module_declaration) => uast(
    type: "Module",
    roles: "Module",
    children: "identifier"
)

module_import <- (module_import) => uast(
    type: "Import",
    roles: "Import",
    children: "identifier"
)

multiply <- (multiply) => uast(
    type: "Synthetic"
)

ne <- (ne) => uast(
    type: "Synthetic"
)

or <- (or) => uast(
    type: "Synthetic"
)

param_decl <- (param_decl) => uast(
    type: "Synthetic",
    children: "identifier", "type_array", "type_enum", "type_ffi", "type_function", "type_pointer", "type_pointer_to_pointer", "type_primitive", "type_reference", "type_struct", "type_sum", "type_union"
)

remainder <- (remainder) => uast(
    type: "Synthetic"
)

return <- (return) => uast(
    type: "Return",
    roles: "Return"
)

source_file <- (source_file) => uast(
    type: "Synthetic"
)

storage_specifier <- (storage_specifier) => uast(
    type: "If"
)

string_literal <- (string_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

subscript <- (subscript) => uast(
    type: "Synthetic"
)

subtract <- (subtract) => uast(
    type: "Synthetic"
)

type_array <- (type_array) => uast(
    type: "Synthetic"
)

type_enum <- (type_enum) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
)

type_ffi <- (type_ffi) => uast(
    type: "Synthetic"
)

type_function <- (type_function) => uast(
    type: "Function",
    roles: "Function", "Declaration"
)

type_pointer <- (type_pointer) => uast(
    type: "Synthetic"
)

type_pointer_to_pointer <- (type_pointer_to_pointer) => uast(
    type: "Synthetic"
)

type_primitive <- (type_primitive) => uast(
    type: "Synthetic"
)

type_reference <- (type_reference) => uast(
    type: "Synthetic"
)

type_struct <- (type_struct) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
)

type_sum <- (type_sum) => uast(
    type: "Synthetic"
)

type_union <- (type_union) => uast(
    type: "Synthetic"
)

while <- (while) => uast(
    type: "Loop",
    roles: "Loop",
    children: "add", "and", "assign", "bitand", "bitor", "bitshl", "bitshr", "bitxor", "block", "bool_literal", "call", "declaration", "decrement", "dereference", "divide", "eq", "ge", "gt", "identifier", "if", "increment", "integer_literal", "le", "logical_negate", "lt", "member_access", "multiply", "ne", "or", "remainder", "return", "string_literal", "subscript", "subtract", "type_array", "type_enum", "type_ffi", "type_function", "type_pointer", "type_pointer_to_pointer", "type_primitive", "type_reference", "type_struct", "type_sum", "type_union", "while"
)

and <- (and) => uast(
    type: "Synthetic"
)

bool <- (bool) => uast(
    type: "Synthetic"
)

byte <- (byte) => uast(
    type: "Synthetic"
)

cint <- (cint) => uast(
    type: "Synthetic"
)

clong <- (clong) => uast(
    type: "Synthetic"
)

clonglong <- (clonglong) => uast(
    type: "Synthetic"
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
)

cshort <- (cshort) => uast(
    type: "Synthetic"
)

csize <- (csize) => uast(
    type: "Synthetic"
)

cuint <- (cuint) => uast(
    type: "Synthetic"
)

culong <- (culong) => uast(
    type: "Synthetic"
)

culonglong <- (culonglong) => uast(
    type: "Synthetic"
)

cushort <- (cushort) => uast(
    type: "Synthetic"
)

cusize <- (cusize) => uast(
    type: "Synthetic"
)

else <- (else) => uast(
    type: "Synthetic"
)

enum <- (enum) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
)

export <- (export) => uast(
    type: "Synthetic"
)

external <- (external) => uast(
    type: "Synthetic"
)

false <- (false) => uast(
    type: "Synthetic"
)

identifier <- (identifier) => uast(
    type: "If"
)

if <- (if) => uast(
    type: "If"
)

import <- (import) => uast(
    type: "Import",
    roles: "Import"
)

int <- (int) => uast(
    type: "Synthetic"
)

module <- (module) => uast(
    type: "Module",
    roles: "Module"
)

not <- (not) => uast(
    type: "Synthetic"
)

or <- (or) => uast(
    type: "Synthetic"
)

return <- (return) => uast(
    type: "Return",
    roles: "Return"
)

struct <- (struct) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
)

sum <- (sum) => uast(
    type: "Synthetic"
)

true <- (true) => uast(
    type: "Synthetic"
)

uint <- (uint) => uast(
    type: "Synthetic"
)

union <- (union) => uast(
    type: "Synthetic"
)

view <- (view) => uast(
    type: "Synthetic"
)

void <- (void) => uast(
    type: "Synthetic"
)

while <- (while) => uast(
    type: "Loop",
    roles: "Loop"
)

