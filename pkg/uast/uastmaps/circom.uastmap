anonymous_inputs <- (anonymous_inputs) => uast(
    type: "Synthetic"
)

argument_list <- (argument_list) => uast(
    type: "List",
    children: "array_access_expression", "array_expression", "assignment_expression", "binary_expression", "call_expression", "decrement_expression", "identifier", "increment_expression", "int_literal", "member_expression", "parenthesized_expression", "ternary_expression", "tuple_expression", "unary_expression"
)

array_access_expression <- (array_access_expression) => uast(
    type: "Synthetic",
    children: "array_access_expression", "array_expression", "assignment_expression", "binary_expression", "call_expression", "decrement_expression", "identifier", "increment_expression", "int_literal", "member_expression", "parenthesized_expression", "ternary_expression", "tuple_expression", "unary_expression"
)

array_expression <- (array_expression) => uast(
    type: "Synthetic"
)

array_type <- (array_type) => uast(
    type: "Synthetic"
)

assignment_expression <- (assignment_expression) => uast(
    type: "Assignment",
    roles: "Assignment"
)

binary_expression <- (binary_expression) => uast(
    type: "Synthetic",
    children: "array_access_expression", "array_expression", "assignment_expression", "binary_expression", "call_expression", "decrement_expression", "identifier", "increment_expression", "int_literal", "member_expression", "parenthesized_expression", "ternary_expression", "tuple_expression", "unary_expression"
)

block_statement <- (block_statement) => uast(
    type: "Block",
    roles: "Body"
)

call_expression <- (call_expression) => uast(
    type: "Call",
    roles: "Call"
)

circom_custom_templates_token <- (circom_custom_templates_token) => uast(
    type: "Synthetic"
)

circom_pragma_token <- (circom_pragma_token) => uast(
    type: "Synthetic",
    children: "circom_version"
)

component_declaration_statement <- (component_declaration_statement) => uast(
    type: "Synthetic",
    children: "array_type", "call_expression", "identifier"
)

decrement_expression <- (decrement_expression) => uast(
    type: "Synthetic"
)

expression_statement <- (expression_statement) => uast(
    type: "Synthetic"
)

for_statement <- (for_statement) => uast(
    type: "Loop",
    roles: "Loop"
)

function_body <- (function_body) => uast(
    type: "Function",
    roles: "Function", "Declaration"
)

function_definition <- (function_definition) => uast(
    type: "Function",
    roles: "Function", "Declaration",
    children: "function_body", "identifier"
)

if_statement <- (if_statement) => uast(
    type: "If"
)

include_directive <- (include_directive) => uast(
    type: "Synthetic",
    children: "string"
)

increment_expression <- (increment_expression) => uast(
    type: "Synthetic"
)

main_component_definition <- (main_component_definition) => uast(
    type: "Synthetic",
    children: "call_expression"
)

main_component_public_signals <- (main_component_public_signals) => uast(
    type: "Synthetic"
)

member_expression <- (member_expression) => uast(
    type: "Synthetic",
    children: "array_access_expression", "array_expression", "assignment_expression", "binary_expression", "call_expression", "decrement_expression", "identifier", "increment_expression", "int_literal", "member_expression", "parenthesized_expression", "property_identifier", "ternary_expression", "tuple_expression", "unary_expression"
)

parameter <- (parameter) => uast(
    type: "Parameter",
    roles: "Parameter",
    children: "identifier"
)

parameter_list <- (parameter_list) => uast(
    type: "Parameter",
    roles: "Parameter"
)

parenthesized_expression <- (parenthesized_expression) => uast(
    type: "Synthetic"
)

pragma_directive <- (pragma_directive) => uast(
    type: "Synthetic"
)

return_statement <- (return_statement) => uast(
    type: "Return",
    roles: "Return"
)

signal_declaration_statement <- (signal_declaration_statement) => uast(
    type: "Synthetic",
    children: "array_access_expression", "array_expression", "array_type", "assignment_expression", "binary_expression", "call_expression", "decrement_expression", "identifier", "increment_expression", "int_literal", "member_expression", "parenthesized_expression", "ternary_expression", "tuple_expression", "unary_expression"
)

signal_tags <- (signal_tags) => uast(
    type: "Synthetic"
)

signal_visibility <- (signal_visibility) => uast(
    type: "Synthetic"
)

source_file <- (source_file) => uast(
    type: "Synthetic"
)

string <- (string) => uast(
    type: "Synthetic"
)

template_body <- (template_body) => uast(
    type: "Synthetic"
)

template_definition <- (template_definition) => uast(
    type: "Synthetic",
    children: "identifier", "template_body", "template_type"
)

template_type <- (template_type) => uast(
    type: "Synthetic"
)

ternary_expression <- (ternary_expression) => uast(
    type: "Synthetic"
)

tuple_expression <- (tuple_expression) => uast(
    type: "Tuple"
)

unary_expression <- (unary_expression) => uast(
    type: "Synthetic",
    children: "array_access_expression", "array_expression", "assignment_expression", "binary_expression", "call_expression", "decrement_expression", "identifier", "increment_expression", "int_literal", "member_expression", "parenthesized_expression", "ternary_expression", "tuple_expression", "unary_expression"
)

variable_declaration_statement <- (variable_declaration_statement) => uast(
    type: "Variable",
    roles: "Variable", "Declaration",
    children: "array_access_expression", "array_expression", "array_type", "assignment_expression", "binary_expression", "call_expression", "decrement_expression", "identifier", "increment_expression", "int_literal", "member_expression", "parenthesized_expression", "ternary_expression", "tuple_expression", "unary_expression"
)

while_statement <- (while_statement) => uast(
    type: "Loop",
    roles: "Loop"
)

circom <- (circom) => uast(
    type: "Synthetic"
)

circom_version <- (circom_version) => uast(
    type: "Synthetic"
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
)

component <- (component) => uast(
    type: "Synthetic"
)

custom <- (custom) => uast(
    type: "Synthetic"
)

custom_templates <- (custom_templates) => uast(
    type: "Synthetic"
)

else <- (else) => uast(
    type: "Synthetic"
)

for <- (for) => uast(
    type: "Loop",
    roles: "Loop"
)

function <- (function) => uast(
    type: "Function",
    roles: "Function", "Declaration"
)

identifier <- (identifier) => uast(
    type: "If"
)

if <- (if) => uast(
    type: "If"
)

include <- (include) => uast(
    type: "Synthetic"
)

input <- (input) => uast(
    type: "Synthetic"
)

int_literal <- (int_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

main <- (main) => uast(
    type: "Synthetic"
)

output <- (output) => uast(
    type: "Synthetic"
)

parallel <- (parallel) => uast(
    type: "Synthetic"
)

pragma <- (pragma) => uast(
    type: "Synthetic"
)

property_identifier <- (property_identifier) => uast(
    type: "If"
)

public <- (public) => uast(
    type: "Synthetic"
)

return <- (return) => uast(
    type: "Return",
    roles: "Return"
)

signal <- (signal) => uast(
    type: "Synthetic"
)

template <- (template) => uast(
    type: "Synthetic"
)

var <- (var) => uast(
    type: "Synthetic"
)

while <- (while) => uast(
    type: "Loop",
    roles: "Loop"
)

