access <- (access) => uast(
    type: "Synthetic",
    children: "access", "identifier", "number", "string"
)

argument <- (argument) => uast(
    type: "Synthetic",
    children: "access", "boolean", "identifier", "number", "string"
)

argument_list <- (argument_list) => uast(
    type: "List",
    children: []
)

assignment_statement <- (assignment_statement) => uast(
    type: "Assignment",
    roles: "Assignment"
    children: "access", "boolean", "filter", "identifier", "number", "predicate", "string"
)

block <- (block) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

boolean <- (boolean) => uast(
    type: "Synthetic",
    children: []
)

capture_statement <- (capture_statement) => uast(
    type: "Synthetic",
    children: "block", "identifier"
)

case_statement <- (case_statement) => uast(
    type: "Case",
    roles: "Branch"
    children: "access", "block", "else_clause", "identifier"
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
    children: []
)

custom_unpaired_statement <- (custom_unpaired_statement) => uast(
    type: "Synthetic",
    children: []
)

cycle_statement <- (cycle_statement) => uast(
    type: "Synthetic",
    children: "access", "identifier", "number", "string"
)

decrement_statement <- (decrement_statement) => uast(
    type: "Synthetic",
    children: []
)

echo_statement <- (echo_statement) => uast(
    type: "Synthetic",
    children: []
)

else_clause <- (else_clause) => uast(
    type: "Synthetic",
    children: []
)

elsif_clause <- (elsif_clause) => uast(
    type: "If",
    children: "access", "boolean", "filter", "identifier", "number", "predicate", "string"
)

filter <- (filter) => uast(
    type: "Synthetic",
    children: "access", "boolean", "filter", "identifier", "number", "predicate", "string"
)

for_loop_statement <- (for_loop_statement) => uast(
    type: "Loop",
    roles: "Loop"
    children: "access", "argument_list", "block", "else_clause", "identifier", "range"
)

form_statement <- (form_statement) => uast(
    type: "Loop",
    roles: "Loop"
    children: "access", "argument_list", "identifier", "string"
)

if_statement <- (if_statement) => uast(
    type: "If",
    children: "access", "block", "boolean", "else_clause", "elsif_clause", "filter", "identifier", "number", "predicate", "string"
)

include_statement <- (include_statement) => uast(
    type: "Synthetic",
    children: []
)

increment_statement <- (increment_statement) => uast(
    type: "Synthetic",
    children: []
)

javascript_statement <- (javascript_statement) => uast(
    type: "Synthetic",
    children: []
)

js_content <- (js_content) => uast(
    type: "Synthetic",
    children: []
)

json_content <- (json_content) => uast(
    type: "Synthetic",
    children: []
)

layout_statement <- (layout_statement) => uast(
    type: "Synthetic",
    children: []
)

liquid_tag <- (liquid_tag) => uast(
    type: "Synthetic",
    children: []
)

paginate_statement <- (paginate_statement) => uast(
    type: "Synthetic",
    children: "access", "argument_list", "block", "identifier", "number"
)

predicate <- (predicate) => uast(
    type: "Synthetic",
    children: "access", "and", "boolean", "contains", "filter", "identifier", "number", "or", "predicate", "string"
)

program <- (program) => uast(
    type: "Synthetic",
    children: []
)

range <- (range) => uast(
    type: "Synthetic",
    children: "access", "identifier", "number"
)

raw_statement <- (raw_statement) => uast(
    type: "Synthetic",
    children: []
)

render_statement <- (render_statement) => uast(
    type: "Synthetic",
    children: "argument_list", "as", "for", "identifier", "string", "with"
)

schema_statement <- (schema_statement) => uast(
    type: "Synthetic",
    children: []
)

section_statement <- (section_statement) => uast(
    type: "Synthetic",
    children: []
)

sections_statement <- (sections_statement) => uast(
    type: "Synthetic",
    children: []
)

string <- (string) => uast(
    type: "Synthetic",
    children: []
)

style_content <- (style_content) => uast(
    type: "Synthetic",
    children: []
)

style_statement <- (style_statement) => uast(
    type: "Synthetic",
    children: []
)

tablerow_statement <- (tablerow_statement) => uast(
    type: "Synthetic",
    children: "access", "argument_list", "block", "identifier", "range"
)

template_content <- (template_content) => uast(
    type: "Synthetic",
    children: []
)

unless_statement <- (unless_statement) => uast(
    type: "Synthetic",
    children: "access", "block", "boolean", "else_clause", "elsif_clause", "filter", "identifier", "number", "predicate", "string"
)

when_clause <- (when_clause) => uast(
    type: "Synthetic",
    children: "argument_list", "block", "predicate"
)

and <- (and) => uast(
    type: "Synthetic",
    children: []
)

as <- (as) => uast(
    type: "Synthetic",
    children: []
)

assign <- (assign) => uast(
    type: "Synthetic",
    children: []
)

break_statement <- (break_statement) => uast(
    type: "Break",
    roles: "Break"
    children: []
)

by <- (by) => uast(
    type: "Synthetic",
    children: []
)

capture <- (capture) => uast(
    type: "Synthetic",
    children: []
)

case <- (case) => uast(
    type: "Case",
    roles: "Branch"
    children: []
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
    children: []
)

contains <- (contains) => uast(
    type: "Synthetic",
    children: []
)

continue_statement <- (continue_statement) => uast(
    type: "Continue",
    roles: "Continue"
    children: []
)

custom_keyword <- (custom_keyword) => uast(
    type: "Synthetic",
    children: []
)

cycle <- (cycle) => uast(
    type: "Synthetic",
    children: []
)

decrement <- (decrement) => uast(
    type: "Synthetic",
    children: []
)

echo <- (echo) => uast(
    type: "Synthetic",
    children: []
)

else <- (else) => uast(
    type: "Synthetic",
    children: []
)

elsif <- (elsif) => uast(
    type: "If",
    children: []
)

endcapture <- (endcapture) => uast(
    type: "Synthetic",
    children: []
)

endcase <- (endcase) => uast(
    type: "Case",
    roles: "Branch"
    children: []
)

endcomment <- (endcomment) => uast(
    type: "Comment",
    roles: "Comment"
    children: []
)

endfor <- (endfor) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

endform <- (endform) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

endif <- (endif) => uast(
    type: "If",
    children: []
)

endjavascript <- (endjavascript) => uast(
    type: "Synthetic",
    children: []
)

endpaginate <- (endpaginate) => uast(
    type: "Synthetic",
    children: []
)

endraw <- (endraw) => uast(
    type: "Synthetic",
    children: []
)

endschema <- (endschema) => uast(
    type: "Synthetic",
    children: []
)

endstyle <- (endstyle) => uast(
    type: "Synthetic",
    children: []
)

endtablerow <- (endtablerow) => uast(
    type: "Synthetic",
    children: []
)

endunless <- (endunless) => uast(
    type: "Synthetic",
    children: []
)

false <- (false) => uast(
    type: "Synthetic",
    children: []
)

for <- (for) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

form <- (form) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

front_matter <- (front_matter) => uast(
    type: "Synthetic",
    children: []
)

identifier <- (identifier) => uast(
    type: "If",
    children: []
)

if <- (if) => uast(
    type: "If",
    children: []
)

in <- (in) => uast(
    type: "Synthetic",
    children: []
)

include <- (include) => uast(
    type: "Synthetic",
    children: []
)

include_relative <- (include_relative) => uast(
    type: "Synthetic",
    children: []
)

increment <- (increment) => uast(
    type: "Synthetic",
    children: []
)

javascript <- (javascript) => uast(
    type: "Synthetic",
    children: []
)

layout <- (layout) => uast(
    type: "Synthetic",
    children: []
)

liquid <- (liquid) => uast(
    type: "Synthetic",
    children: []
)

none <- (none) => uast(
    type: "Synthetic",
    children: []
)

number <- (number) => uast(
    type: "Synthetic",
    children: []
)

or <- (or) => uast(
    type: "Synthetic",
    children: []
)

paginate <- (paginate) => uast(
    type: "Synthetic",
    children: []
)

raw <- (raw) => uast(
    type: "Synthetic",
    children: []
)

raw_content <- (raw_content) => uast(
    type: "Synthetic",
    children: []
)

render <- (render) => uast(
    type: "Synthetic",
    children: []
)

schema <- (schema) => uast(
    type: "Synthetic",
    children: []
)

section <- (section) => uast(
    type: "Synthetic",
    children: []
)

sections <- (sections) => uast(
    type: "Synthetic",
    children: []
)

style <- (style) => uast(
    type: "Synthetic",
    children: []
)

tablerow <- (tablerow) => uast(
    type: "Synthetic",
    children: []
)

true <- (true) => uast(
    type: "Synthetic",
    children: []
)

unless <- (unless) => uast(
    type: "Synthetic",
    children: []
)

when <- (when) => uast(
    type: "Synthetic",
    children: []
)

with <- (with) => uast(
    type: "Synthetic",
    children: []
)

