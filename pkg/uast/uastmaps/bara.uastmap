arrayExpression <- (arrayExpression) => uast(
    type: "Synthetic"
)

assignmentStatement <- (assignmentStatement) => uast(
    type: "Assignment",
    roles: "Assignment"
)

binaryExpression <- (binaryExpression) => uast(
    type: "Synthetic"
)

booleanLiteral <- (booleanLiteral) => uast(
    type: "Literal",
    roles: "Literal"
)

booleanPattern <- (booleanPattern) => uast(
    type: "Pattern",
    roles: "Pattern"
)

breakStatement <- (breakStatement) => uast(
    type: "Break",
    roles: "Break"
)

callExpression <- (callExpression) => uast(
    type: "Call",
    roles: "Call",
    children: "arrayExpression", "binaryExpression", "booleanLiteral", "callExpression", "conditionalExpression", "floatLiteral", "groupExpression", "identifierExpression", "indexExpression", "integerLiteral", "lambdaExpression", "matchExpression", "nilLiteral", "stringLiteral", "tupleExpression", "unaryExpression"
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
)

compoundStatement <- (compoundStatement) => uast(
    type: "Synthetic"
)

conditionalExpression <- (conditionalExpression) => uast(
    type: "Synthetic"
)

continueStatement <- (continueStatement) => uast(
    type: "Continue",
    roles: "Continue"
)

declarationStatement <- (declarationStatement) => uast(
    type: "Synthetic"
)

doWhileStatement <- (doWhileStatement) => uast(
    type: "Loop",
    roles: "Loop"
)

expressionStatement <- (expressionStatement) => uast(
    type: "Synthetic"
)

floatLiteral <- (floatLiteral) => uast(
    type: "Literal",
    roles: "Literal"
)

floatPattern <- (floatPattern) => uast(
    type: "Pattern",
    roles: "Pattern"
)

forStatement <- (forStatement) => uast(
    type: "Loop",
    roles: "Loop"
)

functionDeclaration <- (functionDeclaration) => uast(
    type: "Function",
    roles: "Function", "Declaration",
    children: "identifier"
)

groupExpression <- (groupExpression) => uast(
    type: "Synthetic"
)

identifierExpression <- (identifierExpression) => uast(
    type: "If"
)

identifierPattern <- (identifierPattern) => uast(
    type: "If"
)

ifStatement <- (ifStatement) => uast(
    type: "If"
)

indexExpression <- (indexExpression) => uast(
    type: "Index",
    roles: "Index"
)

integerLiteral <- (integerLiteral) => uast(
    type: "Literal",
    roles: "Literal"
)

integerPattern <- (integerPattern) => uast(
    type: "Pattern",
    roles: "Pattern"
)

lambdaExpression <- (lambdaExpression) => uast(
    type: "Lambda",
    roles: "Lambda"
)

matchCase <- (matchCase) => uast(
    type: "Case",
    roles: "Branch"
)

matchExpression <- (matchExpression) => uast(
    type: "Match",
    roles: "Match"
)

nilLiteral <- (nilLiteral) => uast(
    type: "Literal",
    roles: "Literal"
)

nilPattern <- (nilPattern) => uast(
    type: "Pattern",
    roles: "Pattern"
)

operatorAssignmentStatement <- (operatorAssignmentStatement) => uast(
    type: "Assignment",
    roles: "Assignment"
)

parameters <- (parameters) => uast(
    type: "Parameter",
    roles: "Parameter"
)

pattern <- (pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
)

program <- (program) => uast(
    type: "Synthetic"
)

returnStatement <- (returnStatement) => uast(
    type: "Return",
    roles: "Return"
)

source_file <- (source_file) => uast(
    type: "Synthetic"
)

stringLiteral <- (stringLiteral) => uast(
    type: "Literal",
    roles: "Literal"
)

stringPattern <- (stringPattern) => uast(
    type: "Pattern",
    roles: "Pattern"
)

tupleExpression <- (tupleExpression) => uast(
    type: "Tuple"
)

tuplePattern <- (tuplePattern) => uast(
    type: "Tuple"
)

unaryExpression <- (unaryExpression) => uast(
    type: "Synthetic"
)

whileStatement <- (whileStatement) => uast(
    type: "Loop",
    roles: "Loop"
)

break <- (break) => uast(
    type: "Break",
    roles: "Break"
)

continue <- (continue) => uast(
    type: "Continue",
    roles: "Continue"
)

do <- (do) => uast(
    type: "Synthetic"
)

else <- (else) => uast(
    type: "Synthetic"
)

false <- (false) => uast(
    type: "Synthetic"
)

float <- (float) => uast(
    type: "Synthetic"
)

fn <- (fn) => uast(
    type: "Synthetic"
)

for <- (for) => uast(
    type: "Loop",
    roles: "Loop"
)

identifier <- (identifier) => uast(
    type: "If"
)

if <- (if) => uast(
    type: "If"
)

integer <- (integer) => uast(
    type: "Synthetic"
)

litSupport <- (litSupport) => uast(
    type: "Synthetic"
)

match <- (match) => uast(
    type: "Match",
    roles: "Match"
)

nil <- (nil) => uast(
    type: "Synthetic"
)

return <- (return) => uast(
    type: "Return",
    roles: "Return"
)

string <- (string) => uast(
    type: "Synthetic"
)

true <- (true) => uast(
    type: "Synthetic"
)

var <- (var) => uast(
    type: "Synthetic"
)

while <- (while) => uast(
    type: "Loop",
    roles: "Loop"
)

