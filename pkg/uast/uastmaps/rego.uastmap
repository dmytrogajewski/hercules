arith_operator <- (arith_operator) => uast(
    type: "Synthetic"
)

array <- (array) => uast(
    type: "Synthetic"
)

array_compr <- (array_compr) => uast(
    type: "Synthetic"
)

assignment_operator <- (assignment_operator) => uast(
    type: "Assignment",
    roles: "Assignment"
)

bin_operator <- (bin_operator) => uast(
    type: "Synthetic"
)

bool_operator <- (bool_operator) => uast(
    type: "Synthetic"
)

boolean <- (boolean) => uast(
    type: "Synthetic"
)

close_paren <- (close_paren) => uast(
    type: "Synthetic"
)

empty_set <- (empty_set) => uast(
    type: "Set"
)

expr <- (expr) => uast(
    type: "Synthetic"
)

expr_call <- (expr_call) => uast(
    type: "Call",
    roles: "Call",
    children: "fn_args", "fn_name"
)

expr_every <- (expr_every) => uast(
    type: "Synthetic"
)

expr_infix <- (expr_infix) => uast(
    type: "Synthetic"
)

expr_parens <- (expr_parens) => uast(
    type: "Synthetic"
)

expr_unary <- (expr_unary) => uast(
    type: "Synthetic"
)

fn_args <- (fn_args) => uast(
    type: "Synthetic"
)

fn_name <- (fn_name) => uast(
    type: "Synthetic"
)

infix_operator <- (infix_operator) => uast(
    type: "Synthetic"
)

literal <- (literal) => uast(
    type: "Literal",
    roles: "Literal"
)

membership <- (membership) => uast(
    type: "Synthetic"
)

module <- (module) => uast(
    type: "Module",
    roles: "Module"
)

non_empty_set <- (non_empty_set) => uast(
    type: "Set"
)

object <- (object) => uast(
    type: "Synthetic"
)

object_compr <- (object_compr) => uast(
    type: "Synthetic"
)

object_item <- (object_item) => uast(
    type: "Synthetic",
    children: "ref", "scalar", "term", "var"
)

policy <- (policy) => uast(
    type: "Synthetic"
)

query <- (query) => uast(
    type: "Synthetic"
)

raw_string <- (raw_string) => uast(
    type: "Synthetic"
)

ref <- (ref) => uast(
    type: "Synthetic"
)

ref_arg <- (ref_arg) => uast(
    type: "Synthetic"
)

ref_arg_brack <- (ref_arg_brack) => uast(
    type: "Synthetic"
)

ref_arg_dot <- (ref_arg_dot) => uast(
    type: "Synthetic"
)

rule <- (rule) => uast(
    type: "Synthetic"
)

rule_args <- (rule_args) => uast(
    type: "Synthetic"
)

rule_body <- (rule_body) => uast(
    type: "Synthetic"
)

rule_head <- (rule_head) => uast(
    type: "Synthetic"
)

rule_head_comp <- (rule_head_comp) => uast(
    type: "Synthetic"
)

scalar <- (scalar) => uast(
    type: "Synthetic"
)

set <- (set) => uast(
    type: "Set"
)

set_compr <- (set_compr) => uast(
    type: "Set"
)

some_decl <- (some_decl) => uast(
    type: "Synthetic"
)

source_file <- (source_file) => uast(
    type: "Synthetic"
)

string <- (string) => uast(
    type: "Synthetic"
)

term <- (term) => uast(
    type: "Synthetic"
)

with_modifier <- (with_modifier) => uast(
    type: "If"
)

_ <- (_) => uast(
    type: "Synthetic"
)

as <- (as) => uast(
    type: "Synthetic"
)

assignment <- (assignment) => uast(
    type: "Assignment",
    roles: "Assignment"
)

close_bracket <- (close_bracket) => uast(
    type: "Synthetic"
)

close_curly <- (close_curly) => uast(
    type: "Synthetic"
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
)

contains <- (contains) => uast(
    type: "Synthetic"
)

default <- (default) => uast(
    type: "Synthetic"
)

else <- (else) => uast(
    type: "Synthetic"
)

every <- (every) => uast(
    type: "Synthetic"
)

false <- (false) => uast(
    type: "Synthetic"
)

if <- (if) => uast(
    type: "If"
)

import <- (import) => uast(
    type: "Import",
    roles: "Import"
)

in <- (in) => uast(
    type: "Synthetic"
)

not <- (not) => uast(
    type: "Synthetic"
)

null <- (null) => uast(
    type: "Synthetic"
)

number <- (number) => uast(
    type: "Synthetic"
)

open_bracket <- (open_bracket) => uast(
    type: "Synthetic"
)

open_curly <- (open_curly) => uast(
    type: "Synthetic"
)

open_paren <- (open_paren) => uast(
    type: "Synthetic"
)

package <- (package) => uast(
    type: "Package",
    roles: "Module"
)

some <- (some) => uast(
    type: "Synthetic"
)

true <- (true) => uast(
    type: "Synthetic"
)

unification <- (unification) => uast(
    type: "If"
)

var <- (var) => uast(
    type: "Synthetic"
)

with <- (with) => uast(
    type: "Synthetic"
)

