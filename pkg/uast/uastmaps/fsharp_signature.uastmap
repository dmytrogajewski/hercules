_module_signature_elements <- (_module_signature_elements) => uast(
    type: "Module",
    roles: "Module"
)

access_modifier <- (access_modifier) => uast(
    type: "If"
)

active_pattern <- (active_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
)

additional_constr_defn <- (additional_constr_defn) => uast(
    type: "Synthetic"
)

anon_record_expression <- (anon_record_expression) => uast(
    type: "Synthetic",
    children: "field_initializers", "with_field_expression"
)

anon_record_type <- (anon_record_type) => uast(
    type: "Synthetic",
    children: "record_fields"
)

application_expression <- (application_expression) => uast(
    type: "Synthetic"
)

argument_name_spec <- (argument_name_spec) => uast(
    type: "Synthetic",
    children: "identifier"
)

argument_patterns <- (argument_patterns) => uast(
    type: "Pattern",
    roles: "Pattern"
)

argument_spec <- (argument_spec) => uast(
    type: "Synthetic"
)

arguments_spec <- (arguments_spec) => uast(
    type: "Synthetic"
)

array_expression <- (array_expression) => uast(
    type: "Synthetic"
)

array_pattern <- (array_pattern) => uast(
    type: "Pattern",
    roles: "Pattern",
    children: "array_pattern", "as_pattern", "attribute_pattern", "conjunct_pattern", "cons_pattern", "const", "disjunct_pattern", "identifier_pattern", "list_pattern", "named_field_pattern", "null", "optional_pattern", "paren_pattern", "record_pattern", "repeat_pattern", "type_check_pattern", "typed_pattern", "wildcard_pattern"
)

as_pattern <- (as_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
)

atomic_type <- (atomic_type) => uast(
    type: "Synthetic"
)

attribute <- (attribute) => uast(
    type: "Attribute",
    roles: "Attribute",
    children: "identifier"
)

attribute_pattern <- (attribute_pattern) => uast(
    type: "Attribute",
    roles: "Attribute"
)

attributes <- (attributes) => uast(
    type: "Attribute",
    roles: "Attribute"
)

begin_end_expression <- (begin_end_expression) => uast(
    type: "Synthetic",
    children: "anon_record_expression", "application_expression", "array_expression", "begin_end_expression", "brace_expression", "ce_expression", "const", "declaration_expression", "do_expression", "dot_expression", "for_expression", "fun_expression", "function_expression", "if_expression", "index_expression", "infix_expression", "list_expression", "literal_expression", "long_identifier_or_op", "match_expression", "mutate_expression", "null", "paren_expression", "prefixed_expression", "preproc_if", "sequential_expression", "try_expression", "tuple_expression", "typecast_expression", "typed_expression", "while_expression"
)

bignum <- (bignum) => uast(
    type: "Synthetic"
)

block_comment <- (block_comment) => uast(
    type: "Block",
    roles: "Body"
)

brace_expression <- (brace_expression) => uast(
    type: "Synthetic",
    children: "field_initializers", "object_expression", "with_field_expression"
)

byte <- (byte) => uast(
    type: "Synthetic"
)

bytearray <- (bytearray) => uast(
    type: "Synthetic"
)

ce_expression <- (ce_expression) => uast(
    type: "Synthetic",
    children: "anon_record_expression", "application_expression", "array_expression", "begin_end_expression", "brace_expression", "ce_expression", "const", "declaration_expression", "do_expression", "dot_expression", "for_expression", "fun_expression", "function_expression", "if_expression", "index_expression", "infix_expression", "list_expression", "literal_expression", "long_identifier_or_op", "match_expression", "mutate_expression", "null", "paren_expression", "prefixed_expression", "preproc_if", "sequential_expression", "short_comp_expression", "try_expression", "tuple_expression", "typecast_expression", "typed_expression", "while_expression"
)

char <- (char) => uast(
    type: "Synthetic"
)

compiler_directive_decl <- (compiler_directive_decl) => uast(
    type: "Synthetic"
)

compound_type <- (compound_type) => uast(
    type: "Synthetic"
)

conjunct_pattern <- (conjunct_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
)

cons_pattern <- (cons_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
)

const <- (const) => uast(
    type: "Synthetic"
)

constrained_type <- (constrained_type) => uast(
    type: "Synthetic"
)

constraint <- (constraint) => uast(
    type: "Synthetic"
)

curried_spec <- (curried_spec) => uast(
    type: "Synthetic"
)

decimal <- (decimal) => uast(
    type: "Synthetic"
)

declaration_expression <- (declaration_expression) => uast(
    type: "Synthetic",
    children: "anon_record_expression", "application_expression", "array_expression", "begin_end_expression", "brace_expression", "ce_expression", "const", "declaration_expression", "do_expression", "dot_expression", "for_expression", "fun_expression", "function_expression", "if_expression", "index_expression", "infix_expression", "list_expression", "literal_expression", "long_identifier_or_op", "match_expression", "mutate_expression", "null", "paren_expression", "prefixed_expression", "preproc_if", "sequential_expression", "try_expression", "tuple_expression", "typecast_expression", "typed_expression", "while_expression"
)

disjunct_pattern <- (disjunct_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
)

do <- (do) => uast(
    type: "Synthetic"
)

do_expression <- (do_expression) => uast(
    type: "Synthetic"
)

dot_expression <- (dot_expression) => uast(
    type: "Synthetic",
    children: "anon_record_expression", "application_expression", "array_expression", "begin_end_expression", "brace_expression", "ce_expression", "const", "declaration_expression", "do_expression", "dot_expression", "for_expression", "fun_expression", "function_expression", "if_expression", "index_expression", "infix_expression", "list_expression", "literal_expression", "long_identifier_or_op", "match_expression", "mutate_expression", "null", "paren_expression", "prefixed_expression", "preproc_if", "sequential_expression", "try_expression", "tuple_expression", "typecast_expression", "typed_expression", "while_expression"
)

elif_expression <- (elif_expression) => uast(
    type: "If",
    children: "anon_record_expression", "application_expression", "array_expression", "begin_end_expression", "brace_expression", "ce_expression", "const", "declaration_expression", "do_expression", "dot_expression", "for_expression", "fun_expression", "function_expression", "if_expression", "index_expression", "infix_expression", "list_expression", "literal_expression", "long_identifier_or_op", "match_expression", "mutate_expression", "null", "paren_expression", "prefixed_expression", "preproc_if", "sequential_expression", "try_expression", "tuple_expression", "typecast_expression", "typed_expression", "while_expression"
)

field_initializer <- (field_initializer) => uast(
    type: "Field",
    roles: "Member",
    children: "anon_record_expression", "application_expression", "array_expression", "begin_end_expression", "brace_expression", "ce_expression", "const", "declaration_expression", "do_expression", "dot_expression", "for_expression", "fun_expression", "function_expression", "if_expression", "index_expression", "infix_expression", "list_expression", "literal_expression", "long_identifier", "long_identifier_or_op", "match_expression", "mutate_expression", "null", "paren_expression", "prefixed_expression", "preproc_if", "sequential_expression", "try_expression", "tuple_expression", "typecast_expression", "typed_expression", "while_expression"
)

field_initializers <- (field_initializers) => uast(
    type: "Field",
    roles: "Member"
)

field_pattern <- (field_pattern) => uast(
    type: "Field",
    roles: "Member"
)

file <- (file) => uast(
    type: "Synthetic"
)

flexible_type <- (flexible_type) => uast(
    type: "Synthetic"
)

float <- (float) => uast(
    type: "Synthetic"
)

for_expression <- (for_expression) => uast(
    type: "Loop",
    roles: "Loop"
)

format_string <- (format_string) => uast(
    type: "Loop",
    roles: "Loop"
)

format_string_eval <- (format_string_eval) => uast(
    type: "Loop",
    roles: "Loop"
)

format_triple_quoted_string <- (format_triple_quoted_string) => uast(
    type: "Loop",
    roles: "Loop"
)

fsi_directive_decl <- (fsi_directive_decl) => uast(
    type: "Synthetic"
)

fun_expression <- (fun_expression) => uast(
    type: "Synthetic"
)

function_declaration_left <- (function_declaration_left) => uast(
    type: "Function",
    roles: "Function", "Declaration"
)

function_expression <- (function_expression) => uast(
    type: "Function",
    roles: "Function", "Declaration",
    children: "rules"
)

function_or_value_defn <- (function_or_value_defn) => uast(
    type: "Function",
    roles: "Function", "Declaration",
    children: "anon_record_expression", "application_expression", "array_expression", "begin_end_expression", "brace_expression", "ce_expression", "const", "declaration_expression", "do_expression", "dot_expression", "for_expression", "fun_expression", "function_expression", "if_expression", "index_expression", "infix_expression", "list_expression", "literal_expression", "long_identifier_or_op", "match_expression", "mutate_expression", "null", "paren_expression", "prefixed_expression", "preproc_if", "sequential_expression", "try_expression", "tuple_expression", "typecast_expression", "typed_expression", "while_expression"
)

function_type <- (function_type) => uast(
    type: "Function",
    roles: "Function", "Declaration"
)

generic_type <- (generic_type) => uast(
    type: "Synthetic"
)

identifier_pattern <- (identifier_pattern) => uast(
    type: "If"
)

ieee32 <- (ieee32) => uast(
    type: "Synthetic"
)

ieee64 <- (ieee64) => uast(
    type: "Synthetic"
)

if_expression <- (if_expression) => uast(
    type: "If",
    children: "anon_record_expression", "application_expression", "array_expression", "begin_end_expression", "brace_expression", "ce_expression", "const", "declaration_expression", "do_expression", "dot_expression", "for_expression", "fun_expression", "function_expression", "if_expression", "index_expression", "infix_expression", "list_expression", "literal_expression", "long_identifier_or_op", "match_expression", "mutate_expression", "null", "paren_expression", "prefixed_expression", "preproc_if", "sequential_expression", "try_expression", "tuple_expression", "typecast_expression", "typed_expression", "while_expression"
)

index_expression <- (index_expression) => uast(
    type: "Index",
    roles: "Index",
    children: "anon_record_expression", "application_expression", "array_expression", "begin_end_expression", "brace_expression", "ce_expression", "const", "declaration_expression", "do_expression", "dot_expression", "for_expression", "fun_expression", "function_expression", "if_expression", "index_expression", "infix_expression", "list_expression", "literal_expression", "long_identifier_or_op", "match_expression", "mutate_expression", "null", "paren_expression", "prefixed_expression", "preproc_if", "sequential_expression", "try_expression", "tuple_expression", "typecast_expression", "typed_expression", "while_expression"
)

infix_expression <- (infix_expression) => uast(
    type: "Synthetic"
)

infix_op <- (infix_op) => uast(
    type: "Synthetic"
)

int16 <- (int16) => uast(
    type: "Synthetic"
)

int32 <- (int32) => uast(
    type: "Synthetic"
)

int64 <- (int64) => uast(
    type: "Synthetic"
)

interface_implementation <- (interface_implementation) => uast(
    type: "Interface",
    roles: "Interface", "Declaration",
    children: "member_defn"
)

list_expression <- (list_expression) => uast(
    type: "List"
)

list_pattern <- (list_pattern) => uast(
    type: "List",
    children: "array_pattern", "as_pattern", "attribute_pattern", "conjunct_pattern", "cons_pattern", "const", "disjunct_pattern", "identifier_pattern", "list_pattern", "named_field_pattern", "null", "optional_pattern", "paren_pattern", "record_pattern", "repeat_pattern", "type_check_pattern", "typed_pattern", "wildcard_pattern"
)

list_type <- (list_type) => uast(
    type: "List"
)

literal_expression <- (literal_expression) => uast(
    type: "Literal",
    roles: "Literal"
)

long_identifier <- (long_identifier) => uast(
    type: "If"
)

long_identifier_or_op <- (long_identifier_or_op) => uast(
    type: "If"
)

match_expression <- (match_expression) => uast(
    type: "Match",
    roles: "Match",
    children: "rules"
)

member_defn <- (member_defn) => uast(
    type: "Synthetic"
)

member_signature <- (member_signature) => uast(
    type: "Synthetic"
)

method_or_prop_defn <- (method_or_prop_defn) => uast(
    type: "Method",
    roles: "Function", "Declaration", "Member",
    children: "and", "anon_record_expression", "anon_record_type", "application_expression", "array_expression", "array_pattern", "as_pattern", "attribute_pattern", "begin_end_expression", "brace_expression", "ce_expression", "compound_type", "conjunct_pattern", "cons_pattern", "const", "constrained_type", "declaration_expression", "disjunct_pattern", "do_expression", "dot_expression", "flexible_type", "for_expression", "fun_expression", "function_declaration_left", "function_expression", "function_type", "generic_type", "identifier_pattern", "if_expression", "index_expression", "infix_expression", "list_expression", "list_pattern", "list_type", "literal_expression", "long_identifier_or_op", "match_expression", "mutate_expression", "named_field_pattern", "null", "optional_pattern", "paren_expression", "paren_pattern", "paren_type", "postfix_type", "prefixed_expression", "preproc_if", "property_accessor", "property_or_ident", "record_pattern", "repeat_pattern", "sequential_expression", "simple_type", "static_type", "try_expression", "tuple_expression", "type_argument", "type_check_pattern", "typecast_expression", "typed_expression", "typed_pattern", "value_declaration_left", "while_expression", "wildcard_pattern"
)

module <- (module) => uast(
    type: "Module",
    roles: "Module",
    children: "_module_signature_elements"
)

mutate_expression <- (mutate_expression) => uast(
    type: "Synthetic",
    children: "anon_record_expression", "application_expression", "array_expression", "begin_end_expression", "brace_expression", "ce_expression", "const", "declaration_expression", "do_expression", "dot_expression", "for_expression", "fun_expression", "function_expression", "if_expression", "index_expression", "infix_expression", "list_expression", "literal_expression", "long_identifier_or_op", "match_expression", "mutate_expression", "null", "paren_expression", "prefixed_expression", "preproc_if", "sequential_expression", "try_expression", "tuple_expression", "typecast_expression", "typed_expression", "while_expression"
)

named_field <- (named_field) => uast(
    type: "Field",
    roles: "Member"
)

named_field_pattern <- (named_field_pattern) => uast(
    type: "Field",
    roles: "Member"
)

named_static_parameter <- (named_static_parameter) => uast(
    type: "Parameter",
    roles: "Parameter"
)

namespace <- (namespace) => uast(
    type: "Namespace",
    roles: "Module"
)

nativeint <- (nativeint) => uast(
    type: "Synthetic"
)

object_expression <- (object_expression) => uast(
    type: "Synthetic",
    children: "member_defn"
)

optional_pattern <- (optional_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
)

paren_expression <- (paren_expression) => uast(
    type: "Synthetic"
)

paren_pattern <- (paren_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
)

paren_type <- (paren_type) => uast(
    type: "Synthetic"
)

postfix_type <- (postfix_type) => uast(
    type: "Synthetic"
)

prefix_op <- (prefix_op) => uast(
    type: "Synthetic"
)

prefixed_expression <- (prefixed_expression) => uast(
    type: "Synthetic"
)

preproc_else <- (preproc_else) => uast(
    type: "Synthetic"
)

preproc_if <- (preproc_if) => uast(
    type: "If",
    children: "identifier", "preproc_else"
)

preproc_line <- (preproc_line) => uast(
    type: "Synthetic"
)

property_accessor <- (property_accessor) => uast(
    type: "Property",
    roles: "Member"
)

property_or_ident <- (property_or_ident) => uast(
    type: "Property",
    roles: "Member",
    children: "identifier"
)

range_expression <- (range_expression) => uast(
    type: "Synthetic"
)

record_field <- (record_field) => uast(
    type: "Field",
    roles: "Member"
)

record_fields <- (record_fields) => uast(
    type: "Field",
    roles: "Member"
)

record_pattern <- (record_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
)

repeat_pattern <- (repeat_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
)

rule <- (rule) => uast(
    type: "Synthetic",
    children: "anon_record_expression", "application_expression", "array_expression", "array_pattern", "as_pattern", "attribute_pattern", "begin_end_expression", "brace_expression", "ce_expression", "conjunct_pattern", "cons_pattern", "const", "declaration_expression", "disjunct_pattern", "do_expression", "dot_expression", "for_expression", "fun_expression", "function_expression", "identifier_pattern", "if_expression", "index_expression", "infix_expression", "list_expression", "list_pattern", "literal_expression", "long_identifier_or_op", "match_expression", "mutate_expression", "named_field_pattern", "null", "optional_pattern", "paren_expression", "paren_pattern", "prefixed_expression", "preproc_if", "record_pattern", "repeat_pattern", "sequential_expression", "try_expression", "tuple_expression", "type_check_pattern", "typecast_expression", "typed_expression", "typed_pattern", "while_expression", "wildcard_pattern"
)

rules <- (rules) => uast(
    type: "Synthetic"
)

sbyte <- (sbyte) => uast(
    type: "Synthetic"
)

sequential_expression <- (sequential_expression) => uast(
    type: "Synthetic"
)

short_comp_expression <- (short_comp_expression) => uast(
    type: "Synthetic"
)

simple_type <- (simple_type) => uast(
    type: "Synthetic"
)

slice_range <- (slice_range) => uast(
    type: "Slice",
    children: "anon_record_expression", "application_expression", "array_expression", "begin_end_expression", "brace_expression", "ce_expression", "const", "declaration_expression", "do_expression", "dot_expression", "for_expression", "fun_expression", "function_expression", "if_expression", "index_expression", "infix_expression", "list_expression", "literal_expression", "long_identifier_or_op", "match_expression", "mutate_expression", "null", "paren_expression", "prefixed_expression", "preproc_if", "sequential_expression", "try_expression", "tuple_expression", "typecast_expression", "typed_expression", "while_expression"
)

slice_ranges <- (slice_ranges) => uast(
    type: "Slice"
)

static_parameter_value <- (static_parameter_value) => uast(
    type: "Parameter",
    roles: "Parameter"
)

static_type <- (static_type) => uast(
    type: "Synthetic"
)

string <- (string) => uast(
    type: "Synthetic"
)

trait_member_constraint <- (trait_member_constraint) => uast(
    type: "Synthetic"
)

triple_quoted_string <- (triple_quoted_string) => uast(
    type: "Synthetic"
)

try_expression <- (try_expression) => uast(
    type: "Try",
    roles: "Try"
)

tuple_expression <- (tuple_expression) => uast(
    type: "Tuple"
)

type_argument <- (type_argument) => uast(
    type: "Synthetic"
)

type_argument_constraints <- (type_argument_constraints) => uast(
    type: "Synthetic"
)

type_argument_defn <- (type_argument_defn) => uast(
    type: "Synthetic"
)

type_arguments <- (type_arguments) => uast(
    type: "Synthetic"
)

type_attribute <- (type_attribute) => uast(
    type: "Attribute",
    roles: "Attribute"
)

type_attributes <- (type_attributes) => uast(
    type: "Attribute",
    roles: "Attribute"
)

type_check_pattern <- (type_check_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
)

typecast_expression <- (typecast_expression) => uast(
    type: "Cast"
)

typed_expression <- (typed_expression) => uast(
    type: "Synthetic"
)

typed_pattern <- (typed_pattern) => uast(
    type: "Pattern",
    roles: "Pattern",
    children: "type_argument_constraints"
)

types <- (types) => uast(
    type: "Synthetic"
)

uint16 <- (uint16) => uast(
    type: "Synthetic"
)

uint32 <- (uint32) => uast(
    type: "Synthetic"
)

uint64 <- (uint64) => uast(
    type: "Synthetic"
)

unativeint <- (unativeint) => uast(
    type: "Synthetic"
)

value_declaration <- (value_declaration) => uast(
    type: "Synthetic"
)

value_declaration_left <- (value_declaration_left) => uast(
    type: "Synthetic"
)

value_definition <- (value_definition) => uast(
    type: "Synthetic",
    children: "anon_record_expression", "application_expression", "array_expression", "begin_end_expression", "brace_expression", "ce_expression", "const", "declaration_expression", "do_expression", "dot_expression", "for_expression", "fun_expression", "function_expression", "if_expression", "index_expression", "infix_expression", "list_expression", "literal_expression", "long_identifier_or_op", "match_expression", "mutate_expression", "null", "paren_expression", "prefixed_expression", "preproc_if", "sequential_expression", "try_expression", "tuple_expression", "typecast_expression", "typed_expression", "while_expression"
)

verbatim_bytearray <- (verbatim_bytearray) => uast(
    type: "Synthetic"
)

verbatim_string <- (verbatim_string) => uast(
    type: "Synthetic"
)

while_expression <- (while_expression) => uast(
    type: "Loop",
    roles: "Loop"
)

with_field_expression <- (with_field_expression) => uast(
    type: "Field",
    roles: "Member",
    children: "field_initializers"
)

L <- (L) => uast(
    type: "Synthetic"
)

LF <- (LF) => uast(
    type: "Synthetic"
)

_ <- (_) => uast(
    type: "Synthetic"
)

abstract <- (abstract) => uast(
    type: "Synthetic"
)

active_pattern_op_name <- (active_pattern_op_name) => uast(
    type: "Pattern",
    roles: "Pattern"
)

and <- (and) => uast(
    type: "Synthetic"
)

as <- (as) => uast(
    type: "Synthetic"
)

assert <- (assert) => uast(
    type: "Synthetic"
)

begin <- (begin) => uast(
    type: "Synthetic"
)

block_comment_content <- (block_comment_content) => uast(
    type: "Block",
    roles: "Body"
)

bool <- (bool) => uast(
    type: "Synthetic"
)

comparison <- (comparison) => uast(
    type: "Synthetic"
)

default <- (default) => uast(
    type: "Synthetic"
)

delegate <- (delegate) => uast(
    type: "Synthetic"
)

do <- (do) => uast(
    type: "Synthetic"
)

done <- (done) => uast(
    type: "Synthetic"
)

downcast <- (downcast) => uast(
    type: "Cast"
)

downto <- (downto) => uast(
    type: "Synthetic"
)

elif <- (elif) => uast(
    type: "If"
)

else <- (else) => uast(
    type: "Synthetic"
)

end <- (end) => uast(
    type: "Synthetic"
)

enum <- (enum) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
)

equality <- (equality) => uast(
    type: "Synthetic"
)

f <- (f) => uast(
    type: "Synthetic"
)

finally <- (finally) => uast(
    type: "Finally",
    roles: "Finally"
)

float <- (float) => uast(
    type: "Synthetic"
)

for <- (for) => uast(
    type: "Loop",
    roles: "Loop"
)

fun <- (fun) => uast(
    type: "Synthetic"
)

function <- (function) => uast(
    type: "Function",
    roles: "Function", "Declaration"
)

get <- (get) => uast(
    type: "Synthetic"
)

identifier <- (identifier) => uast(
    type: "If"
)

if <- (if) => uast(
    type: "If"
)

in <- (in) => uast(
    type: "Synthetic"
)

inline <- (inline) => uast(
    type: "Synthetic"
)

int <- (int) => uast(
    type: "Synthetic"
)

interface <- (interface) => uast(
    type: "Interface",
    roles: "Interface", "Declaration"
)

l <- (l) => uast(
    type: "Synthetic"
)

lazy <- (lazy) => uast(
    type: "Synthetic"
)

let <- (let) => uast(
    type: "Synthetic"
)

lf <- (lf) => uast(
    type: "Synthetic"
)

line_comment <- (line_comment) => uast(
    type: "Comment",
    roles: "Comment"
)

match <- (match) => uast(
    type: "Match",
    roles: "Match"
)

member <- (member) => uast(
    type: "Synthetic"
)

module <- (module) => uast(
    type: "Module",
    roles: "Module"
)

mutable <- (mutable) => uast(
    type: "Synthetic"
)

n <- (n) => uast(
    type: "Synthetic"
)

namespace <- (namespace) => uast(
    type: "Namespace",
    roles: "Module"
)

new <- (new) => uast(
    type: "Synthetic"
)

not <- (not) => uast(
    type: "Synthetic"
)

null <- (null) => uast(
    type: "Synthetic"
)

op_identifier <- (op_identifier) => uast(
    type: "If"
)

or <- (or) => uast(
    type: "Synthetic"
)

override <- (override) => uast(
    type: "Synthetic"
)

rec <- (rec) => uast(
    type: "Synthetic"
)

return <- (return) => uast(
    type: "Return",
    roles: "Return"
)

s <- (s) => uast(
    type: "Synthetic"
)

set <- (set) => uast(
    type: "Set"
)

static <- (static) => uast(
    type: "Synthetic"
)

struct <- (struct) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
)

then <- (then) => uast(
    type: "Synthetic"
)

to <- (to) => uast(
    type: "Synthetic"
)

try <- (try) => uast(
    type: "Try",
    roles: "Try"
)

un <- (un) => uast(
    type: "Synthetic"
)

unit <- (unit) => uast(
    type: "Synthetic"
)

unit <- (unit) => uast(
    type: "Synthetic"
)

unmanaged <- (unmanaged) => uast(
    type: "Synthetic"
)

upcast <- (upcast) => uast(
    type: "Cast"
)

us <- (us) => uast(
    type: "Synthetic"
)

use <- (use) => uast(
    type: "Synthetic"
)

uy <- (uy) => uast(
    type: "Synthetic"
)

val <- (val) => uast(
    type: "Synthetic"
)

when <- (when) => uast(
    type: "Synthetic"
)

while <- (while) => uast(
    type: "Loop",
    roles: "Loop"
)

wildcard_active_pattern_op <- (wildcard_active_pattern_op) => uast(
    type: "Pattern",
    roles: "Pattern"
)

wildcard_pattern <- (wildcard_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
)

with <- (with) => uast(
    type: "Synthetic"
)

xint <- (xint) => uast(
    type: "Synthetic"
)

y <- (y) => uast(
    type: "Synthetic"
)

yield <- (yield) => uast(
    type: "Yield",
    roles: "Yield"
)

