array_literal <- (array_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

binary_expression <- (binary_expression) => uast(
    type: "Synthetic"
)

complex_invocation_expression <- (complex_invocation_expression) => uast(
    type: "Synthetic",
    children: "array_literal", "dict_literal", "float_literal", "function_literal", "group_literal", "identifier", "int_literal", "member_access", "string_literal", "type_expression"
)

data_declaration <- (data_declaration) => uast(
    type: "Synthetic",
    children: "data_property_list", "identifier"
)

data_property_function <- (data_property_function) => uast(
    type: "Function",
    roles: "Function", "Declaration",
    children: "identifier", "parameter_list"
)

data_property_list <- (data_property_list) => uast(
    type: "Property",
    roles: "Member"
)

data_property_value <- (data_property_value) => uast(
    type: "Property",
    roles: "Member",
    children: "identifier"
)

dict_entry <- (dict_entry) => uast(
    type: "Try",
    roles: "Try",
    children: "array_literal", "binary_expression", "dict_literal", "float_literal", "function_literal", "group_literal", "identifier", "int_literal", "member_access", "simple_invocation_expression", "string_literal", "type_expression", "unary_expression"
)

dict_literal <- (dict_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

enum_case_list <- (enum_case_list) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
)

enum_declaration <- (enum_declaration) => uast(
    type: "Enum",
    roles: "Enum", "Declaration",
    children: "enum_case_list", "identifier"
)

extern_declaration <- (extern_declaration) => uast(
    type: "Synthetic",
    children: "data_property_list", "identifier", "parameter_list"
)

float_literal <- (float_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

function_body <- (function_body) => uast(
    type: "Function",
    roles: "Function", "Declaration"
)

function_declaration <- (function_declaration) => uast(
    type: "Function",
    roles: "Function", "Declaration",
    children: "function_literal", "identifier"
)

function_literal <- (function_literal) => uast(
    type: "Function",
    roles: "Function", "Declaration",
    children: "function_body", "parameter_list"
)

group_literal <- (group_literal) => uast(
    type: "Literal",
    roles: "Literal",
    children: "array_literal", "binary_expression", "complex_invocation_expression", "dict_literal", "float_literal", "function_literal", "group_literal", "identifier", "int_literal", "member_access", "string_literal", "type_expression", "unary_expression"
)

import_declaration <- (import_declaration) => uast(
    type: "Import",
    roles: "Import",
    children: "identifier", "import_members", "import_module"
)

import_members <- (import_members) => uast(
    type: "Import",
    roles: "Import"
)

import_module <- (import_module) => uast(
    type: "Import",
    roles: "Import"
)

int_literal <- (int_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

let_declaration <- (let_declaration) => uast(
    type: "Synthetic",
    children: "array_literal", "binary_expression", "complex_invocation_expression", "dict_literal", "float_literal", "function_literal", "group_literal", "identifier", "int_literal", "member_access", "string_literal", "type_expression", "unary_expression"
)

member_access <- (member_access) => uast(
    type: "Synthetic",
    children: "array_literal", "dict_literal", "float_literal", "function_literal", "group_literal", "identifier", "int_literal", "member_identifier", "string_literal"
)

module_declaration <- (module_declaration) => uast(
    type: "Module",
    roles: "Module",
    children: "identifier"
)

parameter_list <- (parameter_list) => uast(
    type: "Parameter",
    roles: "Parameter"
)

simple_invocation_expression <- (simple_invocation_expression) => uast(
    type: "Synthetic",
    children: "array_literal", "dict_literal", "float_literal", "function_literal", "group_literal", "identifier", "int_literal", "member_access", "string_literal", "type_expression"
)

source_file <- (source_file) => uast(
    type: "Synthetic"
)

string_literal <- (string_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

type_body <- (type_body) => uast(
    type: "Synthetic"
)

type_case <- (type_case) => uast(
    type: "Case",
    roles: "Branch",
    children: "array_literal", "binary_expression", "dict_literal", "float_literal", "function_literal", "group_literal", "identifier", "int_literal", "member_access", "simple_invocation_expression", "string_literal", "type_expression", "unary_expression"
)

type_expression <- (type_expression) => uast(
    type: "Synthetic",
    children: "array_literal", "dict_literal", "float_literal", "function_literal", "group_literal", "identifier", "int_literal", "member_access", "string_literal", "type_body", "type_expression"
)

unary_expression <- (unary_expression) => uast(
    type: "Synthetic"
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
)

data <- (data) => uast(
    type: "Synthetic"
)

enum <- (enum) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
)

enum_case_reference <- (enum_case_reference) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
)

escape_sequence <- (escape_sequence) => uast(
    type: "Synthetic"
)

extern <- (extern) => uast(
    type: "Synthetic"
)

func <- (func) => uast(
    type: "Synthetic"
)

identifier <- (identifier) => uast(
    type: "If"
)

import <- (import) => uast(
    type: "Import",
    roles: "Import"
)

let <- (let) => uast(
    type: "Synthetic"
)

member_identifier <- (member_identifier) => uast(
    type: "If"
)

module <- (module) => uast(
    type: "Module",
    roles: "Module"
)

type <- (type) => uast(
    type: "Synthetic"
)

