_literal <- (_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

abort <- (abort) => uast(
    type: "Synthetic",
    children: "_literal", "abort", "array", "assignment", "binary_expression", "block", "function_call", "group", "ident", "if_statement", "object", "query", "return", "unary_expression"
)

arguments <- (arguments) => uast(
    type: "Synthetic"
)

array <- (array) => uast(
    type: "Synthetic"
)

assign_infallible_target <- (assign_infallible_target) => uast(
    type: "Synthetic",
    children: "assign_target"
)

assign_target <- (assign_target) => uast(
    type: "Synthetic"
)

assignment <- (assignment) => uast(
    type: "Assignment",
    roles: "Assignment",
    children: "_literal", "abort", "array", "assign_infallible_target", "assign_target", "assignment", "binary_expression", "block", "function_call", "group", "ident", "if_statement", "object", "query", "return", "unary_expression"
)

binary_expression <- (binary_expression) => uast(
    type: "Synthetic",
    children: "_literal", "array", "binary_expression", "block", "function_call", "group", "ident", "object", "query", "unary_expression"
)

block <- (block) => uast(
    type: "Block",
    roles: "Body"
)

closure <- (closure) => uast(
    type: "Synthetic",
    children: "block"
)

closure_variables <- (closure_variables) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
)

entry <- (entry) => uast(
    type: "Try",
    roles: "Try"
)

field <- (field) => uast(
    type: "Field",
    roles: "Member"
)

function_call <- (function_call) => uast(
    type: "Function",
    roles: "Function", "Declaration",
    children: "ident"
)

group <- (group) => uast(
    type: "Synthetic"
)

if_statement <- (if_statement) => uast(
    type: "If",
    children: "predicate"
)

key <- (key) => uast(
    type: "Synthetic"
)

named_argument <- (named_argument) => uast(
    type: "Synthetic",
    children: "_literal", "abort", "array", "binary_expression", "block", "else", "false", "function_call", "group", "ident", "if", "null", "object", "query", "return", "true", "unary_expression"
)

null <- (null) => uast(
    type: "Synthetic"
)

object <- (object) => uast(
    type: "Synthetic"
)

path <- (path) => uast(
    type: "Synthetic"
)

predicate <- (predicate) => uast(
    type: "Synthetic"
)

program <- (program) => uast(
    type: "Synthetic"
)

query <- (query) => uast(
    type: "Synthetic"
)

raw_string <- (raw_string) => uast(
    type: "Synthetic"
)

raw_string_escape_sequence <- (raw_string_escape_sequence) => uast(
    type: "Synthetic"
)

regex <- (regex) => uast(
    type: "Synthetic"
)

regex_escape_sequence <- (regex_escape_sequence) => uast(
    type: "Synthetic"
)

return <- (return) => uast(
    type: "Return",
    roles: "Return"
)

string <- (string) => uast(
    type: "Synthetic"
)

string_template <- (string_template) => uast(
    type: "Synthetic"
)

timestamp <- (timestamp) => uast(
    type: "Synthetic"
)

unary_expression <- (unary_expression) => uast(
    type: "Synthetic",
    children: "_literal", "array", "binary_expression", "block", "function_call", "group", "ident", "object", "query", "unary_expression"
)

value <- (value) => uast(
    type: "Synthetic"
)

_ <- (_) => uast(
    type: "Synthetic"
)

abort <- (abort) => uast(
    type: "Synthetic"
)

boolean <- (boolean) => uast(
    type: "Synthetic"
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
)

else <- (else) => uast(
    type: "Synthetic"
)

escape_sequence <- (escape_sequence) => uast(
    type: "Synthetic"
)

event <- (event) => uast(
    type: "Synthetic"
)

false <- (false) => uast(
    type: "Synthetic"
)

float <- (float) => uast(
    type: "Synthetic"
)

ident <- (ident) => uast(
    type: "Synthetic"
)

if <- (if) => uast(
    type: "If"
)

index <- (index) => uast(
    type: "Index",
    roles: "Index"
)

integer <- (integer) => uast(
    type: "Synthetic"
)

metadata <- (metadata) => uast(
    type: "Synthetic"
)

noop <- (noop) => uast(
    type: "Synthetic"
)

null <- (null) => uast(
    type: "Synthetic"
)

return <- (return) => uast(
    type: "Return",
    roles: "Return"
)

true <- (true) => uast(
    type: "Synthetic"
)

