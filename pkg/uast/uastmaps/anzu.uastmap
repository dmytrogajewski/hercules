arena_statement <- (arena_statement) => uast(
    type: "Synthetic",
    children: []
)

array_initializer_literal <- (array_initializer_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: "expression", "number_literal"
)

array_literal <- (array_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

assignment_expression <- (assignment_expression) => uast(
    type: "Assignment",
    roles: "Assignment"
    children: "call_expression", "compound_identifier", "expression", "identifier", "parenthesized_expression", "pointer_expression", "subscript_expression"
)

binary_expression <- (binary_expression) => uast(
    type: "Synthetic",
    children: "expression"
)

bool_literal <- (bool_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

builtin_type <- (builtin_type) => uast(
    type: "Synthetic",
    children: []
)

call_expression <- (call_expression) => uast(
    type: "Call",
    roles: "Call"
    children: "expression"
)

compound_identifier <- (compound_identifier) => uast(
    type: "If",
    children: []
)

compound_statement <- (compound_statement) => uast(
    type: "Synthetic",
    children: []
)

expression <- (expression) => uast(
    type: "Synthetic",
    children: []
)

expression_statement <- (expression_statement) => uast(
    type: "Synthetic",
    children: []
)

for_statement <- (for_statement) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

function_definition <- (function_definition) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: "compound_statement", "function_return_type_specifier", "identifier", "parameter_list", "template_parameter_list"
)

function_return_type_specifier <- (function_return_type_specifier) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

if_statement <- (if_statement) => uast(
    type: "If",
    children: "compound_statement", "expression"
)

let_statement <- (let_statement) => uast(
    type: "Synthetic",
    children: "expression", "identifier", "type_specifier"
)

parameter <- (parameter) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

parameter_list <- (parameter_list) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

parenthesized_expression <- (parenthesized_expression) => uast(
    type: "Synthetic",
    children: []
)

pointer_expression <- (pointer_expression) => uast(
    type: "Synthetic",
    children: "expression"
)

return_statement <- (return_statement) => uast(
    type: "Return",
    roles: "Return"
    children: []
)

source_file <- (source_file) => uast(
    type: "Synthetic",
    children: []
)

statement <- (statement) => uast(
    type: "Synthetic",
    children: []
)

struct_definition <- (struct_definition) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: "identifier", "struct_member_definition"
)

struct_member_definition <- (struct_member_definition) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: []
)

subscript_expression <- (subscript_expression) => uast(
    type: "Synthetic",
    children: []
)

template_expression <- (template_expression) => uast(
    type: "Synthetic",
    children: "expression"
)

template_parameter_list <- (template_parameter_list) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

type_specifier <- (type_specifier) => uast(
    type: "If",
    children: "identifier"
)

type_suffix <- (type_suffix) => uast(
    type: "Synthetic",
    children: []
)

unary_expression <- (unary_expression) => uast(
    type: "Synthetic",
    children: "expression"
)

var_statement <- (var_statement) => uast(
    type: "Synthetic",
    children: "expression", "identifier", "type_specifier"
)

while_statement <- (while_statement) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

arena <- (arena) => uast(
    type: "Synthetic",
    children: []
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
    children: []
)

const <- (const) => uast(
    type: "Synthetic",
    children: []
)

else <- (else) => uast(
    type: "Synthetic",
    children: []
)

f32 <- (f32) => uast(
    type: "Synthetic",
    children: []
)

f64 <- (f64) => uast(
    type: "Synthetic",
    children: []
)

false <- (false) => uast(
    type: "Synthetic",
    children: []
)

fn <- (fn) => uast(
    type: "Synthetic",
    children: []
)

for <- (for) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

i32 <- (i32) => uast(
    type: "Synthetic",
    children: []
)

i64 <- (i64) => uast(
    type: "Synthetic",
    children: []
)

identifier <- (identifier) => uast(
    type: "If",
    children: []
)

if <- (if) => uast(
    type: "If",
    children: []
)

in <- (in) => uast(
    type: "Synthetic",
    children: []
)

let <- (let) => uast(
    type: "Synthetic",
    children: []
)

number_literal <- (number_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

return <- (return) => uast(
    type: "Return",
    roles: "Return"
    children: []
)

string <- (string) => uast(
    type: "Synthetic",
    children: []
)

string_literal <- (string_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

struct <- (struct) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: []
)

true <- (true) => uast(
    type: "Synthetic",
    children: []
)

typeof <- (typeof) => uast(
    type: "Synthetic",
    children: []
)

u32 <- (u32) => uast(
    type: "Synthetic",
    children: []
)

u64 <- (u64) => uast(
    type: "Synthetic",
    children: []
)

var <- (var) => uast(
    type: "Synthetic",
    children: []
)

while <- (while) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

