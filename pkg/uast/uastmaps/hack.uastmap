_declaration <- (_declaration) => uast(
    type: "Synthetic",
    children: []
)

_expression <- (_expression) => uast(
    type: "Synthetic",
    children: []
)

_literal <- (_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

_statement <- (_statement) => uast(
    type: "Synthetic",
    children: []
)

_type <- (_type) => uast(
    type: "Synthetic",
    children: []
)

abstract_enum_class_declaration <- (abstract_enum_class_declaration) => uast(
    type: "Class",
    roles: "Class", "Declaration"
    children: "_type", "identifier"
)

abstract_modifier <- (abstract_modifier) => uast(
    type: "If",
    children: []
)

alias_declaration <- (alias_declaration) => uast(
    type: "Synthetic",
    children: "_type", "as"
)

anonymous_function_expression <- (anonymous_function_expression) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: "_type", "compound_statement"
)

argument <- (argument) => uast(
    type: "Synthetic",
    children: []
)

arguments <- (arguments) => uast(
    type: "Synthetic",
    children: []
)

array <- (array) => uast(
    type: "Synthetic",
    children: []
)

as_expression <- (as_expression) => uast(
    type: "Synthetic",
    children: "_expression", "_type"
)

async_modifier <- (async_modifier) => uast(
    type: "If",
    children: []
)

attribute_modifier <- (attribute_modifier) => uast(
    type: "If",
    children: []
)

await_modifier <- (await_modifier) => uast(
    type: "If",
    children: []
)

awaitable_expression <- (awaitable_expression) => uast(
    type: "Await",
    roles: "Await"
    children: []
)

binary_expression <- (binary_expression) => uast(
    type: "Synthetic",
    children: "_expression"
)

braced_expression <- (braced_expression) => uast(
    type: "Synthetic",
    children: []
)

break_statement <- (break_statement) => uast(
    type: "Break",
    roles: "Break"
    children: []
)

call_expression <- (call_expression) => uast(
    type: "Call",
    roles: "Call"
    children: "_expression", "array", "darray", "dict", "keyset", "varray", "vec"
)

capability <- (capability) => uast(
    type: "Synthetic",
    children: []
)

capability_list <- (capability_list) => uast(
    type: "List",
    children: []
)

cast_expression <- (cast_expression) => uast(
    type: "Cast",
    children: "_expression", "array", "bool", "float", "int", "string"
)

catch_clause <- (catch_clause) => uast(
    type: "Catch",
    roles: "Catch"
    children: "_type", "compound_statement", "variable"
)

class_declaration <- (class_declaration) => uast(
    type: "Class",
    roles: "Class", "Declaration"
    children: "identifier", "member_declarations", "xhp_class_identifier", "xhp_identifier"
)

collection <- (collection) => uast(
    type: "Synthetic",
    children: []
)

compound_statement <- (compound_statement) => uast(
    type: "Synthetic",
    children: []
)

concurrent_statement <- (concurrent_statement) => uast(
    type: "Synthetic",
    children: []
)

const_declaration <- (const_declaration) => uast(
    type: "Synthetic",
    children: "_type"
)

const_declarator <- (const_declarator) => uast(
    type: "Synthetic",
    children: "_expression", "identifier"
)

context_const_declaration <- (context_const_declaration) => uast(
    type: "Synthetic",
    children: "as", "capability_list", "identifier", "super"
)

continue_statement <- (continue_statement) => uast(
    type: "Continue",
    roles: "Continue"
    children: []
)

do_statement <- (do_statement) => uast(
    type: "Synthetic",
    children: "_statement", "parenthesized_expression"
)

echo_statement <- (echo_statement) => uast(
    type: "Synthetic",
    children: []
)

element_initializer <- (element_initializer) => uast(
    type: "Synthetic",
    children: []
)

embedded_braced_expression <- (embedded_braced_expression) => uast(
    type: "Synthetic",
    children: []
)

empty_statement <- (empty_statement) => uast(
    type: "Synthetic",
    children: []
)

enum_class_declaration <- (enum_class_declaration) => uast(
    type: "Class",
    roles: "Class", "Declaration"
    children: "_type", "identifier"
)

enum_class_label <- (enum_class_label) => uast(
    type: "Class",
    roles: "Class", "Declaration"
    children: "qualified_identifier"
)

enum_declaration <- (enum_declaration) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
    children: "_type", "as", "identifier"
)

enumerator <- (enumerator) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
    children: []
)

expression_statement <- (expression_statement) => uast(
    type: "Synthetic",
    children: []
)

expression_tree <- (expression_tree) => uast(
    type: "Synthetic",
    children: "identifier"
)

extends_clause <- (extends_clause) => uast(
    type: "Synthetic",
    children: []
)

false <- (false) => uast(
    type: "Synthetic",
    children: []
)

field_initializer <- (field_initializer) => uast(
    type: "Field",
    roles: "Member"
    children: []
)

field_specifier <- (field_specifier) => uast(
    type: "If",
    children: []
)

finally_clause <- (finally_clause) => uast(
    type: "Finally",
    roles: "Finally"
    children: "compound_statement"
)

for_statement <- (for_statement) => uast(
    type: "Loop",
    roles: "Loop"
    children: "_statement"
)

foreach_statement <- (foreach_statement) => uast(
    type: "Loop",
    roles: "Loop"
    children: "_expression", "_statement", "call_expression", "list_expression", "parenthesized_expression", "pipe_variable", "qualified_identifier", "scope_identifier", "scoped_identifier", "selection_expression", "subscript_expression", "variable", "xhp_class_identifier", "xhp_identifier"
)

function_declaration <- (function_declaration) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: "_type", "compound_statement", "identifier"
)

function_pointer <- (function_pointer) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

function_type_specifier <- (function_type_specifier) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: "_type"
)

heredoc <- (heredoc) => uast(
    type: "Synthetic",
    children: []
)

if_statement <- (if_statement) => uast(
    type: "If",
    children: "_statement", "else", "parenthesized_expression"
)

implements_clause <- (implements_clause) => uast(
    type: "Synthetic",
    children: []
)

include_expression <- (include_expression) => uast(
    type: "Synthetic",
    children: []
)

interface_declaration <- (interface_declaration) => uast(
    type: "Interface",
    roles: "Interface", "Declaration"
    children: "identifier", "member_declarations"
)

is_expression <- (is_expression) => uast(
    type: "Synthetic",
    children: "_expression", "_type"
)

lambda_expression <- (lambda_expression) => uast(
    type: "Lambda",
    roles: "Lambda"
    children: "_expression", "_type", "compound_statement"
)

list_expression <- (list_expression) => uast(
    type: "List",
    children: []
)

member_declarations <- (member_declarations) => uast(
    type: "Synthetic",
    children: []
)

method_declaration <- (method_declaration) => uast(
    type: "Method",
    roles: "Function", "Declaration", "Member"
    children: "_type", "compound_statement", "identifier"
)

module_attribute <- (module_attribute) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: []
)

namespace_declaration <- (namespace_declaration) => uast(
    type: "Namespace",
    roles: "Module"
    children: "compound_statement", "qualified_identifier"
)

new_expression <- (new_expression) => uast(
    type: "Synthetic",
    children: []
)

null <- (null) => uast(
    type: "Synthetic",
    children: []
)

parameter <- (parameter) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: "_expression", "_type", "variable"
)

parameters <- (parameters) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

parenthesized_expression <- (parenthesized_expression) => uast(
    type: "Synthetic",
    children: []
)

postfix_unary_expression <- (postfix_unary_expression) => uast(
    type: "Synthetic",
    children: []
)

prefix_unary_expression <- (prefix_unary_expression) => uast(
    type: "Synthetic",
    children: "_expression", "await", "clone", "print"
)

prefixed_string <- (prefixed_string) => uast(
    type: "Synthetic",
    children: "identifier"
)

property_declaration <- (property_declaration) => uast(
    type: "Property",
    roles: "Member"
    children: "_type"
)

property_declarator <- (property_declarator) => uast(
    type: "Property",
    roles: "Member"
    children: "_expression", "variable"
)

qualified_identifier <- (qualified_identifier) => uast(
    type: "If",
    children: []
)

require_expression <- (require_expression) => uast(
    type: "Synthetic",
    children: []
)

require_extends_clause <- (require_extends_clause) => uast(
    type: "Synthetic",
    children: []
)

require_implements_clause <- (require_implements_clause) => uast(
    type: "Synthetic",
    children: []
)

return_statement <- (return_statement) => uast(
    type: "Return",
    roles: "Return"
    children: []
)

scope_identifier <- (scope_identifier) => uast(
    type: "If",
    children: []
)

scoped_identifier <- (scoped_identifier) => uast(
    type: "If",
    children: []
)

script <- (script) => uast(
    type: "Synthetic",
    children: []
)

selection_expression <- (selection_expression) => uast(
    type: "Synthetic",
    children: []
)

shape <- (shape) => uast(
    type: "Synthetic",
    children: []
)

shape_type_specifier <- (shape_type_specifier) => uast(
    type: "If",
    children: []
)

static_modifier <- (static_modifier) => uast(
    type: "If",
    children: []
)

subscript_expression <- (subscript_expression) => uast(
    type: "Synthetic",
    children: []
)

switch_case <- (switch_case) => uast(
    type: "Switch",
    children: "_expression"
)

switch_default <- (switch_default) => uast(
    type: "Switch",
    children: []
)

switch_statement <- (switch_statement) => uast(
    type: "Switch",
    children: "parenthesized_expression"
)

ternary_expression <- (ternary_expression) => uast(
    type: "Synthetic",
    children: "_expression"
)

throw_statement <- (throw_statement) => uast(
    type: "Throw",
    roles: "Throw"
    children: []
)

trait_alias_clause <- (trait_alias_clause) => uast(
    type: "Synthetic",
    children: []
)

trait_declaration <- (trait_declaration) => uast(
    type: "Synthetic",
    children: "identifier", "member_declarations"
)

trait_select_clause <- (trait_select_clause) => uast(
    type: "Synthetic",
    children: []
)

trait_use_clause <- (trait_use_clause) => uast(
    type: "Synthetic",
    children: []
)

true <- (true) => uast(
    type: "Synthetic",
    children: []
)

try_statement <- (try_statement) => uast(
    type: "Try",
    roles: "Try"
    children: "compound_statement"
)

tuple <- (tuple) => uast(
    type: "Tuple",
    children: []
)

tuple_type_specifier <- (tuple_type_specifier) => uast(
    type: "If",
    children: []
)

type_arguments <- (type_arguments) => uast(
    type: "Synthetic",
    children: []
)

type_const_declaration <- (type_const_declaration) => uast(
    type: "Synthetic",
    children: "_type", "as", "identifier"
)

type_constant <- (type_constant) => uast(
    type: "Synthetic",
    children: []
)

type_parameter <- (type_parameter) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: "_type", "as", "identifier", "super"
)

type_parameters <- (type_parameters) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

type_specifier <- (type_specifier) => uast(
    type: "If",
    children: []
)

typed_enumerator <- (typed_enumerator) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
    children: []
)

unset_statement <- (unset_statement) => uast(
    type: "Set",
    children: []
)

use_clause <- (use_clause) => uast(
    type: "Synthetic",
    children: "as", "identifier"
)

use_statement <- (use_statement) => uast(
    type: "Synthetic",
    children: []
)

use_type <- (use_type) => uast(
    type: "Synthetic",
    children: []
)

using_statement <- (using_statement) => uast(
    type: "Synthetic",
    children: []
)

variadic_modifier <- (variadic_modifier) => uast(
    type: "If",
    children: []
)

visibility_modifier <- (visibility_modifier) => uast(
    type: "If",
    children: []
)

where_clause <- (where_clause) => uast(
    type: "Synthetic",
    children: []
)

where_constraint <- (where_constraint) => uast(
    type: "Synthetic",
    children: "_type", "as", "super"
)

while_statement <- (while_statement) => uast(
    type: "Loop",
    roles: "Loop"
    children: "_statement", "parenthesized_expression"
)

xhp_attribute <- (xhp_attribute) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: []
)

xhp_attribute_declaration <- (xhp_attribute_declaration) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: []
)

xhp_category_declaration <- (xhp_category_declaration) => uast(
    type: "Synthetic",
    children: []
)

xhp_children_declaration <- (xhp_children_declaration) => uast(
    type: "Synthetic",
    children: []
)

xhp_class_attribute <- (xhp_class_attribute) => uast(
    type: "Class",
    roles: "Class", "Declaration"
    children: "_expression", "_type", "xhp_enum_type", "xhp_identifier"
)

xhp_close <- (xhp_close) => uast(
    type: "Synthetic",
    children: []
)

xhp_enum_type <- (xhp_enum_type) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
    children: []
)

xhp_expression <- (xhp_expression) => uast(
    type: "Synthetic",
    children: []
)

xhp_open <- (xhp_open) => uast(
    type: "Synthetic",
    children: []
)

xhp_open_close <- (xhp_open_close) => uast(
    type: "Synthetic",
    children: []
)

xhp_spread_expression <- (xhp_spread_expression) => uast(
    type: "Spread",
    roles: "Spread"
    children: []
)

yield_expression <- (yield_expression) => uast(
    type: "Yield",
    roles: "Yield"
    children: []
)

FALSE <- (FALSE) => uast(
    type: "Synthetic",
    children: []
)

False <- (False) => uast(
    type: "Synthetic",
    children: []
)

NULL <- (NULL) => uast(
    type: "Synthetic",
    children: []
)

Null <- (Null) => uast(
    type: "Synthetic",
    children: []
)

TRUE <- (TRUE) => uast(
    type: "Synthetic",
    children: []
)

True <- (True) => uast(
    type: "Synthetic",
    children: []
)

abstract <- (abstract) => uast(
    type: "Synthetic",
    children: []
)

array <- (array) => uast(
    type: "Synthetic",
    children: []
)

arraykey <- (arraykey) => uast(
    type: "Synthetic",
    children: []
)

as <- (as) => uast(
    type: "Synthetic",
    children: []
)

async <- (async) => uast(
    type: "Synthetic",
    children: []
)

attribute <- (attribute) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: []
)

await <- (await) => uast(
    type: "Await",
    roles: "Await"
    children: []
)

bool <- (bool) => uast(
    type: "Synthetic",
    children: []
)

break <- (break) => uast(
    type: "Break",
    roles: "Break"
    children: []
)

case <- (case) => uast(
    type: "Case",
    roles: "Branch"
    children: []
)

catch <- (catch) => uast(
    type: "Catch",
    roles: "Catch"
    children: []
)

category <- (category) => uast(
    type: "Synthetic",
    children: []
)

children <- (children) => uast(
    type: "Synthetic",
    children: []
)

class <- (class) => uast(
    type: "Class",
    roles: "Class", "Declaration"
    children: []
)

clone <- (clone) => uast(
    type: "Synthetic",
    children: []
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
    children: []
)

concurrent <- (concurrent) => uast(
    type: "Synthetic",
    children: []
)

const <- (const) => uast(
    type: "Synthetic",
    children: []
)

continue <- (continue) => uast(
    type: "Continue",
    roles: "Continue"
    children: []
)

contravariant_modifier <- (contravariant_modifier) => uast(
    type: "If",
    children: []
)

covariant_modifier <- (covariant_modifier) => uast(
    type: "If",
    children: []
)

ctx <- (ctx) => uast(
    type: "Synthetic",
    children: []
)

darray <- (darray) => uast(
    type: "Synthetic",
    children: []
)

default <- (default) => uast(
    type: "Synthetic",
    children: []
)

dict <- (dict) => uast(
    type: "Dict",
    children: []
)

do <- (do) => uast(
    type: "Synthetic",
    children: []
)

dynamic <- (dynamic) => uast(
    type: "Synthetic",
    children: []
)

echo <- (echo) => uast(
    type: "Synthetic",
    children: []
)

else <- (else) => uast(
    type: "Synthetic",
    children: []
)

elseif <- (elseif) => uast(
    type: "If",
    children: []
)

enum <- (enum) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
    children: []
)

extends <- (extends) => uast(
    type: "Synthetic",
    children: []
)

false <- (false) => uast(
    type: "Synthetic",
    children: []
)

final_modifier <- (final_modifier) => uast(
    type: "If",
    children: []
)

finally <- (finally) => uast(
    type: "Finally",
    roles: "Finally"
    children: []
)

float <- (float) => uast(
    type: "Synthetic",
    children: []
)

float <- (float) => uast(
    type: "Synthetic",
    children: []
)

for <- (for) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

foreach <- (foreach) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

function <- (function) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

identifier <- (identifier) => uast(
    type: "If",
    children: []
)

if <- (if) => uast(
    type: "If",
    children: []
)

implements <- (implements) => uast(
    type: "Synthetic",
    children: []
)

include <- (include) => uast(
    type: "Synthetic",
    children: []
)

include_once <- (include_once) => uast(
    type: "Synthetic",
    children: []
)

inout_modifier <- (inout_modifier) => uast(
    type: "If",
    children: []
)

insteadof <- (insteadof) => uast(
    type: "Synthetic",
    children: []
)

int <- (int) => uast(
    type: "Synthetic",
    children: []
)

integer <- (integer) => uast(
    type: "Synthetic",
    children: []
)

interface <- (interface) => uast(
    type: "Interface",
    roles: "Interface", "Declaration"
    children: []
)

internal <- (internal) => uast(
    type: "Synthetic",
    children: []
)

is <- (is) => uast(
    type: "Synthetic",
    children: []
)

keyset <- (keyset) => uast(
    type: "Set",
    children: []
)

like_modifier <- (like_modifier) => uast(
    type: "If",
    children: []
)

list <- (list) => uast(
    type: "List",
    children: []
)

mixed <- (mixed) => uast(
    type: "Synthetic",
    children: []
)

namespace <- (namespace) => uast(
    type: "Namespace",
    roles: "Module"
    children: []
)

new <- (new) => uast(
    type: "Synthetic",
    children: []
)

newtype <- (newtype) => uast(
    type: "Synthetic",
    children: []
)

nonnull <- (nonnull) => uast(
    type: "Synthetic",
    children: []
)

noreturn <- (noreturn) => uast(
    type: "Return",
    roles: "Return"
    children: []
)

nothing <- (nothing) => uast(
    type: "Synthetic",
    children: []
)

null <- (null) => uast(
    type: "Synthetic",
    children: []
)

nullable_modifier <- (nullable_modifier) => uast(
    type: "If",
    children: []
)

num <- (num) => uast(
    type: "Synthetic",
    children: []
)

open_modifier <- (open_modifier) => uast(
    type: "If",
    children: []
)

optional_modifier <- (optional_modifier) => uast(
    type: "If",
    children: []
)

parent <- (parent) => uast(
    type: "Synthetic",
    children: []
)

pipe_variable <- (pipe_variable) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
    children: []
)

print <- (print) => uast(
    type: "Synthetic",
    children: []
)

private <- (private) => uast(
    type: "Synthetic",
    children: []
)

protected <- (protected) => uast(
    type: "Synthetic",
    children: []
)

public <- (public) => uast(
    type: "Synthetic",
    children: []
)

reify_modifier <- (reify_modifier) => uast(
    type: "If",
    children: []
)

require <- (require) => uast(
    type: "Synthetic",
    children: []
)

require_once <- (require_once) => uast(
    type: "Synthetic",
    children: []
)

resource <- (resource) => uast(
    type: "Synthetic",
    children: []
)

return <- (return) => uast(
    type: "Return",
    roles: "Return"
    children: []
)

self <- (self) => uast(
    type: "Synthetic",
    children: []
)

shape <- (shape) => uast(
    type: "Synthetic",
    children: []
)

soft_modifier <- (soft_modifier) => uast(
    type: "If",
    children: []
)

static <- (static) => uast(
    type: "Synthetic",
    children: []
)

string <- (string) => uast(
    type: "Synthetic",
    children: []
)

string <- (string) => uast(
    type: "Synthetic",
    children: []
)

super <- (super) => uast(
    type: "Synthetic",
    children: []
)

switch <- (switch) => uast(
    type: "Switch",
    children: []
)

throw <- (throw) => uast(
    type: "Throw",
    roles: "Throw"
    children: []
)

trait <- (trait) => uast(
    type: "Synthetic",
    children: []
)

true <- (true) => uast(
    type: "Synthetic",
    children: []
)

try <- (try) => uast(
    type: "Try",
    roles: "Try"
    children: []
)

tuple <- (tuple) => uast(
    type: "Tuple",
    children: []
)

type <- (type) => uast(
    type: "Synthetic",
    children: []
)

unset <- (unset) => uast(
    type: "Set",
    children: []
)

use <- (use) => uast(
    type: "Synthetic",
    children: []
)

using <- (using) => uast(
    type: "Synthetic",
    children: []
)

variable <- (variable) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
    children: []
)

varray <- (varray) => uast(
    type: "Synthetic",
    children: []
)

vec <- (vec) => uast(
    type: "Synthetic",
    children: []
)

void <- (void) => uast(
    type: "Synthetic",
    children: []
)

where <- (where) => uast(
    type: "Synthetic",
    children: []
)

while <- (while) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

xhp_category_identifier <- (xhp_category_identifier) => uast(
    type: "If",
    children: []
)

xhp_class_identifier <- (xhp_class_identifier) => uast(
    type: "Class",
    roles: "Class", "Declaration"
    children: []
)

xhp_comment <- (xhp_comment) => uast(
    type: "Comment",
    roles: "Comment"
    children: []
)

xhp_identifier <- (xhp_identifier) => uast(
    type: "If",
    children: []
)

xhp_modifier <- (xhp_modifier) => uast(
    type: "If",
    children: []
)

xhp_string <- (xhp_string) => uast(
    type: "Synthetic",
    children: []
)

yield <- (yield) => uast(
    type: "Yield",
    roles: "Yield"
    children: []
)

