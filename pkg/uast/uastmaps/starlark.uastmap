_compound_statement <- (_compound_statement) => uast(
    type: "Synthetic"
)

_simple_statement <- (_simple_statement) => uast(
    type: "Synthetic"
)

expression <- (expression) => uast(
    type: "Synthetic"
)

parameter <- (parameter) => uast(
    type: "Parameter",
    roles: "Parameter"
)

pattern <- (pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
)

primary_expression <- (primary_expression) => uast(
    type: "Synthetic"
)

argument_list <- (argument_list) => uast(
    type: "List"
)

as_pattern <- (as_pattern) => uast(
    type: "Pattern",
    roles: "Pattern",
    children: "as_pattern_target"
)

assert_statement <- (assert_statement) => uast(
    type: "Synthetic"
)

assignment <- (assignment) => uast(
    type: "Assignment",
    roles: "Assignment",
    children: "assignment", "augmented_assignment", "expression", "expression_list", "pattern", "pattern_list", "type"
)

attribute <- (attribute) => uast(
    type: "Attribute",
    roles: "Attribute",
    children: "identifier", "primary_expression"
)

augmented_assignment <- (augmented_assignment) => uast(
    type: "Assignment",
    roles: "Assignment",
    children: "assignment", "augmented_assignment", "expression", "expression_list", "pattern", "pattern_list"
)

binary_operator <- (binary_operator) => uast(
    type: "BinaryOp",
    roles: "Operator",
    children: "primary_expression"
)

block <- (block) => uast(
    type: "Block",
    roles: "Body",
    children: "case_clause"
)

boolean_operator <- (boolean_operator) => uast(
    type: "Synthetic",
    children: "and", "expression", "or"
)

break_statement <- (break_statement) => uast(
    type: "Break",
    roles: "Break"
)

call <- (call) => uast(
    type: "Call",
    roles: "Call",
    children: "argument_list", "primary_expression"
)

case_clause <- (case_clause) => uast(
    type: "Case",
    roles: "Branch",
    children: "block", "if_clause"
)

case_pattern <- (case_pattern) => uast(
    type: "Case",
    roles: "Branch"
)

chevron <- (chevron) => uast(
    type: "Synthetic"
)

class_pattern <- (class_pattern) => uast(
    type: "Class",
    roles: "Class", "Declaration"
)

comparison_operator <- (comparison_operator) => uast(
    type: "Synthetic",
    children: "in"
)

complex_pattern <- (complex_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
)

concatenated_string <- (concatenated_string) => uast(
    type: "Synthetic"
)

conditional_expression <- (conditional_expression) => uast(
    type: "Synthetic"
)

constrained_type <- (constrained_type) => uast(
    type: "Synthetic"
)

continue_statement <- (continue_statement) => uast(
    type: "Continue",
    roles: "Continue"
)

decorated_definition <- (decorated_definition) => uast(
    type: "Synthetic",
    children: "function_definition"
)

decorator <- (decorator) => uast(
    type: "Decorator",
    roles: "Attribute"
)

default_parameter <- (default_parameter) => uast(
    type: "Parameter",
    roles: "Parameter",
    children: "expression", "identifier", "tuple_pattern"
)

delete_statement <- (delete_statement) => uast(
    type: "Synthetic"
)

dict_pattern <- (dict_pattern) => uast(
    type: "Dict",
    children: "_", "case_pattern", "class_pattern", "complex_pattern", "concatenated_string", "dict_pattern", "dotted_name", "false", "float", "integer", "list_pattern", "none", "splat_pattern", "string", "true", "tuple_pattern", "union_pattern"
)

dictionary <- (dictionary) => uast(
    type: "Dict"
)

dictionary_comprehension <- (dictionary_comprehension) => uast(
    type: "Dict",
    children: "pair"
)

dictionary_splat <- (dictionary_splat) => uast(
    type: "Dict"
)

dictionary_splat_pattern <- (dictionary_splat_pattern) => uast(
    type: "Dict"
)

dotted_name <- (dotted_name) => uast(
    type: "Synthetic"
)

elif_clause <- (elif_clause) => uast(
    type: "If",
    children: "block", "expression"
)

else_clause <- (else_clause) => uast(
    type: "Synthetic",
    children: "block"
)

exec_statement <- (exec_statement) => uast(
    type: "Synthetic",
    children: "identifier", "string"
)

expression_list <- (expression_list) => uast(
    type: "List"
)

expression_statement <- (expression_statement) => uast(
    type: "Synthetic"
)

for_in_clause <- (for_in_clause) => uast(
    type: "Loop",
    roles: "Loop",
    children: "expression", "pattern", "pattern_list"
)

for_statement <- (for_statement) => uast(
    type: "Loop",
    roles: "Loop",
    children: "block", "else_clause", "expression", "expression_list", "pattern", "pattern_list"
)

format_expression <- (format_expression) => uast(
    type: "Loop",
    roles: "Loop",
    children: "expression", "expression_list", "format_specifier", "pattern_list", "type_conversion"
)

format_specifier <- (format_specifier) => uast(
    type: "If"
)

function_definition <- (function_definition) => uast(
    type: "Function",
    roles: "Function", "Declaration",
    children: "block", "identifier", "parameters", "type", "type_parameter"
)

generic_type <- (generic_type) => uast(
    type: "Synthetic"
)

if_clause <- (if_clause) => uast(
    type: "If"
)

if_statement <- (if_statement) => uast(
    type: "If",
    children: "block", "elif_clause", "else_clause", "expression"
)

interpolation <- (interpolation) => uast(
    type: "Synthetic",
    children: "expression", "expression_list", "format_specifier", "pattern_list", "type_conversion"
)

keyword_argument <- (keyword_argument) => uast(
    type: "Synthetic",
    children: "expression", "identifier"
)

keyword_pattern <- (keyword_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
)

keyword_separator <- (keyword_separator) => uast(
    type: "Synthetic"
)

lambda <- (lambda) => uast(
    type: "Lambda",
    roles: "Lambda",
    children: "expression", "lambda_parameters"
)

lambda_parameters <- (lambda_parameters) => uast(
    type: "Parameter",
    roles: "Parameter"
)

list <- (list) => uast(
    type: "List"
)

list_comprehension <- (list_comprehension) => uast(
    type: "List",
    children: "expression"
)

list_pattern <- (list_pattern) => uast(
    type: "List"
)

list_splat <- (list_splat) => uast(
    type: "List"
)

list_splat_pattern <- (list_splat_pattern) => uast(
    type: "List"
)

match_statement <- (match_statement) => uast(
    type: "Match",
    roles: "Match",
    children: "block", "expression"
)

member_type <- (member_type) => uast(
    type: "Synthetic"
)

module <- (module) => uast(
    type: "Module",
    roles: "Module"
)

named_expression <- (named_expression) => uast(
    type: "Synthetic",
    children: "expression", "identifier"
)

not_operator <- (not_operator) => uast(
    type: "Synthetic",
    children: "expression"
)

pair <- (pair) => uast(
    type: "Synthetic",
    children: "expression"
)

parameters <- (parameters) => uast(
    type: "Parameter",
    roles: "Parameter"
)

parenthesized_expression <- (parenthesized_expression) => uast(
    type: "Synthetic"
)

parenthesized_list_splat <- (parenthesized_list_splat) => uast(
    type: "List"
)

pass_statement <- (pass_statement) => uast(
    type: "Synthetic"
)

pattern_list <- (pattern_list) => uast(
    type: "List"
)

positional_separator <- (positional_separator) => uast(
    type: "Synthetic"
)

print_statement <- (print_statement) => uast(
    type: "Synthetic",
    children: "expression"
)

return_statement <- (return_statement) => uast(
    type: "Return",
    roles: "Return"
)

set <- (set) => uast(
    type: "Set"
)

set_comprehension <- (set_comprehension) => uast(
    type: "Set",
    children: "expression"
)

slice <- (slice) => uast(
    type: "Slice"
)

splat_pattern <- (splat_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
)

splat_type <- (splat_type) => uast(
    type: "Synthetic"
)

string <- (string) => uast(
    type: "Synthetic"
)

string_content <- (string_content) => uast(
    type: "Synthetic"
)

subscript <- (subscript) => uast(
    type: "Synthetic",
    children: "expression", "primary_expression", "slice"
)

tuple <- (tuple) => uast(
    type: "Tuple"
)

tuple_pattern <- (tuple_pattern) => uast(
    type: "Tuple"
)

type <- (type) => uast(
    type: "Synthetic"
)

type_parameter <- (type_parameter) => uast(
    type: "Parameter",
    roles: "Parameter"
)

typed_default_parameter <- (typed_default_parameter) => uast(
    type: "Parameter",
    roles: "Parameter",
    children: "expression", "identifier", "type"
)

typed_parameter <- (typed_parameter) => uast(
    type: "Parameter",
    roles: "Parameter",
    children: "type"
)

unary_operator <- (unary_operator) => uast(
    type: "UnaryOp",
    roles: "Operator",
    children: "primary_expression"
)

union_pattern <- (union_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
)

union_type <- (union_type) => uast(
    type: "Synthetic"
)

while_statement <- (while_statement) => uast(
    type: "Loop",
    roles: "Loop",
    children: "block", "else_clause", "expression"
)

with_clause <- (with_clause) => uast(
    type: "Synthetic"
)

with_item <- (with_item) => uast(
    type: "Synthetic",
    children: "expression"
)

with_statement <- (with_statement) => uast(
    type: "Synthetic",
    children: "block"
)

_ <- (_) => uast(
    type: "Synthetic"
)

and <- (and) => uast(
    type: "Synthetic"
)

as <- (as) => uast(
    type: "Synthetic"
)

assert_builtin <- (assert_builtin) => uast(
    type: "Synthetic"
)

assert_keyword <- (assert_keyword) => uast(
    type: "Synthetic"
)

async <- (async) => uast(
    type: "Synthetic"
)

break <- (break) => uast(
    type: "Break",
    roles: "Break"
)

case <- (case) => uast(
    type: "Case",
    roles: "Branch"
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
)

continue <- (continue) => uast(
    type: "Continue",
    roles: "Continue"
)

def <- (def) => uast(
    type: "Synthetic"
)

del <- (del) => uast(
    type: "Synthetic"
)

elif <- (elif) => uast(
    type: "If"
)

ellipsis <- (ellipsis) => uast(
    type: "Synthetic"
)

else <- (else) => uast(
    type: "Synthetic"
)

escape_interpolation <- (escape_interpolation) => uast(
    type: "Synthetic"
)

escape_sequence <- (escape_sequence) => uast(
    type: "Synthetic"
)

exec <- (exec) => uast(
    type: "Synthetic"
)

false <- (false) => uast(
    type: "Synthetic"
)

float <- (float) => uast(
    type: "Synthetic"
)

for <- (for) => uast(
    type: "Loop",
    roles: "Loop"
)

identifier <- (identifier) => uast(
    type: "If"
)

if <- (if) => uast(
    type: "If"
)

in <- (in) => uast(
    type: "Synthetic"
)

integer <- (integer) => uast(
    type: "Synthetic"
)

lambda <- (lambda) => uast(
    type: "Lambda",
    roles: "Lambda"
)

line_continuation <- (line_continuation) => uast(
    type: "Synthetic"
)

match <- (match) => uast(
    type: "Match",
    roles: "Match"
)

none <- (none) => uast(
    type: "Synthetic"
)

not <- (not) => uast(
    type: "Synthetic"
)

or <- (or) => uast(
    type: "Synthetic"
)

pass <- (pass) => uast(
    type: "Synthetic"
)

print <- (print) => uast(
    type: "Synthetic"
)

return <- (return) => uast(
    type: "Return",
    roles: "Return"
)

string_end <- (string_end) => uast(
    type: "Synthetic"
)

string_start <- (string_start) => uast(
    type: "Synthetic"
)

true <- (true) => uast(
    type: "Synthetic"
)

type_conversion <- (type_conversion) => uast(
    type: "Synthetic"
)

while <- (while) => uast(
    type: "Loop",
    roles: "Loop"
)

with <- (with) => uast(
    type: "Synthetic"
)

