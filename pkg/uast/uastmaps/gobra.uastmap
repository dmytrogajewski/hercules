_expression <- (_expression) => uast(
    type: "Synthetic"
)

_simple_statement <- (_simple_statement) => uast(
    type: "Synthetic"
)

_simple_type <- (_simple_type) => uast(
    type: "Synthetic"
)

_statement <- (_statement) => uast(
    type: "Synthetic"
)

_type <- (_type) => uast(
    type: "Synthetic"
)

adt_clause <- (adt_clause) => uast(
    type: "Synthetic",
    children: "identifier"
)

adt_clauses <- (adt_clauses) => uast(
    type: "Synthetic"
)

adt_type <- (adt_type) => uast(
    type: "Synthetic"
)

apply_statement <- (apply_statement) => uast(
    type: "Synthetic"
)

argument_list <- (argument_list) => uast(
    type: "List"
)

array_type <- (array_type) => uast(
    type: "Synthetic",
    children: "_expression", "_type"
)

assertion <- (assertion) => uast(
    type: "Synthetic"
)

assignment_statement <- (assignment_statement) => uast(
    type: "Assignment",
    roles: "Assignment",
    children: "expression_list"
)

auxiliary_statement <- (auxiliary_statement) => uast(
    type: "Synthetic"
)

binary_expression <- (binary_expression) => uast(
    type: "Synthetic",
    children: "_expression", "implements", "in", "intersection", "setminus", "subset", "union"
)

block <- (block) => uast(
    type: "Block",
    roles: "Body"
)

bound_variable_declaration <- (bound_variable_declaration) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
)

bound_variables <- (bound_variables) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
)

break_statement <- (break_statement) => uast(
    type: "Break",
    roles: "Break"
)

call_expression <- (call_expression) => uast(
    type: "Call",
    roles: "Call",
    children: "_expression", "argument_list", "type_arguments"
)

channel_type <- (channel_type) => uast(
    type: "Synthetic",
    children: "_type"
)

communication_case <- (communication_case) => uast(
    type: "Case",
    roles: "Branch",
    children: "receive_statement", "send_statement"
)

composite_literal <- (composite_literal) => uast(
    type: "Literal",
    roles: "Literal",
    children: "array_type", "generic_type", "implicit_length_array_type", "literal_value", "map_type", "qualified_type", "slice_type", "struct_type", "type_identifier"
)

const_declaration <- (const_declaration) => uast(
    type: "Synthetic"
)

const_spec <- (const_spec) => uast(
    type: "Synthetic",
    children: "_type", "expression_list", "identifier"
)

continue_statement <- (continue_statement) => uast(
    type: "Continue",
    roles: "Continue"
)

dec_statement <- (dec_statement) => uast(
    type: "Synthetic"
)

default_case <- (default_case) => uast(
    type: "Case",
    roles: "Branch"
)

defer_statement <- (defer_statement) => uast(
    type: "Synthetic",
    children: "fold", "unfold"
)

dot <- (dot) => uast(
    type: "Synthetic"
)

empty_statement <- (empty_statement) => uast(
    type: "Synthetic"
)

expression_case <- (expression_case) => uast(
    type: "Case",
    roles: "Branch",
    children: "expression_list"
)

expression_list <- (expression_list) => uast(
    type: "List"
)

expression_statement <- (expression_statement) => uast(
    type: "Synthetic"
)

expression_switch_statement <- (expression_switch_statement) => uast(
    type: "Switch",
    children: "_expression", "_simple_statement"
)

fallthrough_statement <- (fallthrough_statement) => uast(
    type: "Synthetic"
)

field_declaration <- (field_declaration) => uast(
    type: "Field",
    roles: "Member",
    children: "_type", "field_identifier", "generic_type", "interpreted_string_literal", "qualified_type", "raw_string_literal", "type_identifier"
)

field_declaration_list <- (field_declaration_list) => uast(
    type: "Field",
    roles: "Member"
)

for_clause <- (for_clause) => uast(
    type: "Loop",
    roles: "Loop",
    children: "_expression", "_simple_statement"
)

for_statement <- (for_statement) => uast(
    type: "Loop",
    roles: "Loop",
    children: "block"
)

fpredicate_decl <- (fpredicate_decl) => uast(
    type: "Synthetic",
    children: "identifier", "parameter_list"
)

func_literal <- (func_literal) => uast(
    type: "Literal",
    roles: "Literal",
    children: "_simple_type", "block", "parameter_list"
)

function_declaration <- (function_declaration) => uast(
    type: "Function",
    roles: "Function", "Declaration",
    children: "_simple_type", "block", "identifier", "parameter_list", "type_parameter_list"
)

function_type <- (function_type) => uast(
    type: "Function",
    roles: "Function", "Declaration",
    children: "_simple_type", "parameter_list"
)

generic_type <- (generic_type) => uast(
    type: "Synthetic",
    children: "negated_type", "qualified_type", "type_arguments", "type_identifier"
)

ghost_member <- (ghost_member) => uast(
    type: "Synthetic"
)

ghost_statement <- (ghost_statement) => uast(
    type: "Synthetic"
)

go_statement <- (go_statement) => uast(
    type: "Synthetic"
)

goto_statement <- (goto_statement) => uast(
    type: "Synthetic"
)

if_statement <- (if_statement) => uast(
    type: "If",
    children: "_expression", "_simple_statement", "block", "if_statement"
)

implementation_proof <- (implementation_proof) => uast(
    type: "Synthetic"
)

implementation_proof_predicate_alias <- (implementation_proof_predicate_alias) => uast(
    type: "Synthetic"
)

implicit_length_array_type <- (implicit_length_array_type) => uast(
    type: "Synthetic",
    children: "_type"
)

import_declaration <- (import_declaration) => uast(
    type: "Import",
    roles: "Import"
)

import_spec <- (import_spec) => uast(
    type: "Import",
    roles: "Import",
    children: "blank_identifier", "dot", "interpreted_string_literal", "package_identifier", "raw_string_literal"
)

import_spec_list <- (import_spec_list) => uast(
    type: "Import",
    roles: "Import"
)

inc_statement <- (inc_statement) => uast(
    type: "Synthetic"
)

index_expression <- (index_expression) => uast(
    type: "Index",
    roles: "Index",
    children: "_expression"
)

interface_type <- (interface_type) => uast(
    type: "Interface",
    roles: "Interface", "Declaration"
)

interpreted_string_literal <- (interpreted_string_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

keyed_element <- (keyed_element) => uast(
    type: "Synthetic"
)

labeled_statement <- (labeled_statement) => uast(
    type: "Synthetic",
    children: "label_name"
)

let_expression <- (let_expression) => uast(
    type: "Synthetic"
)

literal_element <- (literal_element) => uast(
    type: "Literal",
    roles: "Literal"
)

literal_value <- (literal_value) => uast(
    type: "Literal",
    roles: "Literal"
)

loop_spec <- (loop_spec) => uast(
    type: "Loop",
    roles: "Loop"
)

map_type <- (map_type) => uast(
    type: "Synthetic",
    children: "_type"
)

match_case <- (match_case) => uast(
    type: "Case",
    roles: "Branch"
)

match_expression <- (match_expression) => uast(
    type: "Match",
    roles: "Match"
)

match_expression_clause <- (match_expression_clause) => uast(
    type: "Match",
    roles: "Match"
)

match_pattern <- (match_pattern) => uast(
    type: "Pattern",
    roles: "Pattern"
)

match_pattern_list <- (match_pattern_list) => uast(
    type: "List"
)

method_declaration <- (method_declaration) => uast(
    type: "Method",
    roles: "Function", "Declaration", "Member",
    children: "_simple_type", "block", "field_identifier", "parameter_list"
)

method_elem <- (method_elem) => uast(
    type: "Method",
    roles: "Function", "Declaration", "Member",
    children: "_simple_type", "field_identifier", "parameter_list"
)

mpredicate_decl <- (mpredicate_decl) => uast(
    type: "Synthetic",
    children: "identifier", "parameter_list"
)

negated_type <- (negated_type) => uast(
    type: "Synthetic"
)

outline_statement <- (outline_statement) => uast(
    type: "Synthetic"
)

package_clause <- (package_clause) => uast(
    type: "Package",
    roles: "Module"
)

package_statement <- (package_statement) => uast(
    type: "Package",
    roles: "Module"
)

parameter_declaration <- (parameter_declaration) => uast(
    type: "Parameter",
    roles: "Parameter",
    children: "_type", "identifier"
)

parameter_list <- (parameter_list) => uast(
    type: "Parameter",
    roles: "Parameter"
)

parenthesized_expression <- (parenthesized_expression) => uast(
    type: "Synthetic"
)

parenthesized_type <- (parenthesized_type) => uast(
    type: "Synthetic"
)

pointer_type <- (pointer_type) => uast(
    type: "Synthetic"
)

post_condition <- (post_condition) => uast(
    type: "Synthetic"
)

pre_condition <- (pre_condition) => uast(
    type: "Synthetic"
)

predicate_body <- (predicate_body) => uast(
    type: "Synthetic"
)

preserves_condition <- (preserves_condition) => uast(
    type: "Synthetic"
)

qualified_type <- (qualified_type) => uast(
    type: "If",
    children: "package_identifier", "type_identifier"
)

quantification <- (quantification) => uast(
    type: "If"
)

range_clause <- (range_clause) => uast(
    type: "Synthetic",
    children: "_expression", "expression_list", "identifier"
)

receive_statement <- (receive_statement) => uast(
    type: "Synthetic",
    children: "_expression", "expression_list"
)

return_statement <- (return_statement) => uast(
    type: "Return",
    roles: "Return"
)

select_statement <- (select_statement) => uast(
    type: "Synthetic"
)

selector_expression <- (selector_expression) => uast(
    type: "Synthetic",
    children: "_expression", "field_identifier"
)

send_statement <- (send_statement) => uast(
    type: "Synthetic",
    children: "_expression"
)

short_var_declaration <- (short_var_declaration) => uast(
    type: "Synthetic",
    children: "expression_list"
)

slice_expression <- (slice_expression) => uast(
    type: "Slice",
    children: "_expression"
)

slice_type <- (slice_type) => uast(
    type: "Slice",
    children: "_type"
)

source_file <- (source_file) => uast(
    type: "Synthetic",
    children: "identifier"
)

spec_for_statement <- (spec_for_statement) => uast(
    type: "Loop",
    roles: "Loop"
)

struct_type <- (struct_type) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
)

termination_condition <- (termination_condition) => uast(
    type: "Synthetic"
)

termination_measure <- (termination_measure) => uast(
    type: "Synthetic"
)

ternary_expression <- (ternary_expression) => uast(
    type: "Synthetic",
    children: "_expression"
)

trigger <- (trigger) => uast(
    type: "Synthetic"
)

triggers <- (triggers) => uast(
    type: "Synthetic"
)

type_alias <- (type_alias) => uast(
    type: "Synthetic",
    children: "_type", "type_identifier"
)

type_arguments <- (type_arguments) => uast(
    type: "Synthetic"
)

type_assertion_expression <- (type_assertion_expression) => uast(
    type: "Synthetic",
    children: "_expression", "_type"
)

type_case <- (type_case) => uast(
    type: "Case",
    roles: "Branch",
    children: "_type"
)

type_constraint <- (type_constraint) => uast(
    type: "Synthetic"
)

type_conversion_expression <- (type_conversion_expression) => uast(
    type: "Synthetic",
    children: "_expression", "_type"
)

type_declaration <- (type_declaration) => uast(
    type: "Synthetic"
)

type_elem <- (type_elem) => uast(
    type: "Synthetic"
)

type_instantiation_expression <- (type_instantiation_expression) => uast(
    type: "Synthetic",
    children: "_type"
)

type_parameter_declaration <- (type_parameter_declaration) => uast(
    type: "Parameter",
    roles: "Parameter",
    children: "identifier", "type_constraint"
)

type_parameter_list <- (type_parameter_list) => uast(
    type: "Parameter",
    roles: "Parameter"
)

type_spec <- (type_spec) => uast(
    type: "Synthetic",
    children: "_type", "type_identifier", "type_parameter_list"
)

type_switch_statement <- (type_switch_statement) => uast(
    type: "Switch",
    children: "_expression", "_simple_statement", "expression_list"
)

unary_expression <- (unary_expression) => uast(
    type: "Synthetic",
    children: "_expression"
)

unfolding <- (unfolding) => uast(
    type: "Synthetic",
    children: "call_expression", "composite_literal", "float_literal", "func_literal", "identifier", "imaginary_literal", "int_literal", "interpreted_string_literal", "raw_string_literal", "rune_literal", "selector_expression"
)

var_declaration <- (var_declaration) => uast(
    type: "Synthetic"
)

var_spec <- (var_spec) => uast(
    type: "Synthetic",
    children: "_type", "expression_list", "identifier"
)

variadic_argument <- (variadic_argument) => uast(
    type: "Synthetic"
)

variadic_parameter_declaration <- (variadic_parameter_declaration) => uast(
    type: "Parameter",
    roles: "Parameter",
    children: "_type", "identifier"
)

IMPORT_PRE <- (IMPORT_PRE) => uast(
    type: "Import",
    roles: "Import"
)

adt <- (adt) => uast(
    type: "Synthetic"
)

apply <- (apply) => uast(
    type: "Synthetic"
)

assert <- (assert) => uast(
    type: "Synthetic"
)

assume <- (assume) => uast(
    type: "Synthetic"
)

blank_identifier <- (blank_identifier) => uast(
    type: "If"
)

break <- (break) => uast(
    type: "Break",
    roles: "Break"
)

case <- (case) => uast(
    type: "Case",
    roles: "Branch"
)

chan <- (chan) => uast(
    type: "Synthetic"
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
)

const <- (const) => uast(
    type: "Synthetic"
)

continue <- (continue) => uast(
    type: "Continue",
    roles: "Continue"
)

decreases <- (decreases) => uast(
    type: "Synthetic"
)

default <- (default) => uast(
    type: "Synthetic"
)

defer <- (defer) => uast(
    type: "Synthetic"
)

else <- (else) => uast(
    type: "Synthetic"
)

ensures <- (ensures) => uast(
    type: "Synthetic"
)

escape_sequence <- (escape_sequence) => uast(
    type: "Synthetic"
)

exhale <- (exhale) => uast(
    type: "Synthetic"
)

exists <- (exists) => uast(
    type: "Synthetic"
)

fallthrough <- (fallthrough) => uast(
    type: "Synthetic"
)

false <- (false) => uast(
    type: "Synthetic"
)

field_identifier <- (field_identifier) => uast(
    type: "If"
)

float_literal <- (float_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

fold <- (fold) => uast(
    type: "Synthetic"
)

for <- (for) => uast(
    type: "Loop",
    roles: "Loop"
)

forall <- (forall) => uast(
    type: "Loop",
    roles: "Loop"
)

func <- (func) => uast(
    type: "Synthetic"
)

ghost <- (ghost) => uast(
    type: "Synthetic"
)

go <- (go) => uast(
    type: "Synthetic"
)

goto <- (goto) => uast(
    type: "Synthetic"
)

identifier <- (identifier) => uast(
    type: "If"
)

if <- (if) => uast(
    type: "If"
)

imaginary_literal <- (imaginary_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

implements <- (implements) => uast(
    type: "Synthetic"
)

import <- (import) => uast(
    type: "Import",
    roles: "Import"
)

in <- (in) => uast(
    type: "Synthetic"
)

inhale <- (inhale) => uast(
    type: "Synthetic"
)

initEnsures <- (initEnsures) => uast(
    type: "Synthetic"
)

int_literal <- (int_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

interface <- (interface) => uast(
    type: "Interface",
    roles: "Interface", "Declaration"
)

intersection <- (intersection) => uast(
    type: "Synthetic"
)

invariant <- (invariant) => uast(
    type: "Synthetic"
)

iota <- (iota) => uast(
    type: "Synthetic"
)

label_name <- (label_name) => uast(
    type: "Synthetic"
)

let <- (let) => uast(
    type: "Synthetic"
)

map <- (map) => uast(
    type: "Synthetic"
)

match <- (match) => uast(
    type: "Match",
    roles: "Match"
)

nil <- (nil) => uast(
    type: "Synthetic"
)

opaque <- (opaque) => uast(
    type: "Synthetic"
)

outline <- (outline) => uast(
    type: "Synthetic"
)

package <- (package) => uast(
    type: "Package",
    roles: "Module"
)

package_identifier <- (package_identifier) => uast(
    type: "If"
)

pred <- (pred) => uast(
    type: "Synthetic"
)

preserves <- (preserves) => uast(
    type: "Synthetic"
)

pure <- (pure) => uast(
    type: "Synthetic"
)

range <- (range) => uast(
    type: "Synthetic"
)

raw_string_literal <- (raw_string_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

requires <- (requires) => uast(
    type: "Synthetic"
)

return <- (return) => uast(
    type: "Return",
    roles: "Return"
)

reveal <- (reveal) => uast(
    type: "Synthetic"
)

rune_literal <- (rune_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

select <- (select) => uast(
    type: "Synthetic"
)

setminus <- (setminus) => uast(
    type: "Set"
)

struct <- (struct) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
)

subset <- (subset) => uast(
    type: "Set"
)

switch <- (switch) => uast(
    type: "Switch"
)

true <- (true) => uast(
    type: "Synthetic"
)

trusted <- (trusted) => uast(
    type: "Synthetic"
)

type <- (type) => uast(
    type: "Synthetic"
)

type_identifier <- (type_identifier) => uast(
    type: "If"
)

unfold <- (unfold) => uast(
    type: "Synthetic"
)

unfolding <- (unfolding) => uast(
    type: "Synthetic"
)

union <- (union) => uast(
    type: "Synthetic"
)

var <- (var) => uast(
    type: "Synthetic"
)

with <- (with) => uast(
    type: "Synthetic"
)

