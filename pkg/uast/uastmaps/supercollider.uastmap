argument <- (argument) => uast(
    type: "Synthetic",
    children: "collection", "identifier", "literal"
)

argument_calls <- (argument_calls) => uast(
    type: "Call",
    roles: "Call"
    children: []
)

arithmetic_series <- (arithmetic_series) => uast(
    type: "Synthetic",
    children: []
)

association <- (association) => uast(
    type: "Synthetic",
    children: []
)

associative_item <- (associative_item) => uast(
    type: "Synthetic",
    children: []
)

binary_expression <- (binary_expression) => uast(
    type: "Synthetic",
    children: "association", "binary_expression", "class", "code_block", "collection", "control_structure", "function_block", "function_call", "indexed_collection", "literal", "method_name", "nil_check", "partial", "unary_expression", "variable"
)

bool <- (bool) => uast(
    type: "Synthetic",
    children: []
)

builtin_var <- (builtin_var) => uast(
    type: "Synthetic",
    children: "currentEnvironment", "inf", "nil", "thisFunction", "thisFunctionDef", "thisMethod", "thisProcess", "thisThread", "topEnvironment"
)

case <- (case) => uast(
    type: "Case",
    roles: "Branch"
    children: "case"
)

class <- (class) => uast(
    type: "Class",
    roles: "Class", "Declaration"
    children: []
)

class_def <- (class_def) => uast(
    type: "Class",
    roles: "Class", "Declaration"
    children: []
)

classvar <- (classvar) => uast(
    type: "Class",
    roles: "Class", "Declaration"
    children: "identifier"
)

code_block <- (code_block) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

collection <- (collection) => uast(
    type: "Synthetic",
    children: []
)

collection_type <- (collection_type) => uast(
    type: "Synthetic",
    children: []
)

const <- (const) => uast(
    type: "Synthetic",
    children: "identifier"
)

control_structure <- (control_structure) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: []
)

duplicated_statement <- (duplicated_statement) => uast(
    type: "Synthetic",
    children: "association", "binary_expression", "class", "code_block", "collection", "control_structure", "function_block", "function_call", "indexed_collection", "literal", "nil_check", "partial", "unary_expression", "variable"
)

environment_var <- (environment_var) => uast(
    type: "Synthetic",
    children: "identifier"
)

for <- (for) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

forby <- (forby) => uast(
    type: "Loop",
    roles: "Loop"
    children: "forBy"
)

function_block <- (function_block) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

function_call <- (function_call) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

function_definition <- (function_definition) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: "function_block", "variable"
)

if <- (if) => uast(
    type: "If",
    children: "association", "binary_expression", "class", "code_block", "collection", "control_structure", "function_block", "function_call", "if", "indexed_collection", "literal", "nil_check", "partial", "unary_expression", "variable"
)

indexed_collection <- (indexed_collection) => uast(
    type: "Index",
    roles: "Index"
    children: "integer", "literal", "variable"
)

instance_var <- (instance_var) => uast(
    type: "Synthetic",
    children: "identifier"
)

instance_variable_setter_call <- (instance_variable_setter_call) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
    children: "method_name"
)

item <- (item) => uast(
    type: "Synthetic",
    children: []
)

line_comment <- (line_comment) => uast(
    type: "Comment",
    roles: "Comment"
    children: []
)

literal <- (literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

local_var <- (local_var) => uast(
    type: "Synthetic",
    children: "identifier"
)

method_call <- (method_call) => uast(
    type: "Method",
    roles: "Function", "Declaration", "Member"
    children: "method_name"
)

named_argument <- (named_argument) => uast(
    type: "Synthetic",
    children: "association", "binary_expression", "class", "code_block", "collection", "control_structure", "function_block", "function_call", "identifier", "indexed_collection", "literal", "nil_check", "partial", "symbol", "unary_expression", "variable"
)

nil_check <- (nil_check) => uast(
    type: "Synthetic",
    children: []
)

number <- (number) => uast(
    type: "Synthetic",
    children: []
)

parameter_call_list <- (parameter_call_list) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

parameter_list <- (parameter_list) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

parent_class <- (parent_class) => uast(
    type: "Class",
    roles: "Class", "Declaration"
    children: []
)

partial <- (partial) => uast(
    type: "Synthetic",
    children: []
)

receiver <- (receiver) => uast(
    type: "Synthetic",
    children: []
)

return_statement <- (return_statement) => uast(
    type: "Return",
    roles: "Return"
    children: []
)

source_file <- (source_file) => uast(
    type: "Synthetic",
    children: []
)

string <- (string) => uast(
    type: "Synthetic",
    children: []
)

switch <- (switch) => uast(
    type: "Switch",
    children: "switch"
)

symbol <- (symbol) => uast(
    type: "Synthetic",
    children: []
)

unary_expression <- (unary_expression) => uast(
    type: "Synthetic",
    children: "association", "binary_expression", "class", "code_block", "collection", "control_structure", "function_block", "function_call", "indexed_collection", "literal", "nil_check", "partial", "unary_expression", "variable"
)

unnamed_argument <- (unnamed_argument) => uast(
    type: "Synthetic",
    children: []
)

variable <- (variable) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
    children: []
)

variable_definition <- (variable_definition) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
    children: "association", "binary_expression", "class", "code_block", "collection", "control_structure", "function_block", "function_call", "indexed_collection", "literal", "nil_check", "partial", "unary_expression", "variable"
)

variable_definition_sequence <- (variable_definition_sequence) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
    children: []
)

while <- (while) => uast(
    type: "Loop",
    roles: "Loop"
    children: "association", "binary_expression", "class", "code_block", "collection", "control_structure", "function_block", "function_call", "indexed_collection", "literal", "nil_check", "partial", "unary_expression", "variable", "while"
)

Array <- (Array) => uast(
    type: "Synthetic",
    children: []
)

Array2D <- (Array2D) => uast(
    type: "Synthetic",
    children: []
)

ArrayedCollection <- (ArrayedCollection) => uast(
    type: "Synthetic",
    children: []
)

Bag <- (Bag) => uast(
    type: "Synthetic",
    children: []
)

Dictionary <- (Dictionary) => uast(
    type: "Dict",
    children: []
)

DoubleArray <- (DoubleArray) => uast(
    type: "Synthetic",
    children: []
)

Environment <- (Environment) => uast(
    type: "Synthetic",
    children: []
)

Event <- (Event) => uast(
    type: "Synthetic",
    children: []
)

FloatArray <- (FloatArray) => uast(
    type: "Synthetic",
    children: []
)

IdentityBag <- (IdentityBag) => uast(
    type: "Synthetic",
    children: []
)

IdentityDictionary <- (IdentityDictionary) => uast(
    type: "Dict",
    children: []
)

IdentitySet <- (IdentitySet) => uast(
    type: "Set",
    children: []
)

Int16Array <- (Int16Array) => uast(
    type: "Synthetic",
    children: []
)

Int32Array <- (Int32Array) => uast(
    type: "Synthetic",
    children: []
)

Int8Array <- (Int8Array) => uast(
    type: "Synthetic",
    children: []
)

LazyEnvir <- (LazyEnvir) => uast(
    type: "Synthetic",
    children: []
)

LinkedList <- (LinkedList) => uast(
    type: "List",
    children: []
)

List <- (List) => uast(
    type: "List",
    children: []
)

MultiLevelIdentityDictionary <- (MultiLevelIdentityDictionary) => uast(
    type: "Dict",
    children: []
)

ObjectTable <- (ObjectTable) => uast(
    type: "Synthetic",
    children: []
)

Order <- (Order) => uast(
    type: "Synthetic",
    children: []
)

OrderedIdentitySet <- (OrderedIdentitySet) => uast(
    type: "Set",
    children: []
)

Pair <- (Pair) => uast(
    type: "Synthetic",
    children: []
)

PriorityQueue <- (PriorityQueue) => uast(
    type: "Synthetic",
    children: []
)

RawArray <- (RawArray) => uast(
    type: "Synthetic",
    children: []
)

SequenceableCollection <- (SequenceableCollection) => uast(
    type: "Synthetic",
    children: []
)

Set <- (Set) => uast(
    type: "Set",
    children: []
)

Signal <- (Signal) => uast(
    type: "Synthetic",
    children: []
)

SortedList <- (SortedList) => uast(
    type: "List",
    children: []
)

SparseArray <- (SparseArray) => uast(
    type: "Synthetic",
    children: []
)

String <- (String) => uast(
    type: "Synthetic",
    children: []
)

SymbolArray <- (SymbolArray) => uast(
    type: "Synthetic",
    children: []
)

TwoWayIdentityDictionary <- (TwoWayIdentityDictionary) => uast(
    type: "Dict",
    children: []
)

_ <- (_) => uast(
    type: "Synthetic",
    children: []
)

arg <- (arg) => uast(
    type: "Synthetic",
    children: []
)

block_comment <- (block_comment) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

case <- (case) => uast(
    type: "Case",
    roles: "Branch"
    children: []
)

char <- (char) => uast(
    type: "Synthetic",
    children: []
)

class_method_name <- (class_method_name) => uast(
    type: "Method",
    roles: "Function", "Declaration", "Member"
    children: []
)

classvar <- (classvar) => uast(
    type: "Class",
    roles: "Class", "Declaration"
    children: []
)

const <- (const) => uast(
    type: "Synthetic",
    children: []
)

currentEnvironment <- (currentEnvironment) => uast(
    type: "Synthetic",
    children: []
)

escape_sequence <- (escape_sequence) => uast(
    type: "Synthetic",
    children: []
)

exponential <- (exponential) => uast(
    type: "Synthetic",
    children: []
)

false <- (false) => uast(
    type: "Synthetic",
    children: []
)

float <- (float) => uast(
    type: "Synthetic",
    children: []
)

for <- (for) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

forBy <- (forBy) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

hexinteger <- (hexinteger) => uast(
    type: "Synthetic",
    children: []
)

identifier <- (identifier) => uast(
    type: "If",
    children: []
)

if <- (if) => uast(
    type: "If",
    children: []
)

inf <- (inf) => uast(
    type: "Synthetic",
    children: []
)

instance_method_name <- (instance_method_name) => uast(
    type: "Method",
    roles: "Function", "Declaration", "Member"
    children: []
)

integer <- (integer) => uast(
    type: "Synthetic",
    children: []
)

method_name <- (method_name) => uast(
    type: "Method",
    roles: "Function", "Declaration", "Member"
    children: []
)

nil <- (nil) => uast(
    type: "Synthetic",
    children: []
)

pi <- (pi) => uast(
    type: "Synthetic",
    children: []
)

ref <- (ref) => uast(
    type: "Synthetic",
    children: []
)

switch <- (switch) => uast(
    type: "Switch",
    children: []
)

thisFunction <- (thisFunction) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

thisFunctionDef <- (thisFunctionDef) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

thisMethod <- (thisMethod) => uast(
    type: "Method",
    roles: "Function", "Declaration", "Member"
    children: []
)

thisProcess <- (thisProcess) => uast(
    type: "Synthetic",
    children: []
)

thisThread <- (thisThread) => uast(
    type: "Synthetic",
    children: []
)

topEnvironment <- (topEnvironment) => uast(
    type: "Synthetic",
    children: []
)

true <- (true) => uast(
    type: "Synthetic",
    children: []
)

var <- (var) => uast(
    type: "Synthetic",
    children: []
)

while <- (while) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

