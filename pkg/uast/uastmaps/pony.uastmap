expression <- (expression) => uast(
    type: "Synthetic",
    children: []
)

literal <- (literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

statement <- (statement) => uast(
    type: "Synthetic",
    children: []
)

type <- (type) => uast(
    type: "Synthetic",
    children: []
)

actor_definition <- (actor_definition) => uast(
    type: "Synthetic",
    children: []
)

alias_type <- (alias_type) => uast(
    type: "Synthetic",
    children: []
)

aliased_type <- (aliased_type) => uast(
    type: "Synthetic",
    children: []
)

annotation <- (annotation) => uast(
    type: "Synthetic",
    children: []
)

any_type <- (any_type) => uast(
    type: "Synthetic",
    children: []
)

arguments <- (arguments) => uast(
    type: "Synthetic",
    children: "expression"
)

array_literal <- (array_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

assignment_expression <- (assignment_expression) => uast(
    type: "Assignment",
    roles: "Assignment"
    children: []
)

base_type <- (base_type) => uast(
    type: "Synthetic",
    children: "identifier"
)

behavior <- (behavior) => uast(
    type: "Synthetic",
    children: []
)

binary_expression <- (binary_expression) => uast(
    type: "Synthetic",
    children: "and", "expression", "is", "isnt", "or", "xor"
)

block <- (block) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

boolean <- (boolean) => uast(
    type: "Synthetic",
    children: []
)

box_type <- (box_type) => uast(
    type: "Synthetic",
    children: []
)

break_statement <- (break_statement) => uast(
    type: "Break",
    roles: "Break"
    children: []
)

call_expression <- (call_expression) => uast(
    type: "Call",
    roles: "Call"
    children: "expression"
)

capability <- (capability) => uast(
    type: "Synthetic",
    children: []
)

case_statement <- (case_statement) => uast(
    type: "Case",
    roles: "Branch"
    children: []
)

cast_expression <- (cast_expression) => uast(
    type: "Cast",
    children: []
)

chain_expression <- (chain_expression) => uast(
    type: "Synthetic",
    children: []
)

character <- (character) => uast(
    type: "Synthetic",
    children: []
)

class_definition <- (class_definition) => uast(
    type: "Class",
    roles: "Class", "Declaration"
    children: []
)

compile_error <- (compile_error) => uast(
    type: "Synthetic",
    children: []
)

constructor <- (constructor) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: []
)

consume_statement <- (consume_statement) => uast(
    type: "Synthetic",
    children: []
)

continue_statement <- (continue_statement) => uast(
    type: "Continue",
    roles: "Continue"
    children: []
)

do_block <- (do_block) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

else_block <- (else_block) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

elseif_block <- (elseif_block) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

elseiftype_block <- (elseiftype_block) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

ephemeral_type <- (ephemeral_type) => uast(
    type: "Synthetic",
    children: []
)

ffi_identifier <- (ffi_identifier) => uast(
    type: "If",
    children: []
)

ffi_method <- (ffi_method) => uast(
    type: "Method",
    roles: "Function", "Declaration", "Member"
    children: "type"
)

field <- (field) => uast(
    type: "Field",
    roles: "Member"
    children: "identifier"
)

for_statement <- (for_statement) => uast(
    type: "Loop",
    roles: "Loop"
    children: "expression"
)

generic_expression <- (generic_expression) => uast(
    type: "Synthetic",
    children: []
)

generic_parameter <- (generic_parameter) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: "type"
)

generic_parameters <- (generic_parameters) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

if_block <- (if_block) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

if_statement <- (if_statement) => uast(
    type: "If",
    children: []
)

iftype_statement <- (iftype_statement) => uast(
    type: "If",
    children: []
)

interface_definition <- (interface_definition) => uast(
    type: "Interface",
    roles: "Interface", "Declaration"
    children: []
)

intersection_type <- (intersection_type) => uast(
    type: "Synthetic",
    children: []
)

iso_type <- (iso_type) => uast(
    type: "Synthetic",
    children: []
)

lambda_captures <- (lambda_captures) => uast(
    type: "Lambda",
    roles: "Lambda"
    children: []
)

lambda_expression <- (lambda_expression) => uast(
    type: "Lambda",
    roles: "Lambda"
    children: []
)

lambda_parameter <- (lambda_parameter) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: "identifier"
)

lambda_parameters <- (lambda_parameters) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

lambda_type <- (lambda_type) => uast(
    type: "Lambda",
    roles: "Lambda"
    children: "type"
)

match_statement <- (match_statement) => uast(
    type: "Match",
    roles: "Match"
    children: []
)

member_expression <- (member_expression) => uast(
    type: "Synthetic",
    children: []
)

members <- (members) => uast(
    type: "Synthetic",
    children: []
)

method <- (method) => uast(
    type: "Method",
    roles: "Function", "Declaration", "Member"
    children: "type"
)

named_argument <- (named_argument) => uast(
    type: "Synthetic",
    children: []
)

named_arguments <- (named_arguments) => uast(
    type: "Synthetic",
    children: []
)

object_literal <- (object_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

parameter <- (parameter) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: "identifier"
)

parameters <- (parameters) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

parenthesized_expression <- (parenthesized_expression) => uast(
    type: "Synthetic",
    children: []
)

partial_application <- (partial_application) => uast(
    type: "Synthetic",
    children: []
)

platform_specifier <- (platform_specifier) => uast(
    type: "If",
    children: []
)

primitive_definition <- (primitive_definition) => uast(
    type: "Synthetic",
    children: []
)

read_type <- (read_type) => uast(
    type: "Synthetic",
    children: []
)

recover_statement <- (recover_statement) => uast(
    type: "Synthetic",
    children: []
)

ref_type <- (ref_type) => uast(
    type: "Synthetic",
    children: []
)

repeat_statement <- (repeat_statement) => uast(
    type: "Synthetic",
    children: []
)

return_statement <- (return_statement) => uast(
    type: "Return",
    roles: "Return"
    children: []
)

send_type <- (send_type) => uast(
    type: "Synthetic",
    children: []
)

share_type <- (share_type) => uast(
    type: "Synthetic",
    children: []
)

source_file <- (source_file) => uast(
    type: "Synthetic",
    children: []
)

string <- (string) => uast(
    type: "Synthetic",
    children: []
)

struct_definition <- (struct_definition) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: []
)

tag_type <- (tag_type) => uast(
    type: "Synthetic",
    children: []
)

then_block <- (then_block) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

trait_definition <- (trait_definition) => uast(
    type: "Synthetic",
    children: []
)

trn_type <- (trn_type) => uast(
    type: "Synthetic",
    children: []
)

try_statement <- (try_statement) => uast(
    type: "Try",
    roles: "Try"
    children: []
)

tuple_expression <- (tuple_expression) => uast(
    type: "Tuple",
    children: []
)

tuple_type <- (tuple_type) => uast(
    type: "Tuple",
    children: []
)

type_alias <- (type_alias) => uast(
    type: "Synthetic",
    children: []
)

type_args <- (type_args) => uast(
    type: "Synthetic",
    children: []
)

type_parameters <- (type_parameters) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

unary_expression <- (unary_expression) => uast(
    type: "Synthetic",
    children: "addressof", "digestof", "expression", "not"
)

union_type <- (union_type) => uast(
    type: "Synthetic",
    children: []
)

use_statement <- (use_statement) => uast(
    type: "Synthetic",
    children: []
)

val_type <- (val_type) => uast(
    type: "Synthetic",
    children: []
)

variable_declaration <- (variable_declaration) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
    children: []
)

viewpoint_type <- (viewpoint_type) => uast(
    type: "Synthetic",
    children: []
)

while_statement <- (while_statement) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

with_elem <- (with_elem) => uast(
    type: "Synthetic",
    children: []
)

with_statement <- (with_statement) => uast(
    type: "Synthetic",
    children: []
)

actor <- (actor) => uast(
    type: "Synthetic",
    children: []
)

addressof <- (addressof) => uast(
    type: "Synthetic",
    children: []
)

and <- (and) => uast(
    type: "Synthetic",
    children: []
)

as <- (as) => uast(
    type: "Synthetic",
    children: []
)

be <- (be) => uast(
    type: "Synthetic",
    children: []
)

block_comment <- (block_comment) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

box <- (box) => uast(
    type: "Synthetic",
    children: []
)

break <- (break) => uast(
    type: "Break",
    roles: "Break"
    children: []
)

character_content <- (character_content) => uast(
    type: "Synthetic",
    children: []
)

class <- (class) => uast(
    type: "Class",
    roles: "Class", "Declaration"
    children: []
)

compile_error <- (compile_error) => uast(
    type: "Synthetic",
    children: []
)

compile_intrinsic <- (compile_intrinsic) => uast(
    type: "Synthetic",
    children: []
)

consume <- (consume) => uast(
    type: "Synthetic",
    children: []
)

continue <- (continue) => uast(
    type: "Continue",
    roles: "Continue"
    children: []
)

digestof <- (digestof) => uast(
    type: "Synthetic",
    children: []
)

do <- (do) => uast(
    type: "Synthetic",
    children: []
)

else <- (else) => uast(
    type: "Synthetic",
    children: []
)

elseif <- (elseif) => uast(
    type: "If",
    children: []
)

embed <- (embed) => uast(
    type: "Synthetic",
    children: []
)

end <- (end) => uast(
    type: "Synthetic",
    children: []
)

error <- (error) => uast(
    type: "Synthetic",
    children: []
)

escape_sequence <- (escape_sequence) => uast(
    type: "Synthetic",
    children: []
)

false <- (false) => uast(
    type: "Synthetic",
    children: []
)

float <- (float) => uast(
    type: "Synthetic",
    children: []
)

for <- (for) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

fun <- (fun) => uast(
    type: "Synthetic",
    children: []
)

identifier <- (identifier) => uast(
    type: "If",
    children: []
)

if <- (if) => uast(
    type: "If",
    children: []
)

ifdef <- (ifdef) => uast(
    type: "If",
    children: []
)

iftype <- (iftype) => uast(
    type: "If",
    children: []
)

in <- (in) => uast(
    type: "Synthetic",
    children: []
)

interface <- (interface) => uast(
    type: "Interface",
    roles: "Interface", "Declaration"
    children: []
)

is <- (is) => uast(
    type: "Synthetic",
    children: []
)

isnt <- (isnt) => uast(
    type: "Synthetic",
    children: []
)

iso <- (iso) => uast(
    type: "Synthetic",
    children: []
)

let <- (let) => uast(
    type: "Synthetic",
    children: []
)

line_comment <- (line_comment) => uast(
    type: "Comment",
    roles: "Comment"
    children: []
)

location <- (location) => uast(
    type: "Synthetic",
    children: []
)

match <- (match) => uast(
    type: "Match",
    roles: "Match"
    children: []
)

new <- (new) => uast(
    type: "Synthetic",
    children: []
)

not <- (not) => uast(
    type: "Synthetic",
    children: []
)

number <- (number) => uast(
    type: "Synthetic",
    children: []
)

object <- (object) => uast(
    type: "Synthetic",
    children: []
)

or <- (or) => uast(
    type: "Synthetic",
    children: []
)

primitive <- (primitive) => uast(
    type: "Synthetic",
    children: []
)

recover <- (recover) => uast(
    type: "Synthetic",
    children: []
)

ref <- (ref) => uast(
    type: "Synthetic",
    children: []
)

repeat <- (repeat) => uast(
    type: "Synthetic",
    children: []
)

return <- (return) => uast(
    type: "Return",
    roles: "Return"
    children: []
)

string_content <- (string_content) => uast(
    type: "Synthetic",
    children: []
)

struct <- (struct) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: []
)

tag <- (tag) => uast(
    type: "Synthetic",
    children: []
)

then <- (then) => uast(
    type: "Synthetic",
    children: []
)

this <- (this) => uast(
    type: "Synthetic",
    children: []
)

trait <- (trait) => uast(
    type: "Synthetic",
    children: []
)

trn <- (trn) => uast(
    type: "Synthetic",
    children: []
)

true <- (true) => uast(
    type: "Synthetic",
    children: []
)

try <- (try) => uast(
    type: "Try",
    roles: "Try"
    children: []
)

type <- (type) => uast(
    type: "Synthetic",
    children: []
)

until <- (until) => uast(
    type: "Synthetic",
    children: []
)

use <- (use) => uast(
    type: "Synthetic",
    children: []
)

val <- (val) => uast(
    type: "Synthetic",
    children: []
)

var <- (var) => uast(
    type: "Synthetic",
    children: []
)

where <- (where) => uast(
    type: "Synthetic",
    children: []
)

while <- (while) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

with <- (with) => uast(
    type: "Synthetic",
    children: []
)

xor <- (xor) => uast(
    type: "Synthetic",
    children: []
)

