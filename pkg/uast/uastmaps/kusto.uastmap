array <- (array) => uast(
    type: "Synthetic",
    children: []
)

assignment <- (assignment) => uast(
    type: "Assignment",
    roles: "Assignment"
    children: []
)

between_call <- (between_call) => uast(
    type: "Call",
    roles: "Call"
    children: []
)

binary_expression <- (binary_expression) => uast(
    type: "Synthetic",
    children: []
)

binary_operator <- (binary_operator) => uast(
    type: "BinaryOp",
    roles: "Operator"
    children: []
)

bool <- (bool) => uast(
    type: "Synthetic",
    children: []
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
    children: []
)

compound_expression <- (compound_expression) => uast(
    type: "Synthetic",
    children: []
)

compound_keywords <- (compound_keywords) => uast(
    type: "Synthetic",
    children: []
)

datatable <- (datatable) => uast(
    type: "Synthetic",
    children: []
)

dynamic_list <- (dynamic_list) => uast(
    type: "List",
    children: []
)

func <- (func) => uast(
    type: "Synthetic",
    children: []
)

function_arguments <- (function_arguments) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

function_call <- (function_call) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

join_operator <- (join_operator) => uast(
    type: "Synthetic",
    children: []
)

join_types <- (join_types) => uast(
    type: "Synthetic",
    children: []
)

key_value_pair <- (key_value_pair) => uast(
    type: "KeyValue",
    roles: "Key", "Value"
    children: []
)

let_statement <- (let_statement) => uast(
    type: "Synthetic",
    children: []
)

mv_apply_operator <- (mv_apply_operator) => uast(
    type: "Synthetic",
    children: []
)

object <- (object) => uast(
    type: "Synthetic",
    children: []
)

operation <- (operation) => uast(
    type: "Synthetic",
    children: []
)

operator <- (operator) => uast(
    type: "Synthetic",
    children: []
)

property_identifier <- (property_identifier) => uast(
    type: "If",
    children: []
)

property_index <- (property_index) => uast(
    type: "Property",
    roles: "Member"
    children: []
)

range_operation <- (range_operation) => uast(
    type: "Synthetic",
    children: []
)

range_operator <- (range_operator) => uast(
    type: "Synthetic",
    children: []
)

sort_by <- (sort_by) => uast(
    type: "Synthetic",
    children: []
)

sort_keyword <- (sort_keyword) => uast(
    type: "Synthetic",
    children: []
)

source <- (source) => uast(
    type: "Synthetic",
    children: []
)

source_file <- (source_file) => uast(
    type: "Synthetic",
    children: []
)

string <- (string) => uast(
    type: "Synthetic",
    children: []
)

sub_operator <- (sub_operator) => uast(
    type: "Synthetic",
    children: []
)

tabular_expression <- (tabular_expression) => uast(
    type: "Synthetic",
    children: []
)

timespan <- (timespan) => uast(
    type: "Synthetic",
    children: []
)

to_scalar_call <- (to_scalar_call) => uast(
    type: "Call",
    roles: "Call"
    children: []
)

type <- (type) => uast(
    type: "Synthetic",
    children: []
)

typed_parameter <- (typed_parameter) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

unary_expression <- (unary_expression) => uast(
    type: "Synthetic",
    children: []
)

and <- (and) => uast(
    type: "Synthetic",
    children: []
)

anti <- (anti) => uast(
    type: "Synthetic",
    children: []
)

array <- (array) => uast(
    type: "Synthetic",
    children: []
)

asc <- (asc) => uast(
    type: "Synthetic",
    children: []
)

bag_unpack <- (bag_unpack) => uast(
    type: "Synthetic",
    children: []
)

between_function <- (between_function) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

bool <- (bool) => uast(
    type: "Synthetic",
    children: []
)

by <- (by) => uast(
    type: "Synthetic",
    children: []
)

contains <- (contains) => uast(
    type: "Synthetic",
    children: []
)

d <- (d) => uast(
    type: "Synthetic",
    children: []
)

datatable_function <- (datatable_function) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

datetime <- (datetime) => uast(
    type: "Synthetic",
    children: []
)

decimal <- (decimal) => uast(
    type: "Synthetic",
    children: []
)

desc <- (desc) => uast(
    type: "Synthetic",
    children: []
)

distinct <- (distinct) => uast(
    type: "Synthetic",
    children: []
)

dynamic <- (dynamic) => uast(
    type: "Synthetic",
    children: []
)

evaluate <- (evaluate) => uast(
    type: "Synthetic",
    children: []
)

extend <- (extend) => uast(
    type: "Synthetic",
    children: []
)

false <- (false) => uast(
    type: "Synthetic",
    children: []
)

from <- (from) => uast(
    type: "Synthetic",
    children: []
)

fullouter <- (fullouter) => uast(
    type: "Synthetic",
    children: []
)

guid <- (guid) => uast(
    type: "Synthetic",
    children: []
)

h <- (h) => uast(
    type: "Synthetic",
    children: []
)

has <- (has) => uast(
    type: "Synthetic",
    children: []
)

identifier <- (identifier) => uast(
    type: "If",
    children: []
)

in <- (in) => uast(
    type: "Synthetic",
    children: []
)

inner <- (inner) => uast(
    type: "Synthetic",
    children: []
)

innerunique <- (innerunique) => uast(
    type: "Synthetic",
    children: []
)

int <- (int) => uast(
    type: "Synthetic",
    children: []
)

join <- (join) => uast(
    type: "Synthetic",
    children: []
)

kind <- (kind) => uast(
    type: "Synthetic",
    children: []
)

leftanti <- (leftanti) => uast(
    type: "Synthetic",
    children: []
)

leftantisemi <- (leftantisemi) => uast(
    type: "Synthetic",
    children: []
)

leftouter <- (leftouter) => uast(
    type: "Synthetic",
    children: []
)

leftsemi <- (leftsemi) => uast(
    type: "Synthetic",
    children: []
)

let_keyword <- (let_keyword) => uast(
    type: "Synthetic",
    children: []
)

long <- (long) => uast(
    type: "Synthetic",
    children: []
)

m <- (m) => uast(
    type: "Synthetic",
    children: []
)

ms <- (ms) => uast(
    type: "Synthetic",
    children: []
)

not <- (not) => uast(
    type: "Synthetic",
    children: []
)

ns <- (ns) => uast(
    type: "Synthetic",
    children: []
)

null <- (null) => uast(
    type: "Synthetic",
    children: []
)

number <- (number) => uast(
    type: "Synthetic",
    children: []
)

on <- (on) => uast(
    type: "Synthetic",
    children: []
)

or <- (or) => uast(
    type: "Synthetic",
    children: []
)

pipe <- (pipe) => uast(
    type: "Synthetic",
    children: []
)

project <- (project) => uast(
    type: "Synthetic",
    children: []
)

range <- (range) => uast(
    type: "Synthetic",
    children: []
)

real <- (real) => uast(
    type: "Synthetic",
    children: []
)

rightanti <- (rightanti) => uast(
    type: "Synthetic",
    children: []
)

rightantisemi <- (rightantisemi) => uast(
    type: "Synthetic",
    children: []
)

rightouter <- (rightouter) => uast(
    type: "Synthetic",
    children: []
)

s <- (s) => uast(
    type: "Synthetic",
    children: []
)

sort <- (sort) => uast(
    type: "Synthetic",
    children: []
)

startswith <- (startswith) => uast(
    type: "Synthetic",
    children: []
)

step <- (step) => uast(
    type: "Synthetic",
    children: []
)

string <- (string) => uast(
    type: "Synthetic",
    children: []
)

summarize <- (summarize) => uast(
    type: "Synthetic",
    children: []
)

timespan <- (timespan) => uast(
    type: "Synthetic",
    children: []
)

to_operator <- (to_operator) => uast(
    type: "Synthetic",
    children: []
)

to_scalar_function <- (to_scalar_function) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

true <- (true) => uast(
    type: "Synthetic",
    children: []
)

type_cast_function <- (type_cast_function) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

union <- (union) => uast(
    type: "Synthetic",
    children: []
)

us <- (us) => uast(
    type: "Synthetic",
    children: []
)

where <- (where) => uast(
    type: "Synthetic",
    children: []
)

