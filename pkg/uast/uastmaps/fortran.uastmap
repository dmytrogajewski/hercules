_argument_item <- (_argument_item) => uast(
    type: "Synthetic",
    children: []
)

_expression <- (_expression) => uast(
    type: "Synthetic",
    children: []
)

_specification_parts <- (_specification_parts) => uast(
    type: "If",
    children: []
)

_statements <- (_statements) => uast(
    type: "Synthetic",
    children: []
)

abstract_specifier <- (abstract_specifier) => uast(
    type: "If",
    children: []
)

access_specifier <- (access_specifier) => uast(
    type: "If",
    children: []
)

allocate_statement <- (allocate_statement) => uast(
    type: "Synthetic",
    children: "coarray_allocation", "derived_type_member_expression", "identifier", "intrinsic_type", "sized_allocation"
)

argument_list <- (argument_list) => uast(
    type: "List",
    children: []
)

arithmetic_if_statement <- (arithmetic_if_statement) => uast(
    type: "If",
    children: []
)

array_literal <- (array_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: "derived_type", "intrinsic_type"
)

assign_statement <- (assign_statement) => uast(
    type: "Synthetic",
    children: []
)

assignment <- (assignment) => uast(
    type: "Assignment",
    roles: "Assignment"
    children: []
)

assignment_statement <- (assignment_statement) => uast(
    type: "Assignment",
    roles: "Assignment"
    children: "_expression"
)

associate_statement <- (associate_statement) => uast(
    type: "Synthetic",
    children: []
)

association <- (association) => uast(
    type: "Synthetic",
    children: "_expression", "identifier"
)

assumed_shape <- (assumed_shape) => uast(
    type: "Synthetic",
    children: []
)

assumed_size <- (assumed_size) => uast(
    type: "Synthetic",
    children: []
)

base_type_specifier <- (base_type_specifier) => uast(
    type: "If",
    children: []
)

binary_expression <- (binary_expression) => uast(
    type: "Synthetic",
    children: "binary_expression", "call_expression", "identifier", "number_literal", "parenthesized_expression", "preproc_defined", "string_literal", "unary_expression"
)

binary_op <- (binary_op) => uast(
    type: "BinaryOp",
    roles: "Operator"
    children: []
)

bind_statement <- (bind_statement) => uast(
    type: "Synthetic",
    children: []
)

binding <- (binding) => uast(
    type: "Synthetic",
    children: []
)

binding_name <- (binding_name) => uast(
    type: "Synthetic",
    children: []
)

block_construct <- (block_construct) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: []
)

block_data <- (block_data) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

block_data_statement <- (block_data_statement) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

block_label <- (block_label) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

block_label_start_expression <- (block_label_start_expression) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

boolean_literal <- (boolean_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: "identifier", "number_literal"
)

call_expression <- (call_expression) => uast(
    type: "Call",
    roles: "Call"
    children: "argument_list", "identifier"
)

case_statement <- (case_statement) => uast(
    type: "Case",
    roles: "Branch"
    children: []
)

case_value_range_list <- (case_value_range_list) => uast(
    type: "Case",
    roles: "Branch"
    children: []
)

character_length <- (character_length) => uast(
    type: "Synthetic",
    children: []
)

close_statement <- (close_statement) => uast(
    type: "Synthetic",
    children: []
)

coarray_allocation <- (coarray_allocation) => uast(
    type: "Synthetic",
    children: []
)

coarray_critical_statement <- (coarray_critical_statement) => uast(
    type: "Synthetic",
    children: []
)

coarray_declarator <- (coarray_declarator) => uast(
    type: "Synthetic",
    children: []
)

coarray_expression <- (coarray_expression) => uast(
    type: "Synthetic",
    children: []
)

coarray_index <- (coarray_index) => uast(
    type: "Index",
    roles: "Index"
    children: []
)

coarray_size <- (coarray_size) => uast(
    type: "Synthetic",
    children: []
)

coarray_statement <- (coarray_statement) => uast(
    type: "Synthetic",
    children: []
)

coarray_team_statement <- (coarray_team_statement) => uast(
    type: "Synthetic",
    children: []
)

common_block <- (common_block) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

common_statement <- (common_statement) => uast(
    type: "Synthetic",
    children: []
)

complex_literal <- (complex_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

concatenation_expression <- (concatenation_expression) => uast(
    type: "Synthetic",
    children: "_expression"
)

concurrent_control <- (concurrent_control) => uast(
    type: "Synthetic",
    children: "_expression"
)

concurrent_header <- (concurrent_header) => uast(
    type: "Synthetic",
    children: "intrinsic_type"
)

concurrent_locality <- (concurrent_locality) => uast(
    type: "Synthetic",
    children: []
)

concurrent_statement <- (concurrent_statement) => uast(
    type: "Synthetic",
    children: []
)

conditional_expression <- (conditional_expression) => uast(
    type: "Synthetic",
    children: "_expression", "nil_literal"
)

contains_statement <- (contains_statement) => uast(
    type: "Synthetic",
    children: []
)

cray_pointer_declaration <- (cray_pointer_declaration) => uast(
    type: "Synthetic",
    children: []
)

cray_pointer_pair <- (cray_pointer_pair) => uast(
    type: "Synthetic",
    children: "coarray_declarator", "identifier", "sized_declarator"
)

cuda_kernel_argument_list <- (cuda_kernel_argument_list) => uast(
    type: "List",
    children: []
)

data_declarator <- (data_declarator) => uast(
    type: "Synthetic",
    children: "coarray_declarator", "data_value", "identifier", "sized_declarator"
)

data_set <- (data_set) => uast(
    type: "Set",
    children: []
)

data_statement <- (data_statement) => uast(
    type: "Synthetic",
    children: []
)

data_value <- (data_value) => uast(
    type: "Synthetic",
    children: "number_literal"
)

deallocate_statement <- (deallocate_statement) => uast(
    type: "Synthetic",
    children: []
)

declared_type <- (declared_type) => uast(
    type: "Synthetic",
    children: "derived_type_member_expression", "identifier"
)

default <- (default) => uast(
    type: "Synthetic",
    children: []
)

defined_io_procedure <- (defined_io_procedure) => uast(
    type: "Synthetic",
    children: []
)

derived_type <- (derived_type) => uast(
    type: "Synthetic",
    children: "intrinsic_type", "kind", "type_name"
)

derived_type_definition <- (derived_type_definition) => uast(
    type: "Synthetic",
    children: []
)

derived_type_member_expression <- (derived_type_member_expression) => uast(
    type: "Synthetic",
    children: []
)

derived_type_parameter_list <- (derived_type_parameter_list) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

derived_type_procedures <- (derived_type_procedures) => uast(
    type: "Synthetic",
    children: []
)

derived_type_statement <- (derived_type_statement) => uast(
    type: "Synthetic",
    children: "access_specifier", "base_type_specifier"
)

do_label_statement <- (do_label_statement) => uast(
    type: "Synthetic",
    children: []
)

do_loop_statement <- (do_loop_statement) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

edit_descriptor <- (edit_descriptor) => uast(
    type: "Synthetic",
    children: []
)

else_clause <- (else_clause) => uast(
    type: "Synthetic",
    children: []
)

elseif_clause <- (elseif_clause) => uast(
    type: "If",
    children: []
)

elsewhere_clause <- (elsewhere_clause) => uast(
    type: "Synthetic",
    children: []
)

end_associate_statement <- (end_associate_statement) => uast(
    type: "Synthetic",
    children: []
)

end_block_construct_statement <- (end_block_construct_statement) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
    children: []
)

end_block_data_statement <- (end_block_data_statement) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

end_coarray_critical_statement <- (end_coarray_critical_statement) => uast(
    type: "Synthetic",
    children: []
)

end_coarray_team_statement <- (end_coarray_team_statement) => uast(
    type: "Synthetic",
    children: []
)

end_do_label_statement <- (end_do_label_statement) => uast(
    type: "Synthetic",
    children: []
)

end_do_loop_statement <- (end_do_loop_statement) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

end_enum_statement <- (end_enum_statement) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
    children: []
)

end_enumeration_type_statement <- (end_enumeration_type_statement) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
    children: []
)

end_forall_statement <- (end_forall_statement) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

end_function_statement <- (end_function_statement) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

end_if_statement <- (end_if_statement) => uast(
    type: "If",
    children: []
)

end_interface_statement <- (end_interface_statement) => uast(
    type: "Interface",
    roles: "Interface", "Declaration"
    children: []
)

end_module_procedure_statement <- (end_module_procedure_statement) => uast(
    type: "Module",
    roles: "Module"
    children: []
)

end_module_statement <- (end_module_statement) => uast(
    type: "Module",
    roles: "Module"
    children: []
)

end_program_statement <- (end_program_statement) => uast(
    type: "Synthetic",
    children: []
)

end_select_statement <- (end_select_statement) => uast(
    type: "Synthetic",
    children: []
)

end_submodule_statement <- (end_submodule_statement) => uast(
    type: "Module",
    roles: "Module"
    children: []
)

end_subroutine_statement <- (end_subroutine_statement) => uast(
    type: "Synthetic",
    children: []
)

end_type_statement <- (end_type_statement) => uast(
    type: "Synthetic",
    children: []
)

end_where_statement <- (end_where_statement) => uast(
    type: "Synthetic",
    children: []
)

entry_statement <- (entry_statement) => uast(
    type: "Try",
    roles: "Try"
    children: "name", "parameters"
)

enum <- (enum) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
    children: []
)

enum_statement <- (enum_statement) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
    children: []
)

enumeration_type <- (enumeration_type) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
    children: []
)

enumeration_type_statement <- (enumeration_type_statement) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
    children: []
)

enumerator_statement <- (enumerator_statement) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
    children: "identifier", "init_declarator"
)

equivalence_set <- (equivalence_set) => uast(
    type: "Set",
    children: []
)

equivalence_statement <- (equivalence_statement) => uast(
    type: "Synthetic",
    children: []
)

extent_specifier <- (extent_specifier) => uast(
    type: "If",
    children: []
)

file_position_statement <- (file_position_statement) => uast(
    type: "Synthetic",
    children: []
)

filename <- (filename) => uast(
    type: "Synthetic",
    children: "identifier", "number_literal"
)

forall_statement <- (forall_statement) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

format_identifier <- (format_identifier) => uast(
    type: "If",
    children: []
)

format_statement <- (format_statement) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

function <- (function) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

function_result <- (function_result) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

function_statement <- (function_statement) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: "derived_type", "intrinsic_type", "name", "parameters"
)

identifier <- (identifier) => uast(
    type: "If",
    children: []
)

if_statement <- (if_statement) => uast(
    type: "If",
    children: []
)

implicit_range <- (implicit_range) => uast(
    type: "Synthetic",
    children: []
)

implicit_statement <- (implicit_statement) => uast(
    type: "Synthetic",
    children: []
)

implied_do_loop_expression <- (implied_do_loop_expression) => uast(
    type: "Loop",
    roles: "Loop"
    children: "intrinsic_type"
)

import_statement <- (import_statement) => uast(
    type: "Import",
    roles: "Import"
    children: []
)

include_statement <- (include_statement) => uast(
    type: "Synthetic",
    children: "filename"
)

included_items <- (included_items) => uast(
    type: "Synthetic",
    children: []
)

init_declarator <- (init_declarator) => uast(
    type: "Synthetic",
    children: "_expression", "coarray_declarator", "identifier", "sized_declarator"
)

input_item_list <- (input_item_list) => uast(
    type: "List",
    children: []
)

inquire_statement <- (inquire_statement) => uast(
    type: "Synthetic",
    children: []
)

interface <- (interface) => uast(
    type: "Interface",
    roles: "Interface", "Declaration"
    children: []
)

interface_statement <- (interface_statement) => uast(
    type: "Interface",
    roles: "Interface", "Declaration"
    children: []
)

internal_procedures <- (internal_procedures) => uast(
    type: "Synthetic",
    children: []
)

intrinsic_type <- (intrinsic_type) => uast(
    type: "Synthetic",
    children: "kind"
)

keyword_argument <- (keyword_argument) => uast(
    type: "Synthetic",
    children: "_expression", "assumed_shape", "assumed_size", "identifier"
)

keyword_statement <- (keyword_statement) => uast(
    type: "Synthetic",
    children: []
)

kind <- (kind) => uast(
    type: "Synthetic",
    children: []
)

label <- (label) => uast(
    type: "Synthetic",
    children: []
)

language_binding <- (language_binding) => uast(
    type: "Synthetic",
    children: []
)

local_name <- (local_name) => uast(
    type: "Synthetic",
    children: []
)

logical_expression <- (logical_expression) => uast(
    type: "Synthetic",
    children: "_expression"
)

loop_control_expression <- (loop_control_expression) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

math_expression <- (math_expression) => uast(
    type: "Synthetic",
    children: "_expression", "user_defined_operator"
)

method_name <- (method_name) => uast(
    type: "Method",
    roles: "Function", "Declaration", "Member"
    children: []
)

module <- (module) => uast(
    type: "Module",
    roles: "Module"
    children: []
)

module_name <- (module_name) => uast(
    type: "Module",
    roles: "Module"
    children: []
)

module_procedure <- (module_procedure) => uast(
    type: "Module",
    roles: "Module"
    children: []
)

module_procedure_statement <- (module_procedure_statement) => uast(
    type: "Module",
    roles: "Module"
    children: "derived_type", "intrinsic_type", "name"
)

module_statement <- (module_statement) => uast(
    type: "Module",
    roles: "Module"
    children: []
)

multiple_subscript <- (multiple_subscript) => uast(
    type: "Synthetic",
    children: []
)

multiple_subscript_triplet <- (multiple_subscript_triplet) => uast(
    type: "Synthetic",
    children: []
)

name <- (name) => uast(
    type: "Synthetic",
    children: []
)

namelist_statement <- (namelist_statement) => uast(
    type: "List",
    children: []
)

nil_literal <- (nil_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: []
)

null_literal <- (null_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: "derived_type_member_expression", "identifier"
)

nullify_statement <- (nullify_statement) => uast(
    type: "If",
    children: []
)

number_literal <- (number_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: "identifier", "number_literal"
)

open_statement <- (open_statement) => uast(
    type: "Synthetic",
    children: []
)

operator <- (operator) => uast(
    type: "Synthetic",
    children: []
)

output_item_list <- (output_item_list) => uast(
    type: "List",
    children: []
)

parameter_assignment <- (parameter_assignment) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

parameter_statement <- (parameter_statement) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

parameters <- (parameters) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

parenthesized_expression <- (parenthesized_expression) => uast(
    type: "Synthetic",
    children: []
)

pointer_association_statement <- (pointer_association_statement) => uast(
    type: "Synthetic",
    children: []
)

pointer_init_declarator <- (pointer_init_declarator) => uast(
    type: "Synthetic",
    children: "_expression", "coarray_declarator", "identifier", "sized_declarator"
)

preproc_call <- (preproc_call) => uast(
    type: "Call",
    roles: "Call"
    children: "preproc_arg", "preproc_directive"
)

preproc_def <- (preproc_def) => uast(
    type: "Synthetic",
    children: "identifier", "preproc_arg"
)

preproc_defined <- (preproc_defined) => uast(
    type: "Synthetic",
    children: []
)

preproc_elif <- (preproc_elif) => uast(
    type: "If",
    children: "binary_expression", "call_expression", "identifier", "number_literal", "parenthesized_expression", "preproc_defined", "preproc_elif", "preproc_elifdef", "preproc_else", "string_literal", "unary_expression"
)

preproc_elifdef <- (preproc_elifdef) => uast(
    type: "If",
    children: "identifier", "preproc_elif", "preproc_elifdef", "preproc_else"
)

preproc_else <- (preproc_else) => uast(
    type: "Synthetic",
    children: []
)

preproc_function_def <- (preproc_function_def) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: "identifier", "preproc_arg", "preproc_params"
)

preproc_if <- (preproc_if) => uast(
    type: "If",
    children: "binary_expression", "call_expression", "identifier", "number_literal", "parenthesized_expression", "preproc_defined", "preproc_elif", "preproc_elifdef", "preproc_else", "string_literal", "unary_expression"
)

preproc_ifdef <- (preproc_ifdef) => uast(
    type: "If",
    children: "identifier", "preproc_elif", "preproc_elifdef", "preproc_else"
)

preproc_include <- (preproc_include) => uast(
    type: "Synthetic",
    children: "call_expression", "identifier", "string_literal", "system_lib_string"
)

preproc_params <- (preproc_params) => uast(
    type: "Synthetic",
    children: []
)

print_statement <- (print_statement) => uast(
    type: "Synthetic",
    children: []
)

private_statement <- (private_statement) => uast(
    type: "Synthetic",
    children: []
)

procedure <- (procedure) => uast(
    type: "Synthetic",
    children: []
)

procedure_attribute <- (procedure_attribute) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: []
)

procedure_attributes <- (procedure_attributes) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: []
)

procedure_interface <- (procedure_interface) => uast(
    type: "Interface",
    roles: "Interface", "Declaration"
    children: []
)

procedure_kind <- (procedure_kind) => uast(
    type: "Synthetic",
    children: []
)

procedure_qualifier <- (procedure_qualifier) => uast(
    type: "If",
    children: []
)

procedure_statement <- (procedure_statement) => uast(
    type: "Synthetic",
    children: "binding", "method_name"
)

program <- (program) => uast(
    type: "Synthetic",
    children: []
)

program_statement <- (program_statement) => uast(
    type: "Synthetic",
    children: []
)

public_statement <- (public_statement) => uast(
    type: "Synthetic",
    children: []
)

rank_statement <- (rank_statement) => uast(
    type: "Synthetic",
    children: []
)

read_statement <- (read_statement) => uast(
    type: "Synthetic",
    children: []
)

relational_expression <- (relational_expression) => uast(
    type: "Synthetic",
    children: "_expression"
)

save_statement <- (save_statement) => uast(
    type: "Synthetic",
    children: []
)

select_case_statement <- (select_case_statement) => uast(
    type: "Case",
    roles: "Branch"
    children: []
)

select_rank_statement <- (select_rank_statement) => uast(
    type: "Synthetic",
    children: []
)

select_type_statement <- (select_type_statement) => uast(
    type: "Synthetic",
    children: []
)

selector <- (selector) => uast(
    type: "Synthetic",
    children: []
)

size <- (size) => uast(
    type: "Synthetic",
    children: []
)

sized_allocation <- (sized_allocation) => uast(
    type: "Synthetic",
    children: []
)

sized_declarator <- (sized_declarator) => uast(
    type: "Synthetic",
    children: []
)

statement_label <- (statement_label) => uast(
    type: "Synthetic",
    children: []
)

statement_label_reference <- (statement_label_reference) => uast(
    type: "Synthetic",
    children: []
)

stop_statement <- (stop_statement) => uast(
    type: "Synthetic",
    children: []
)

string_literal <- (string_literal) => uast(
    type: "Literal",
    roles: "Literal"
    children: "identifier", "number_literal"
)

submodule <- (submodule) => uast(
    type: "Module",
    roles: "Module"
    children: []
)

submodule_statement <- (submodule_statement) => uast(
    type: "Module",
    roles: "Module"
    children: "module_name"
)

subroutine <- (subroutine) => uast(
    type: "Synthetic",
    children: []
)

subroutine_call <- (subroutine_call) => uast(
    type: "Call",
    roles: "Call"
    children: "_expression"
)

subroutine_statement <- (subroutine_statement) => uast(
    type: "Synthetic",
    children: "derived_type", "intrinsic_type", "name", "parameters"
)

transfer_items <- (transfer_items) => uast(
    type: "Synthetic",
    children: []
)

translation_unit <- (translation_unit) => uast(
    type: "Synthetic",
    children: []
)

triplet_spec <- (triplet_spec) => uast(
    type: "Synthetic",
    children: []
)

type_member <- (type_member) => uast(
    type: "Synthetic",
    children: []
)

type_name <- (type_name) => uast(
    type: "Synthetic",
    children: []
)

type_qualifier <- (type_qualifier) => uast(
    type: "If",
    children: "kind", "len"
)

type_statement <- (type_statement) => uast(
    type: "Synthetic",
    children: "identifier", "intrinsic_type"
)

unary_expression <- (unary_expression) => uast(
    type: "Synthetic",
    children: "_expression", "binary_expression", "preproc_defined", "user_defined_operator"
)

unit_identifier <- (unit_identifier) => uast(
    type: "If",
    children: []
)

unlimited_polymorphic <- (unlimited_polymorphic) => uast(
    type: "Synthetic",
    children: []
)

use_alias <- (use_alias) => uast(
    type: "Synthetic",
    children: []
)

use_statement <- (use_statement) => uast(
    type: "Synthetic",
    children: []
)

user_defined_operator <- (user_defined_operator) => uast(
    type: "Synthetic",
    children: []
)

variable_attributes <- (variable_attributes) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
    children: []
)

variable_declaration <- (variable_declaration) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
    children: "coarray_declarator", "data_declarator", "declared_type", "derived_type", "identifier", "init_declarator", "intrinsic_type", "language_binding", "pointer_init_declarator", "procedure", "sized_declarator", "type_qualifier"
)

variable_group <- (variable_group) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
    children: []
)

variable_modification <- (variable_modification) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
    children: "coarray_declarator", "identifier", "sized_declarator"
)

where_statement <- (where_statement) => uast(
    type: "Synthetic",
    children: []
)

while_statement <- (while_statement) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

write_statement <- (write_statement) => uast(
    type: "Synthetic",
    children: []
)

_ <- (_) => uast(
    type: "Synthetic",
    children: []
)

abstract <- (abstract) => uast(
    type: "Synthetic",
    children: []
)

all <- (all) => uast(
    type: "Synthetic",
    children: []
)

allocatable <- (allocatable) => uast(
    type: "Synthetic",
    children: []
)

allocate <- (allocate) => uast(
    type: "Synthetic",
    children: []
)

assign <- (assign) => uast(
    type: "Synthetic",
    children: []
)

assignment <- (assignment) => uast(
    type: "Assignment",
    roles: "Assignment"
    children: []
)

associate <- (associate) => uast(
    type: "Synthetic",
    children: []
)

assumed_rank <- (assumed_rank) => uast(
    type: "Synthetic",
    children: []
)

asynchronous <- (asynchronous) => uast(
    type: "Synthetic",
    children: []
)

attributes <- (attributes) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: []
)

automatic <- (automatic) => uast(
    type: "Synthetic",
    children: []
)

backspace <- (backspace) => uast(
    type: "Synthetic",
    children: []
)

bind <- (bind) => uast(
    type: "Synthetic",
    children: []
)

block <- (block) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

blockdata <- (blockdata) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

byte <- (byte) => uast(
    type: "Synthetic",
    children: []
)

call <- (call) => uast(
    type: "Call",
    roles: "Call"
    children: []
)

case <- (case) => uast(
    type: "Case",
    roles: "Branch"
    children: []
)

change <- (change) => uast(
    type: "Synthetic",
    children: []
)

character <- (character) => uast(
    type: "Synthetic",
    children: []
)

class <- (class) => uast(
    type: "Class",
    roles: "Class", "Declaration"
    children: []
)

classis <- (classis) => uast(
    type: "Class",
    roles: "Class", "Declaration"
    children: []
)

classof <- (classof) => uast(
    type: "Class",
    roles: "Class", "Declaration"
    children: []
)

close <- (close) => uast(
    type: "Synthetic",
    children: []
)

codimension <- (codimension) => uast(
    type: "Synthetic",
    children: []
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
    children: []
)

common <- (common) => uast(
    type: "Synthetic",
    children: []
)

complex <- (complex) => uast(
    type: "Synthetic",
    children: []
)

concurrent <- (concurrent) => uast(
    type: "Synthetic",
    children: []
)

constant <- (constant) => uast(
    type: "Synthetic",
    children: []
)

contains <- (contains) => uast(
    type: "Synthetic",
    children: []
)

contiguous <- (contiguous) => uast(
    type: "Synthetic",
    children: []
)

continue <- (continue) => uast(
    type: "Continue",
    roles: "Continue"
    children: []
)

critical <- (critical) => uast(
    type: "Synthetic",
    children: []
)

cycle <- (cycle) => uast(
    type: "Synthetic",
    children: []
)

data <- (data) => uast(
    type: "Synthetic",
    children: []
)

deallocate <- (deallocate) => uast(
    type: "Synthetic",
    children: []
)

default <- (default) => uast(
    type: "Synthetic",
    children: []
)

deferred <- (deferred) => uast(
    type: "Synthetic",
    children: []
)

defined <- (defined) => uast(
    type: "Synthetic",
    children: []
)

device <- (device) => uast(
    type: "Synthetic",
    children: []
)

dimension <- (dimension) => uast(
    type: "Synthetic",
    children: []
)

do <- (do) => uast(
    type: "Synthetic",
    children: []
)

double <- (double) => uast(
    type: "Synthetic",
    children: []
)

doublecomplex <- (doublecomplex) => uast(
    type: "Synthetic",
    children: []
)

doubleprecision <- (doubleprecision) => uast(
    type: "Synthetic",
    children: []
)

elemental <- (elemental) => uast(
    type: "Synthetic",
    children: []
)

else <- (else) => uast(
    type: "Synthetic",
    children: []
)

elseif <- (elseif) => uast(
    type: "If",
    children: []
)

elsewhere <- (elsewhere) => uast(
    type: "Synthetic",
    children: []
)

end <- (end) => uast(
    type: "Synthetic",
    children: []
)

endassociate <- (endassociate) => uast(
    type: "Synthetic",
    children: []
)

endblock <- (endblock) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

endblockdata <- (endblockdata) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

endcritical <- (endcritical) => uast(
    type: "Synthetic",
    children: []
)

enddo <- (enddo) => uast(
    type: "Synthetic",
    children: []
)

endenum <- (endenum) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
    children: []
)

endfile <- (endfile) => uast(
    type: "Synthetic",
    children: []
)

endforall <- (endforall) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

endfunction <- (endfunction) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

endif <- (endif) => uast(
    type: "If",
    children: []
)

endinterface <- (endinterface) => uast(
    type: "Interface",
    roles: "Interface", "Declaration"
    children: []
)

endmodule <- (endmodule) => uast(
    type: "Module",
    roles: "Module"
    children: []
)

endprocedure <- (endprocedure) => uast(
    type: "Synthetic",
    children: []
)

endprogram <- (endprogram) => uast(
    type: "Synthetic",
    children: []
)

endselect <- (endselect) => uast(
    type: "Synthetic",
    children: []
)

endsubmodule <- (endsubmodule) => uast(
    type: "Module",
    roles: "Module"
    children: []
)

endsubroutine <- (endsubroutine) => uast(
    type: "Synthetic",
    children: []
)

endteam <- (endteam) => uast(
    type: "Synthetic",
    children: []
)

endtype <- (endtype) => uast(
    type: "Synthetic",
    children: []
)

endwhere <- (endwhere) => uast(
    type: "Synthetic",
    children: []
)

entry <- (entry) => uast(
    type: "Try",
    roles: "Try"
    children: []
)

enum <- (enum) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
    children: []
)

enumeration <- (enumeration) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
    children: []
)

enumerator <- (enumerator) => uast(
    type: "Enum",
    roles: "Enum", "Declaration"
    children: []
)

equivalence <- (equivalence) => uast(
    type: "Synthetic",
    children: []
)

error <- (error) => uast(
    type: "Synthetic",
    children: []
)

event <- (event) => uast(
    type: "Synthetic",
    children: []
)

exit <- (exit) => uast(
    type: "Synthetic",
    children: []
)

extends <- (extends) => uast(
    type: "Synthetic",
    children: []
)

external <- (external) => uast(
    type: "Synthetic",
    children: []
)

fail <- (fail) => uast(
    type: "Synthetic",
    children: []
)

family <- (family) => uast(
    type: "Synthetic",
    children: []
)

final <- (final) => uast(
    type: "Synthetic",
    children: []
)

flush <- (flush) => uast(
    type: "Synthetic",
    children: []
)

fmt <- (fmt) => uast(
    type: "Synthetic",
    children: []
)

forall <- (forall) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

form <- (form) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

format <- (format) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

formatted <- (formatted) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

function <- (function) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

generic <- (generic) => uast(
    type: "Synthetic",
    children: []
)

global <- (global) => uast(
    type: "Synthetic",
    children: []
)

go <- (go) => uast(
    type: "Synthetic",
    children: []
)

goto <- (goto) => uast(
    type: "Synthetic",
    children: []
)

grid_global <- (grid_global) => uast(
    type: "Synthetic",
    children: []
)

hollerith_constant <- (hollerith_constant) => uast(
    type: "Synthetic",
    children: []
)

host <- (host) => uast(
    type: "Synthetic",
    children: []
)

if <- (if) => uast(
    type: "If",
    children: []
)

image <- (image) => uast(
    type: "Synthetic",
    children: []
)

images <- (images) => uast(
    type: "Synthetic",
    children: []
)

implicit <- (implicit) => uast(
    type: "Synthetic",
    children: []
)

import <- (import) => uast(
    type: "Import",
    roles: "Import"
    children: []
)

impure <- (impure) => uast(
    type: "Synthetic",
    children: []
)

in <- (in) => uast(
    type: "Synthetic",
    children: []
)

include <- (include) => uast(
    type: "Synthetic",
    children: []
)

initial <- (initial) => uast(
    type: "Synthetic",
    children: []
)

inout <- (inout) => uast(
    type: "Synthetic",
    children: []
)

inquire <- (inquire) => uast(
    type: "Synthetic",
    children: []
)

integer <- (integer) => uast(
    type: "Synthetic",
    children: []
)

intent <- (intent) => uast(
    type: "Synthetic",
    children: []
)

interface <- (interface) => uast(
    type: "Interface",
    roles: "Interface", "Declaration"
    children: []
)

intrinsic <- (intrinsic) => uast(
    type: "Synthetic",
    children: []
)

is <- (is) => uast(
    type: "Synthetic",
    children: []
)

kind <- (kind) => uast(
    type: "Synthetic",
    children: []
)

len <- (len) => uast(
    type: "Synthetic",
    children: []
)

local <- (local) => uast(
    type: "Synthetic",
    children: []
)

local_init <- (local_init) => uast(
    type: "Synthetic",
    children: []
)

lock <- (lock) => uast(
    type: "Synthetic",
    children: []
)

logical <- (logical) => uast(
    type: "Synthetic",
    children: []
)

managed <- (managed) => uast(
    type: "Synthetic",
    children: []
)

memory <- (memory) => uast(
    type: "Synthetic",
    children: []
)

module <- (module) => uast(
    type: "Module",
    roles: "Module"
    children: []
)

namelist <- (namelist) => uast(
    type: "List",
    children: []
)

non_intrinsic <- (non_intrinsic) => uast(
    type: "Synthetic",
    children: []
)

non_overridable <- (non_overridable) => uast(
    type: "Synthetic",
    children: []
)

none <- (none) => uast(
    type: "Synthetic",
    children: []
)

none <- (none) => uast(
    type: "Synthetic",
    children: []
)

nopass <- (nopass) => uast(
    type: "Synthetic",
    children: []
)

notify <- (notify) => uast(
    type: "If",
    children: []
)

null <- (null) => uast(
    type: "Synthetic",
    children: []
)

nullify <- (nullify) => uast(
    type: "If",
    children: []
)

only <- (only) => uast(
    type: "Synthetic",
    children: []
)

open <- (open) => uast(
    type: "Synthetic",
    children: []
)

operator <- (operator) => uast(
    type: "Synthetic",
    children: []
)

operator_name <- (operator_name) => uast(
    type: "Synthetic",
    children: []
)

optional <- (optional) => uast(
    type: "Synthetic",
    children: []
)

out <- (out) => uast(
    type: "Synthetic",
    children: []
)

parameter <- (parameter) => uast(
    type: "Parameter",
    roles: "Parameter"
    children: []
)

pass <- (pass) => uast(
    type: "Synthetic",
    children: []
)

pause <- (pause) => uast(
    type: "Synthetic",
    children: []
)

pinned <- (pinned) => uast(
    type: "Synthetic",
    children: []
)

pointer <- (pointer) => uast(
    type: "Synthetic",
    children: []
)

post <- (post) => uast(
    type: "Synthetic",
    children: []
)

precision <- (precision) => uast(
    type: "Synthetic",
    children: []
)

preproc_arg <- (preproc_arg) => uast(
    type: "Synthetic",
    children: []
)

preproc_comment <- (preproc_comment) => uast(
    type: "Comment",
    roles: "Comment"
    children: []
)

preproc_directive <- (preproc_directive) => uast(
    type: "Synthetic",
    children: []
)

print <- (print) => uast(
    type: "Synthetic",
    children: []
)

private <- (private) => uast(
    type: "Synthetic",
    children: []
)

procedure <- (procedure) => uast(
    type: "Synthetic",
    children: []
)

program <- (program) => uast(
    type: "Synthetic",
    children: []
)

property <- (property) => uast(
    type: "Property",
    roles: "Member"
    children: []
)

protected <- (protected) => uast(
    type: "Synthetic",
    children: []
)

public <- (public) => uast(
    type: "Synthetic",
    children: []
)

pure <- (pure) => uast(
    type: "Synthetic",
    children: []
)

quiet <- (quiet) => uast(
    type: "Synthetic",
    children: []
)

rank <- (rank) => uast(
    type: "Synthetic",
    children: []
)

read <- (read) => uast(
    type: "Synthetic",
    children: []
)

real <- (real) => uast(
    type: "Synthetic",
    children: []
)

recursive <- (recursive) => uast(
    type: "Synthetic",
    children: []
)

reduce <- (reduce) => uast(
    type: "Synthetic",
    children: []
)

result <- (result) => uast(
    type: "Synthetic",
    children: []
)

return <- (return) => uast(
    type: "Return",
    roles: "Return"
    children: []
)

rewind <- (rewind) => uast(
    type: "Synthetic",
    children: []
)

save <- (save) => uast(
    type: "Synthetic",
    children: []
)

select <- (select) => uast(
    type: "Synthetic",
    children: []
)

selectcase <- (selectcase) => uast(
    type: "Case",
    roles: "Branch"
    children: []
)

selectrank <- (selectrank) => uast(
    type: "Synthetic",
    children: []
)

selecttype <- (selecttype) => uast(
    type: "Synthetic",
    children: []
)

sequence <- (sequence) => uast(
    type: "Synthetic",
    children: []
)

sequence_statement <- (sequence_statement) => uast(
    type: "Synthetic",
    children: []
)

shared <- (shared) => uast(
    type: "Synthetic",
    children: []
)

simple <- (simple) => uast(
    type: "Synthetic",
    children: []
)

statement_label <- (statement_label) => uast(
    type: "Synthetic",
    children: []
)

static <- (static) => uast(
    type: "Synthetic",
    children: []
)

stop <- (stop) => uast(
    type: "Synthetic",
    children: []
)

submodule <- (submodule) => uast(
    type: "Module",
    roles: "Module"
    children: []
)

subroutine <- (subroutine) => uast(
    type: "Synthetic",
    children: []
)

sync <- (sync) => uast(
    type: "Synthetic",
    children: []
)

system_lib_string <- (system_lib_string) => uast(
    type: "Synthetic",
    children: []
)

target <- (target) => uast(
    type: "Synthetic",
    children: []
)

team <- (team) => uast(
    type: "Synthetic",
    children: []
)

texture <- (texture) => uast(
    type: "Synthetic",
    children: []
)

then <- (then) => uast(
    type: "Synthetic",
    children: []
)

to <- (to) => uast(
    type: "Synthetic",
    children: []
)

type <- (type) => uast(
    type: "Synthetic",
    children: []
)

typeis <- (typeis) => uast(
    type: "Synthetic",
    children: []
)

typeof <- (typeof) => uast(
    type: "Synthetic",
    children: []
)

unformatted <- (unformatted) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

unit <- (unit) => uast(
    type: "Synthetic",
    children: []
)

unlock <- (unlock) => uast(
    type: "Synthetic",
    children: []
)

use <- (use) => uast(
    type: "Synthetic",
    children: []
)

value <- (value) => uast(
    type: "Synthetic",
    children: []
)

volatile <- (volatile) => uast(
    type: "Synthetic",
    children: []
)

wait <- (wait) => uast(
    type: "Synthetic",
    children: []
)

where <- (where) => uast(
    type: "Synthetic",
    children: []
)

while <- (while) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

write <- (write) => uast(
    type: "Synthetic",
    children: []
)

