braced_list <- (braced_list) => uast(
    type: "List"
)

catch <- (catch) => uast(
    type: "Catch",
    roles: "Catch",
    children: "identifier"
)

chunk <- (chunk) => uast(
    type: "Synthetic"
)

command <- (command) => uast(
    type: "Synthetic",
    children: "bareword", "braced_list", "exception_capture", "identifier", "indexing", "lambda", "list", "map", "number", "option", "output_capture", "string", "variable", "wildcard"
)

elif <- (elif) => uast(
    type: "If",
    children: "bareword", "braced_list", "exception_capture", "indexing", "lambda", "list", "map", "number", "output_capture", "string", "variable", "wildcard"
)

else <- (else) => uast(
    type: "Synthetic"
)

exception_capture <- (exception_capture) => uast(
    type: "Synthetic"
)

finally <- (finally) => uast(
    type: "Finally",
    roles: "Finally"
)

for <- (for) => uast(
    type: "Loop",
    roles: "Loop",
    children: "bareword", "braced_list", "exception_capture", "identifier", "indexing", "lambda", "list", "map", "number", "output_capture", "string", "variable", "wildcard"
)

function_definition <- (function_definition) => uast(
    type: "Function",
    roles: "Function", "Declaration"
)

if <- (if) => uast(
    type: "If",
    children: "bareword", "braced_list", "exception_capture", "indexing", "lambda", "list", "map", "number", "output_capture", "string", "variable", "wildcard"
)

import <- (import) => uast(
    type: "Import",
    roles: "Import"
)

indexing <- (indexing) => uast(
    type: "Index",
    roles: "Index"
)

indices <- (indices) => uast(
    type: "Synthetic"
)

lambda <- (lambda) => uast(
    type: "Lambda",
    roles: "Lambda"
)

lhs <- (lhs) => uast(
    type: "Synthetic"
)

list <- (list) => uast(
    type: "List"
)

map <- (map) => uast(
    type: "Synthetic"
)

option <- (option) => uast(
    type: "Synthetic"
)

output_capture <- (output_capture) => uast(
    type: "Synthetic"
)

pair <- (pair) => uast(
    type: "Synthetic",
    children: "bareword", "braced_list", "exception_capture", "identifier", "indexing", "lambda", "list", "map", "number", "output_capture", "string", "variable", "wildcard"
)

parameter_list <- (parameter_list) => uast(
    type: "Parameter",
    roles: "Parameter",
    children: "identifier", "option"
)

pipeline <- (pipeline) => uast(
    type: "Synthetic"
)

redirection <- (redirection) => uast(
    type: "Synthetic"
)

rhs <- (rhs) => uast(
    type: "Synthetic"
)

source_file <- (source_file) => uast(
    type: "Synthetic"
)

temporary_assignment <- (temporary_assignment) => uast(
    type: "Assignment",
    roles: "Assignment"
)

try <- (try) => uast(
    type: "Try",
    roles: "Try"
)

variable <- (variable) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
)

variable_assignment <- (variable_assignment) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
)

variable_declaration <- (variable_declaration) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
)

variable_deletion <- (variable_deletion) => uast(
    type: "Variable",
    roles: "Variable", "Declaration"
)

while <- (while) => uast(
    type: "Loop",
    roles: "Loop",
    children: "bareword", "braced_list", "exception_capture", "indexing", "lambda", "list", "map", "number", "output_capture", "string", "variable", "wildcard"
)

wildcard <- (wildcard) => uast(
    type: "Synthetic"
)

bareword <- (bareword) => uast(
    type: "Synthetic"
)

catch <- (catch) => uast(
    type: "Catch",
    roles: "Catch"
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
)

del <- (del) => uast(
    type: "Synthetic"
)

elif <- (elif) => uast(
    type: "If"
)

else <- (else) => uast(
    type: "Synthetic"
)

file <- (file) => uast(
    type: "Synthetic"
)

finally <- (finally) => uast(
    type: "Finally",
    roles: "Finally"
)

fn <- (fn) => uast(
    type: "Synthetic"
)

for <- (for) => uast(
    type: "Loop",
    roles: "Loop"
)

identifier <- (identifier) => uast(
    type: "If"
)

if <- (if) => uast(
    type: "If"
)

io_port <- (io_port) => uast(
    type: "Synthetic"
)

number <- (number) => uast(
    type: "Synthetic"
)

set <- (set) => uast(
    type: "Set"
)

string <- (string) => uast(
    type: "Synthetic"
)

tmp <- (tmp) => uast(
    type: "Synthetic"
)

try <- (try) => uast(
    type: "Try",
    roles: "Try"
)

use <- (use) => uast(
    type: "Synthetic"
)

var <- (var) => uast(
    type: "Synthetic"
)

while <- (while) => uast(
    type: "Loop",
    roles: "Loop"
)

