_arity_value <- (_arity_value) => uast(
    type: "Synthetic",
    children: []
)

_bit_expr <- (_bit_expr) => uast(
    type: "Synthetic",
    children: []
)

_bit_type <- (_bit_type) => uast(
    type: "Synthetic",
    children: []
)

_catch_pat <- (_catch_pat) => uast(
    type: "Catch",
    roles: "Catch"
    children: []
)

_concatable <- (_concatable) => uast(
    type: "Synthetic",
    children: []
)

_cr_clause_or_macro <- (_cr_clause_or_macro) => uast(
    type: "Synthetic",
    children: []
)

_deprecated_details <- (_deprecated_details) => uast(
    type: "Synthetic",
    children: []
)

_deprecated_fun_arity <- (_deprecated_fun_arity) => uast(
    type: "Synthetic",
    children: []
)

_desc <- (_desc) => uast(
    type: "Synthetic",
    children: []
)

_expr <- (_expr) => uast(
    type: "Synthetic",
    children: []
)

_expr_max <- (_expr_max) => uast(
    type: "Synthetic",
    children: []
)

_form <- (_form) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

_function_or_macro_clause <- (_function_or_macro_clause) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

_include_detail <- (_include_detail) => uast(
    type: "Synthetic",
    children: []
)

_lc_expr <- (_lc_expr) => uast(
    type: "Synthetic",
    children: []
)

_macro_def_replacement <- (_macro_def_replacement) => uast(
    type: "Synthetic",
    children: []
)

_macro_name <- (_macro_name) => uast(
    type: "Synthetic",
    children: []
)

_map_expr_base <- (_map_expr_base) => uast(
    type: "Synthetic",
    children: []
)

_name <- (_name) => uast(
    type: "Synthetic",
    children: []
)

_preprocessor_directive <- (_preprocessor_directive) => uast(
    type: "Synthetic",
    children: []
)

_record_expr_base <- (_record_expr_base) => uast(
    type: "Synthetic",
    children: []
)

_string_like <- (_string_like) => uast(
    type: "Synthetic",
    children: []
)

ann_type <- (ann_type) => uast(
    type: "Synthetic",
    children: "_expr", "ann_var"
)

ann_var <- (ann_var) => uast(
    type: "Synthetic",
    children: "var"
)

anonymous_fun <- (anonymous_fun) => uast(
    type: "Synthetic",
    children: "fun_clause"
)

arity <- (arity) => uast(
    type: "Synthetic",
    children: "_arity_value"
)

attr_name <- (attr_name) => uast(
    type: "Synthetic",
    children: "_name"
)

b_generator <- (b_generator) => uast(
    type: "Generator",
    roles: "Generator"
    children: "_expr"
)

behaviour_attribute <- (behaviour_attribute) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: "_name"
)

bin_element <- (bin_element) => uast(
    type: "Synthetic",
    children: "_bit_expr", "bit_size_expr", "bit_type_list"
)

binary <- (binary) => uast(
    type: "Synthetic",
    children: "bin_element"
)

binary_comprehension <- (binary_comprehension) => uast(
    type: "Comprehension",
    children: "_expr_max", "lc_exprs"
)

binary_op_expr <- (binary_op_expr) => uast(
    type: "BinaryOp",
    roles: "Operator"
    children: "_catch_pat", "_expr"
)

bit_size_expr <- (bit_size_expr) => uast(
    type: "Synthetic",
    children: "_bit_expr"
)

bit_type_list <- (bit_type_list) => uast(
    type: "List",
    children: "_bit_type"
)

bit_type_unit <- (bit_type_unit) => uast(
    type: "Synthetic",
    children: "_arity_value"
)

block_expr <- (block_expr) => uast(
    type: "Block",
    roles: "Body"
    children: "_expr"
)

call <- (call) => uast(
    type: "Call",
    roles: "Call"
    children: "_expr", "expr_args"
)

callback <- (callback) => uast(
    type: "Call",
    roles: "Call"
    children: "_name", "module", "type_sig"
)

case_expr <- (case_expr) => uast(
    type: "Case",
    roles: "Branch"
    children: "_cr_clause_or_macro", "_expr"
)

catch_clause <- (catch_clause) => uast(
    type: "Catch",
    roles: "Catch"
    children: "_catch_pat", "clause_body", "guard", "try_class", "try_stack"
)

catch_expr <- (catch_expr) => uast(
    type: "Catch",
    roles: "Catch"
    children: "_expr"
)

clause_body <- (clause_body) => uast(
    type: "Synthetic",
    children: "_expr"
)

compile_options_attribute <- (compile_options_attribute) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: "_expr"
)

concatables <- (concatables) => uast(
    type: "Synthetic",
    children: "_concatable"
)

cond_match_expr <- (cond_match_expr) => uast(
    type: "Match",
    roles: "Match"
    children: "_expr"
)

cr_clause <- (cr_clause) => uast(
    type: "Synthetic",
    children: "_expr", "clause_body", "guard"
)

deprecated_attribute <- (deprecated_attribute) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: "_deprecated_details"
)

deprecated_fa <- (deprecated_fa) => uast(
    type: "Synthetic",
    children: "_deprecated_fun_arity", "atom", "deprecation_desc"
)

deprecated_fas <- (deprecated_fas) => uast(
    type: "Synthetic",
    children: "deprecated_fa"
)

deprecated_module <- (deprecated_module) => uast(
    type: "Module",
    roles: "Module"
    children: "atom"
)

deprecation_desc <- (deprecation_desc) => uast(
    type: "Synthetic",
    children: "_desc"
)

export_attribute <- (export_attribute) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: "fa"
)

export_type_attribute <- (export_type_attribute) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: "fa"
)

expr_args <- (expr_args) => uast(
    type: "Synthetic",
    children: "_expr"
)

external_fun <- (external_fun) => uast(
    type: "Synthetic",
    children: "_name", "arity", "module"
)

fa <- (fa) => uast(
    type: "Synthetic",
    children: "_name", "arity"
)

feature_attribute <- (feature_attribute) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: "_expr"
)

field_expr <- (field_expr) => uast(
    type: "Field",
    roles: "Member"
    children: "_expr"
)

field_type <- (field_type) => uast(
    type: "Field",
    roles: "Member"
    children: "_expr"
)

file_attribute <- (file_attribute) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: "integer", "string"
)

fun_clause <- (fun_clause) => uast(
    type: "Synthetic",
    children: "clause_body", "expr_args", "guard", "var"
)

fun_decl <- (fun_decl) => uast(
    type: "Synthetic",
    children: "_function_or_macro_clause"
)

fun_type <- (fun_type) => uast(
    type: "Synthetic",
    children: "fun_type_sig"
)

fun_type_sig <- (fun_type_sig) => uast(
    type: "Synthetic",
    children: "_expr", "expr_args"
)

function_clause <- (function_clause) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: "_name", "clause_body", "expr_args", "guard"
)

generator <- (generator) => uast(
    type: "Generator",
    roles: "Generator"
    children: "_expr"
)

guard <- (guard) => uast(
    type: "Synthetic",
    children: "guard_clause"
)

guard_clause <- (guard_clause) => uast(
    type: "Synthetic",
    children: "_expr"
)

if_clause <- (if_clause) => uast(
    type: "If",
    children: "clause_body", "guard"
)

if_expr <- (if_expr) => uast(
    type: "If",
    children: "if_clause"
)

import_attribute <- (import_attribute) => uast(
    type: "Import",
    roles: "Import"
    children: "_name", "fa"
)

internal_fun <- (internal_fun) => uast(
    type: "Synthetic",
    children: "_name", "arity"
)

lc_exprs <- (lc_exprs) => uast(
    type: "Synthetic",
    children: "lc_or_zc_expr"
)

lc_or_zc_expr <- (lc_or_zc_expr) => uast(
    type: "Synthetic",
    children: "_lc_expr"
)

list <- (list) => uast(
    type: "List",
    children: "_expr"
)

list_comprehension <- (list_comprehension) => uast(
    type: "List",
    children: "_expr", "lc_exprs"
)

macro_call_args <- (macro_call_args) => uast(
    type: "Call",
    roles: "Call"
    children: "macro_expr"
)

macro_call_expr <- (macro_call_expr) => uast(
    type: "Call",
    roles: "Call"
    children: "_macro_name", "macro_call_args"
)

macro_expr <- (macro_expr) => uast(
    type: "Synthetic",
    children: "_expr"
)

macro_lhs <- (macro_lhs) => uast(
    type: "Synthetic",
    children: "_macro_name", "var_args"
)

macro_string <- (macro_string) => uast(
    type: "Synthetic",
    children: "_macro_name"
)

map_comprehension <- (map_comprehension) => uast(
    type: "Comprehension",
    children: "lc_exprs", "map_field"
)

map_expr <- (map_expr) => uast(
    type: "Synthetic",
    children: "map_field"
)

map_expr_update <- (map_expr_update) => uast(
    type: "Synthetic",
    children: "_map_expr_base", "map_field"
)

map_field <- (map_field) => uast(
    type: "Field",
    roles: "Member"
    children: "_expr"
)

map_generator <- (map_generator) => uast(
    type: "Generator",
    roles: "Generator"
    children: "_expr", "map_field"
)

match_expr <- (match_expr) => uast(
    type: "Match",
    roles: "Match"
    children: "_expr"
)

maybe_expr <- (maybe_expr) => uast(
    type: "Synthetic",
    children: "_cr_clause_or_macro", "_expr"
)

module <- (module) => uast(
    type: "Module",
    roles: "Module"
    children: "_name"
)

module_attribute <- (module_attribute) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: "_name"
)

multi_string <- (multi_string) => uast(
    type: "Synthetic",
    children: "_string_like"
)

nominal <- (nominal) => uast(
    type: "Synthetic",
    children: "_expr", "type_name"
)

opaque <- (opaque) => uast(
    type: "Synthetic",
    children: "_expr", "type_name"
)

optional_callbacks_attribute <- (optional_callbacks_attribute) => uast(
    type: "Call",
    roles: "Call"
    children: "fa"
)

paren_expr <- (paren_expr) => uast(
    type: "Synthetic",
    children: "_expr"
)

pipe <- (pipe) => uast(
    type: "Synthetic",
    children: "_expr"
)

pp_define <- (pp_define) => uast(
    type: "Synthetic",
    children: "_macro_def_replacement", "macro_lhs"
)

pp_elif <- (pp_elif) => uast(
    type: "If",
    children: "_expr"
)

pp_else <- (pp_else) => uast(
    type: "Synthetic",
    children: []
)

pp_endif <- (pp_endif) => uast(
    type: "If",
    children: []
)

pp_if <- (pp_if) => uast(
    type: "If",
    children: "_expr"
)

pp_ifdef <- (pp_ifdef) => uast(
    type: "If",
    children: "_macro_name"
)

pp_ifndef <- (pp_ifndef) => uast(
    type: "If",
    children: "_macro_name"
)

pp_include <- (pp_include) => uast(
    type: "Synthetic",
    children: "_include_detail"
)

pp_include_lib <- (pp_include_lib) => uast(
    type: "Synthetic",
    children: "_include_detail"
)

pp_undef <- (pp_undef) => uast(
    type: "Synthetic",
    children: "_macro_name"
)

range_type <- (range_type) => uast(
    type: "Synthetic",
    children: "_expr"
)

receive_after <- (receive_after) => uast(
    type: "Synthetic",
    children: "_expr", "clause_body"
)

receive_expr <- (receive_expr) => uast(
    type: "Synthetic",
    children: "_cr_clause_or_macro", "receive_after"
)

record_decl <- (record_decl) => uast(
    type: "Synthetic",
    children: "_name", "record_field"
)

record_expr <- (record_expr) => uast(
    type: "Synthetic",
    children: "record_field", "record_name"
)

record_field <- (record_field) => uast(
    type: "Field",
    roles: "Member"
    children: "_name", "field_expr", "field_type"
)

record_field_expr <- (record_field_expr) => uast(
    type: "Field",
    roles: "Member"
    children: "_record_expr_base", "record_field_name", "record_name"
)

record_field_name <- (record_field_name) => uast(
    type: "Field",
    roles: "Member"
    children: "_name"
)

record_index_expr <- (record_index_expr) => uast(
    type: "Index",
    roles: "Index"
    children: "record_field_name", "record_name"
)

record_name <- (record_name) => uast(
    type: "Synthetic",
    children: "_name"
)

record_update_expr <- (record_update_expr) => uast(
    type: "Synthetic",
    children: "_record_expr_base", "record_field", "record_name"
)

remote <- (remote) => uast(
    type: "Synthetic",
    children: "_expr_max", "remote_module"
)

remote_module <- (remote_module) => uast(
    type: "Module",
    roles: "Module"
    children: "_expr_max"
)

replacement_cr_clauses <- (replacement_cr_clauses) => uast(
    type: "Synthetic",
    children: "_cr_clause_or_macro"
)

replacement_expr_guard <- (replacement_expr_guard) => uast(
    type: "Synthetic",
    children: "_expr", "guard"
)

replacement_function_clauses <- (replacement_function_clauses) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: "_function_or_macro_clause"
)

replacement_guard_and <- (replacement_guard_and) => uast(
    type: "Synthetic",
    children: "_expr"
)

replacement_guard_or <- (replacement_guard_or) => uast(
    type: "Synthetic",
    children: "replacement_guard_and"
)

replacement_parens <- (replacement_parens) => uast(
    type: "Synthetic",
    children: []
)

source_file <- (source_file) => uast(
    type: "Synthetic",
    children: "_expr", "_form"
)

spec <- (spec) => uast(
    type: "Synthetic",
    children: "_name", "module", "type_sig"
)

ssr_definition <- (ssr_definition) => uast(
    type: "Synthetic",
    children: "_expr", "ssr_replacement", "ssr_when"
)

ssr_replacement <- (ssr_replacement) => uast(
    type: "Synthetic",
    children: "_expr"
)

ssr_when <- (ssr_when) => uast(
    type: "Synthetic",
    children: "guard"
)

string <- (string) => uast(
    type: "Synthetic",
    children: []
)

try_after <- (try_after) => uast(
    type: "Try",
    roles: "Try"
    children: "_expr"
)

try_class <- (try_class) => uast(
    type: "Class",
    roles: "Class", "Declaration"
    children: "_name"
)

try_expr <- (try_expr) => uast(
    type: "Try",
    roles: "Try"
    children: "_cr_clause_or_macro", "_expr", "catch_clause", "try_after"
)

try_stack <- (try_stack) => uast(
    type: "Try",
    roles: "Try"
    children: "var"
)

tuple <- (tuple) => uast(
    type: "Tuple",
    children: "_expr"
)

type_alias <- (type_alias) => uast(
    type: "Synthetic",
    children: "_expr", "type_name"
)

type_guards <- (type_guards) => uast(
    type: "Synthetic",
    children: "ann_type"
)

type_name <- (type_name) => uast(
    type: "Synthetic",
    children: "_name", "var_args"
)

type_sig <- (type_sig) => uast(
    type: "Synthetic",
    children: "_expr", "expr_args", "type_guards"
)

unary_op_expr <- (unary_op_expr) => uast(
    type: "UnaryOp",
    roles: "Operator"
    children: "_expr"
)

var_args <- (var_args) => uast(
    type: "Synthetic",
    children: "var"
)

wild_attribute <- (wild_attribute) => uast(
    type: "Attribute",
    roles: "Attribute"
    children: "_expr", "attr_name"
)

after <- (after) => uast(
    type: "Synthetic",
    children: []
)

and <- (and) => uast(
    type: "Synthetic",
    children: []
)

andalso <- (andalso) => uast(
    type: "Synthetic",
    children: []
)

atom <- (atom) => uast(
    type: "Synthetic",
    children: []
)

band <- (band) => uast(
    type: "Synthetic",
    children: []
)

begin <- (begin) => uast(
    type: "Synthetic",
    children: []
)

behavior <- (behavior) => uast(
    type: "Synthetic",
    children: []
)

behaviour <- (behaviour) => uast(
    type: "Synthetic",
    children: []
)

bnot <- (bnot) => uast(
    type: "Synthetic",
    children: []
)

bor <- (bor) => uast(
    type: "Synthetic",
    children: []
)

bsl <- (bsl) => uast(
    type: "Synthetic",
    children: []
)

bsr <- (bsr) => uast(
    type: "Synthetic",
    children: []
)

bxor <- (bxor) => uast(
    type: "Synthetic",
    children: []
)

callback <- (callback) => uast(
    type: "Call",
    roles: "Call"
    children: []
)

case <- (case) => uast(
    type: "Case",
    roles: "Branch"
    children: []
)

catch <- (catch) => uast(
    type: "Catch",
    roles: "Catch"
    children: []
)

char <- (char) => uast(
    type: "Synthetic",
    children: []
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
    children: []
)

compile <- (compile) => uast(
    type: "Synthetic",
    children: []
)

define <- (define) => uast(
    type: "Synthetic",
    children: []
)

deprecated <- (deprecated) => uast(
    type: "Synthetic",
    children: []
)

deprecated_wildcard <- (deprecated_wildcard) => uast(
    type: "Synthetic",
    children: []
)

div <- (div) => uast(
    type: "Synthetic",
    children: []
)

dotdotdot <- (dotdotdot) => uast(
    type: "Synthetic",
    children: []
)

elif <- (elif) => uast(
    type: "If",
    children: []
)

else <- (else) => uast(
    type: "Synthetic",
    children: []
)

end <- (end) => uast(
    type: "Synthetic",
    children: []
)

endif <- (endif) => uast(
    type: "If",
    children: []
)

export <- (export) => uast(
    type: "Synthetic",
    children: []
)

export_type <- (export_type) => uast(
    type: "Synthetic",
    children: []
)

feature <- (feature) => uast(
    type: "Synthetic",
    children: []
)

file <- (file) => uast(
    type: "Synthetic",
    children: []
)

float <- (float) => uast(
    type: "Synthetic",
    children: []
)

fun <- (fun) => uast(
    type: "Synthetic",
    children: []
)

if <- (if) => uast(
    type: "If",
    children: []
)

ifdef <- (ifdef) => uast(
    type: "If",
    children: []
)

ifndef <- (ifndef) => uast(
    type: "If",
    children: []
)

import <- (import) => uast(
    type: "Import",
    roles: "Import"
    children: []
)

include <- (include) => uast(
    type: "Synthetic",
    children: []
)

include_lib <- (include_lib) => uast(
    type: "Synthetic",
    children: []
)

integer <- (integer) => uast(
    type: "Synthetic",
    children: []
)

maybe <- (maybe) => uast(
    type: "Synthetic",
    children: []
)

module <- (module) => uast(
    type: "Module",
    roles: "Module"
    children: []
)

nominal <- (nominal) => uast(
    type: "Synthetic",
    children: []
)

not <- (not) => uast(
    type: "Synthetic",
    children: []
)

of <- (of) => uast(
    type: "Synthetic",
    children: []
)

opaque <- (opaque) => uast(
    type: "Synthetic",
    children: []
)

optional_callbacks <- (optional_callbacks) => uast(
    type: "Call",
    roles: "Call"
    children: []
)

or <- (or) => uast(
    type: "Synthetic",
    children: []
)

orelse <- (orelse) => uast(
    type: "Synthetic",
    children: []
)

receive <- (receive) => uast(
    type: "Synthetic",
    children: []
)

record <- (record) => uast(
    type: "Synthetic",
    children: []
)

rem <- (rem) => uast(
    type: "Synthetic",
    children: []
)

shebang <- (shebang) => uast(
    type: "Synthetic",
    children: []
)

spec <- (spec) => uast(
    type: "Synthetic",
    children: []
)

ssr <- (ssr) => uast(
    type: "Synthetic",
    children: []
)

try <- (try) => uast(
    type: "Try",
    roles: "Try"
    children: []
)

type <- (type) => uast(
    type: "Synthetic",
    children: []
)

undef <- (undef) => uast(
    type: "Synthetic",
    children: []
)

unit <- (unit) => uast(
    type: "Synthetic",
    children: []
)

var <- (var) => uast(
    type: "Synthetic",
    children: []
)

when <- (when) => uast(
    type: "Synthetic",
    children: []
)

xor <- (xor) => uast(
    type: "Synthetic",
    children: []
)

