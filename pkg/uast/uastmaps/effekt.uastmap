_declaration_statement <- (_declaration_statement) => uast(
    type: "Synthetic"
)

_expression <- (_expression) => uast(
    type: "Synthetic"
)

_literal <- (_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

_type <- (_type) => uast(
    type: "Synthetic"
)

arguments <- (arguments) => uast(
    type: "Synthetic"
)

assignment_expression <- (assignment_expression) => uast(
    type: "Assignment",
    roles: "Assignment",
    children: "_expression"
)

binary_expression <- (binary_expression) => uast(
    type: "Synthetic",
    children: "_expression", "and", "or"
)

block <- (block) => uast(
    type: "Block",
    roles: "Body"
)

block_argument <- (block_argument) => uast(
    type: "Block",
    roles: "Body"
)

block_parameter <- (block_parameter) => uast(
    type: "Parameter",
    roles: "Parameter",
    children: "_type", "identifier", "return_type"
)

boolean_literal <- (boolean_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

call_expression <- (call_expression) => uast(
    type: "Call",
    roles: "Call",
    children: "_expression", "arguments", "block_argument", "type_parameters"
)

constructor_pattern <- (constructor_pattern) => uast(
    type: "Struct",
    roles: "Struct", "Declaration",
    children: "parameter_pattern", "type_identifier", "type_parameters"
)

declaration_list <- (declaration_list) => uast(
    type: "List"
)

do_expression <- (do_expression) => uast(
    type: "Synthetic"
)

effect <- (effect) => uast(
    type: "Synthetic",
    children: "type_parameters"
)

effect_alias_list <- (effect_alias_list) => uast(
    type: "List"
)

effect_item <- (effect_item) => uast(
    type: "Synthetic",
    children: "effect_alias_list", "parameters", "return_type", "type_identifier", "type_parameters"
)

effects <- (effects) => uast(
    type: "Synthetic"
)

else_clause <- (else_clause) => uast(
    type: "Synthetic",
    children: "block"
)

expression_statement <- (expression_statement) => uast(
    type: "Synthetic"
)

field_declaration <- (field_declaration) => uast(
    type: "Field",
    roles: "Member",
    children: "_type", "field_identifier"
)

field_expression <- (field_expression) => uast(
    type: "Field",
    roles: "Member",
    children: "_expression", "field_identifier"
)

field_item_list <- (field_item_list) => uast(
    type: "Field",
    roles: "Member"
)

function_item <- (function_item) => uast(
    type: "Function",
    roles: "Function", "Declaration",
    children: "block_parameter", "expression_statement", "identifier", "parameters", "return_type", "type_parameters"
)

function_list <- (function_list) => uast(
    type: "Function",
    roles: "Function", "Declaration"
)

generic_type <- (generic_type) => uast(
    type: "Synthetic",
    children: "type_arguments"
)

if_else_clause <- (if_else_clause) => uast(
    type: "If",
    children: "_expression", "block"
)

if_expression <- (if_expression) => uast(
    type: "If",
    children: "_expression", "block", "else_clause", "if_else_clause"
)

import_declaration <- (import_declaration) => uast(
    type: "Import",
    roles: "Import",
    children: "path"
)

interface_item <- (interface_item) => uast(
    type: "Interface",
    roles: "Interface", "Declaration",
    children: "declaration_list", "type_identifier", "type_parameters"
)

list_expression <- (list_expression) => uast(
    type: "List"
)

list_pattern <- (list_pattern) => uast(
    type: "List"
)

match_arm <- (match_arm) => uast(
    type: "Match",
    roles: "Match",
    children: "_expression", "match_pattern"
)

match_block <- (match_block) => uast(
    type: "Block",
    roles: "Body"
)

match_expression <- (match_expression) => uast(
    type: "Match",
    roles: "Match",
    children: "_expression", "match_block"
)

match_pattern <- (match_pattern) => uast(
    type: "Pattern",
    roles: "Pattern",
    children: "_expression"
)

negative_literal <- (negative_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

parameter <- (parameter) => uast(
    type: "Parameter",
    roles: "Parameter",
    children: "_type", "boolean_literal", "constructor_pattern", "float_literal", "identifier", "integer_literal", "list_pattern", "negative_literal", "string_literal", "tuple_pattern"
)

parameter_pattern <- (parameter_pattern) => uast(
    type: "Parameter",
    roles: "Parameter"
)

parameters <- (parameters) => uast(
    type: "Parameter",
    roles: "Parameter"
)

path <- (path) => uast(
    type: "Synthetic"
)

record_item <- (record_item) => uast(
    type: "Synthetic",
    children: "field_item_list", "type_identifier", "type_parameters"
)

resume_expression <- (resume_expression) => uast(
    type: "Synthetic",
    children: "_expression"
)

return_type <- (return_type) => uast(
    type: "Return",
    roles: "Return",
    children: "_type", "effects"
)

source_file <- (source_file) => uast(
    type: "Synthetic"
)

try_expression <- (try_expression) => uast(
    type: "Try",
    roles: "Try",
    children: "block", "with_clause"
)

tuple_expression <- (tuple_expression) => uast(
    type: "Tuple"
)

tuple_pattern <- (tuple_pattern) => uast(
    type: "Tuple"
)

tuple_type <- (tuple_type) => uast(
    type: "Tuple"
)

type_arguments <- (type_arguments) => uast(
    type: "Synthetic"
)

type_assignment <- (type_assignment) => uast(
    type: "Assignment",
    roles: "Assignment"
)

type_item <- (type_item) => uast(
    type: "Synthetic",
    children: "type_assignment", "type_identifier", "type_parameters", "type_variant_list"
)

type_parameters <- (type_parameters) => uast(
    type: "Parameter",
    roles: "Parameter"
)

type_variant <- (type_variant) => uast(
    type: "Synthetic",
    children: "field_item_list", "type_identifier", "type_parameters"
)

type_variant_list <- (type_variant_list) => uast(
    type: "List"
)

unary_expression <- (unary_expression) => uast(
    type: "Synthetic"
)

unit_expression <- (unit_expression) => uast(
    type: "Synthetic"
)

unit_type <- (unit_type) => uast(
    type: "Synthetic"
)

val_declaration <- (val_declaration) => uast(
    type: "Synthetic",
    children: "_expression", "identifier"
)

var_declaration <- (var_declaration) => uast(
    type: "Synthetic",
    children: "_expression", "identifier"
)

while_expression <- (while_expression) => uast(
    type: "Loop",
    roles: "Loop",
    children: "_expression", "block"
)

with_clause <- (with_clause) => uast(
    type: "Synthetic",
    children: "block_argument", "function_list", "type_identifier", "type_parameters"
)

and <- (and) => uast(
    type: "Synthetic"
)

case <- (case) => uast(
    type: "Case",
    roles: "Branch"
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
)

def <- (def) => uast(
    type: "Synthetic"
)

do <- (do) => uast(
    type: "Synthetic"
)

effect <- (effect) => uast(
    type: "Synthetic"
)

else <- (else) => uast(
    type: "Synthetic"
)

false <- (false) => uast(
    type: "Synthetic"
)

field_identifier <- (field_identifier) => uast(
    type: "If"
)

float_literal <- (float_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

hole <- (hole) => uast(
    type: "Synthetic"
)

identifier <- (identifier) => uast(
    type: "If"
)

if <- (if) => uast(
    type: "If"
)

import <- (import) => uast(
    type: "Import",
    roles: "Import"
)

integer_literal <- (integer_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

interface <- (interface) => uast(
    type: "Interface",
    roles: "Interface", "Declaration"
)

match <- (match) => uast(
    type: "Match",
    roles: "Match"
)

or <- (or) => uast(
    type: "Synthetic"
)

path_segment <- (path_segment) => uast(
    type: "Synthetic"
)

primitive_type <- (primitive_type) => uast(
    type: "Synthetic"
)

record <- (record) => uast(
    type: "Synthetic"
)

resume <- (resume) => uast(
    type: "Synthetic"
)

string_literal <- (string_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

true <- (true) => uast(
    type: "Synthetic"
)

try <- (try) => uast(
    type: "Try",
    roles: "Try"
)

type <- (type) => uast(
    type: "Synthetic"
)

type_identifier <- (type_identifier) => uast(
    type: "If"
)

val <- (val) => uast(
    type: "Synthetic"
)

var <- (var) => uast(
    type: "Synthetic"
)

while <- (while) => uast(
    type: "Loop",
    roles: "Loop"
)

with <- (with) => uast(
    type: "Synthetic"
)

