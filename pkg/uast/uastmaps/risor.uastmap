_expression <- (_expression) => uast(
    type: "Synthetic"
)

_statement <- (_statement) => uast(
    type: "Synthetic"
)

argument_list <- (argument_list) => uast(
    type: "List"
)

assignment_statement <- (assignment_statement) => uast(
    type: "Assignment",
    roles: "Assignment",
    children: "_expression", "expression_list"
)

binary_expression <- (binary_expression) => uast(
    type: "Synthetic",
    children: "_expression"
)

block <- (block) => uast(
    type: "Block",
    roles: "Body"
)

break_statement <- (break_statement) => uast(
    type: "Break",
    roles: "Break"
)

call_expression <- (call_expression) => uast(
    type: "Call",
    roles: "Call",
    children: "_expression", "argument_list"
)

conditional_expression <- (conditional_expression) => uast(
    type: "Synthetic",
    children: "_expression"
)

const_declaration <- (const_declaration) => uast(
    type: "Synthetic",
    children: "_expression", "expression_list"
)

continue_statement <- (continue_statement) => uast(
    type: "Continue",
    roles: "Continue"
)

dec_statement <- (dec_statement) => uast(
    type: "Synthetic"
)

default_case <- (default_case) => uast(
    type: "Case",
    roles: "Branch"
)

defer_statement <- (defer_statement) => uast(
    type: "Synthetic"
)

escape_sequence <- (escape_sequence) => uast(
    type: "Synthetic"
)

expression_list <- (expression_list) => uast(
    type: "List"
)

expression_statement <- (expression_statement) => uast(
    type: "Synthetic"
)

for_clause <- (for_clause) => uast(
    type: "Loop",
    roles: "Loop",
    children: "_expression", "assignment_statement", "const_declaration", "dec_statement", "expression_statement", "inc_statement", "short_var_declaration", "var_declaration"
)

for_statement <- (for_statement) => uast(
    type: "Loop",
    roles: "Loop",
    children: "block"
)

func_literal <- (func_literal) => uast(
    type: "Literal",
    roles: "Literal",
    children: "block", "parameter_list"
)

function_declaration <- (function_declaration) => uast(
    type: "Function",
    roles: "Function", "Declaration",
    children: "block", "identifier", "parameter_list"
)

go_statement <- (go_statement) => uast(
    type: "Synthetic"
)

if_statement <- (if_statement) => uast(
    type: "If",
    children: "_expression", "block", "if_statement"
)

import_statement <- (import_statement) => uast(
    type: "Import",
    roles: "Import",
    children: "identifier", "import_statement_as", "import_statement_from"
)

import_statement_as <- (import_statement_as) => uast(
    type: "Import",
    roles: "Import",
    children: "identifier"
)

import_statement_from <- (import_statement_from) => uast(
    type: "Import",
    roles: "Import"
)

inc_statement <- (inc_statement) => uast(
    type: "Synthetic"
)

index_expression <- (index_expression) => uast(
    type: "Index",
    roles: "Index",
    children: "_expression"
)

list_literal <- (list_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

map_literal_pair <- (map_literal_pair) => uast(
    type: "Literal",
    roles: "Literal",
    children: "_expression"
)

map_literal_values <- (map_literal_values) => uast(
    type: "Literal",
    roles: "Literal"
)

map_or_set_literal <- (map_or_set_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

parameter_declaration <- (parameter_declaration) => uast(
    type: "Parameter",
    roles: "Parameter",
    children: "identifier"
)

parameter_declaration_default <- (parameter_declaration_default) => uast(
    type: "Parameter",
    roles: "Parameter",
    children: "_expression", "identifier"
)

parameter_list <- (parameter_list) => uast(
    type: "Parameter",
    roles: "Parameter"
)

parenthesized_expression <- (parenthesized_expression) => uast(
    type: "Synthetic"
)

range_clause <- (range_clause) => uast(
    type: "Synthetic",
    children: "_expression", "const", "expression_list", "var"
)

return_statement <- (return_statement) => uast(
    type: "Return",
    roles: "Return"
)

selector_expression <- (selector_expression) => uast(
    type: "Synthetic",
    children: "_expression", "field_identifier"
)

set_literal_values <- (set_literal_values) => uast(
    type: "Literal",
    roles: "Literal"
)

short_var_declaration <- (short_var_declaration) => uast(
    type: "Synthetic",
    children: "_expression", "expression_list"
)

source_file <- (source_file) => uast(
    type: "Synthetic"
)

string <- (string) => uast(
    type: "Synthetic"
)

string_template <- (string_template) => uast(
    type: "Synthetic"
)

string_template_argument <- (string_template_argument) => uast(
    type: "Synthetic"
)

switch_case <- (switch_case) => uast(
    type: "Switch",
    children: "expression_list"
)

switch_statement <- (switch_statement) => uast(
    type: "Switch",
    children: "_expression"
)

unary_expression <- (unary_expression) => uast(
    type: "Synthetic",
    children: "_expression"
)

var_declaration <- (var_declaration) => uast(
    type: "Synthetic",
    children: "_expression", "expression_list"
)

as <- (as) => uast(
    type: "Synthetic"
)

break <- (break) => uast(
    type: "Break",
    roles: "Break"
)

case <- (case) => uast(
    type: "Case",
    roles: "Branch"
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
)

const <- (const) => uast(
    type: "Synthetic"
)

continue <- (continue) => uast(
    type: "Continue",
    roles: "Continue"
)

default <- (default) => uast(
    type: "Synthetic"
)

defer <- (defer) => uast(
    type: "Synthetic"
)

else <- (else) => uast(
    type: "Synthetic"
)

escape_sequence_invalid <- (escape_sequence_invalid) => uast(
    type: "Synthetic"
)

false <- (false) => uast(
    type: "Synthetic"
)

field_identifier <- (field_identifier) => uast(
    type: "If"
)

float_literal <- (float_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

for <- (for) => uast(
    type: "Loop",
    roles: "Loop"
)

format_sequence <- (format_sequence) => uast(
    type: "Loop",
    roles: "Loop"
)

from <- (from) => uast(
    type: "Synthetic"
)

func <- (func) => uast(
    type: "Synthetic"
)

go <- (go) => uast(
    type: "Synthetic"
)

identifier <- (identifier) => uast(
    type: "If"
)

if <- (if) => uast(
    type: "If"
)

import <- (import) => uast(
    type: "Import",
    roles: "Import"
)

int_literal <- (int_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

nil <- (nil) => uast(
    type: "Synthetic"
)

range <- (range) => uast(
    type: "Synthetic"
)

return <- (return) => uast(
    type: "Return",
    roles: "Return"
)

string_backtick <- (string_backtick) => uast(
    type: "Synthetic"
)

string_template_char <- (string_template_char) => uast(
    type: "Synthetic"
)

switch <- (switch) => uast(
    type: "Switch"
)

true <- (true) => uast(
    type: "Synthetic"
)

var <- (var) => uast(
    type: "Synthetic"
)

