array_bracket_expression <- (array_bracket_expression) => uast(
    type: "Synthetic",
    children: "array_op", "binary_op", "field_access", "func_call", "number", "parenthesis_expression", "template_global", "unary_op"
)

array_op <- (array_op) => uast(
    type: "Synthetic",
    children: "array_bracket_expression", "array_op", "binary_op", "field_access", "func_call", "number", "parenthesis_expression", "template_global", "unary_op"
)

array_type <- (array_type) => uast(
    type: "Synthetic",
    children: "array_bracket_expression", "array_type", "template_global"
)

assign_left_side <- (assign_left_side) => uast(
    type: "Synthetic",
    children: "assign_to"
)

assign_to <- (assign_to) => uast(
    type: "Synthetic",
    children: "array_op", "binary_op", "declaration", "field_access", "func_call", "number", "parenthesis_expression", "template_global", "unary_op", "write_modifiers"
)

binary_op <- (binary_op) => uast(
    type: "BinaryOp",
    roles: "Operator",
    children: "array_op", "binary_op", "field_access", "func_call", "number", "parenthesis_expression", "template_global", "unary_op"
)

block <- (block) => uast(
    type: "Block",
    roles: "Body",
    children: "assign_left_side", "block", "decl_assign_statement", "domain_statement", "for_statement", "if_statement", "interface_statement"
)

const_and_type <- (const_and_type) => uast(
    type: "Synthetic",
    children: "array_type", "template_global"
)

decl_assign_statement <- (decl_assign_statement) => uast(
    type: "Synthetic",
    children: "array_op", "assign_left_side", "binary_op", "field_access", "func_call", "number", "parenthesis_expression", "template_global", "unary_op"
)

declaration <- (declaration) => uast(
    type: "Synthetic",
    children: "array_type", "gen", "identifier", "input", "latency_specifier", "output", "state", "template_global"
)

declaration_list <- (declaration_list) => uast(
    type: "List",
    children: "declaration"
)

domain_statement <- (domain_statement) => uast(
    type: "Synthetic",
    children: "identifier"
)

field_access <- (field_access) => uast(
    type: "Field",
    roles: "Member",
    children: "array_op", "binary_op", "field_access", "func_call", "identifier", "number", "parenthesis_expression", "template_global", "unary_op"
)

for_statement <- (for_statement) => uast(
    type: "Loop",
    roles: "Loop",
    children: "array_op", "binary_op", "block", "declaration", "field_access", "func_call", "number", "parenthesis_expression", "template_global", "unary_op"
)

func_call <- (func_call) => uast(
    type: "Call",
    roles: "Call",
    children: "array_op", "binary_op", "field_access", "func_call", "number", "parenthesis_expression", "parenthesis_expression_list", "template_global", "unary_op"
)

global_object <- (global_object) => uast(
    type: "Synthetic",
    children: "__builtin__", "block", "const_and_type", "extern", "identifier", "module", "struct", "template_declaration_arguments"
)

if_statement <- (if_statement) => uast(
    type: "If",
    children: "array_op", "binary_op", "block", "field_access", "func_call", "if_statement", "number", "parenthesis_expression", "template_global", "unary_op"
)

interface_ports <- (interface_ports) => uast(
    type: "Interface",
    roles: "Interface", "Declaration",
    children: "declaration_list"
)

interface_statement <- (interface_statement) => uast(
    type: "Interface",
    roles: "Interface", "Declaration",
    children: "identifier", "interface_ports"
)

latency_specifier <- (latency_specifier) => uast(
    type: "If",
    children: "array_op", "binary_op", "field_access", "func_call", "number", "parenthesis_expression", "template_global", "unary_op"
)

namespace_list <- (namespace_list) => uast(
    type: "Namespace",
    roles: "Module",
    children: "identifier"
)

parenthesis_expression <- (parenthesis_expression) => uast(
    type: "Synthetic",
    children: "array_op", "binary_op", "field_access", "func_call", "number", "parenthesis_expression", "template_global", "unary_op"
)

parenthesis_expression_list <- (parenthesis_expression_list) => uast(
    type: "List",
    children: "array_op", "binary_op", "field_access", "func_call", "number", "parenthesis_expression", "template_global", "unary_op"
)

source_file <- (source_file) => uast(
    type: "Synthetic",
    children: "global_object"
)

template_arg <- (template_arg) => uast(
    type: "Synthetic",
    children: "array_op", "array_type", "binary_op", "field_access", "func_call", "identifier", "number", "parenthesis_expression", "template_global", "unary_op"
)

template_args <- (template_args) => uast(
    type: "Synthetic",
    children: "template_arg"
)

template_declaration_arguments <- (template_declaration_arguments) => uast(
    type: "Synthetic",
    children: "declaration", "template_declaration_type"
)

template_declaration_type <- (template_declaration_type) => uast(
    type: "Synthetic",
    children: "identifier"
)

template_global <- (template_global) => uast(
    type: "Synthetic",
    children: "namespace_list", "template_args"
)

unary_op <- (unary_op) => uast(
    type: "UnaryOp",
    roles: "Operator",
    children: "array_op", "binary_op", "field_access", "func_call", "number", "parenthesis_expression", "template_global", "unary_op"
)

write_modifiers <- (write_modifiers) => uast(
    type: "If",
    children: "initial", "reg"
)

__builtin__ <- (__builtin__) => uast(
    type: "Synthetic"
)

const <- (const) => uast(
    type: "Synthetic"
)

domain <- (domain) => uast(
    type: "Synthetic"
)

else <- (else) => uast(
    type: "Synthetic"
)

extern <- (extern) => uast(
    type: "Synthetic"
)

for <- (for) => uast(
    type: "Loop",
    roles: "Loop"
)

gen <- (gen) => uast(
    type: "Synthetic"
)

identifier <- (identifier) => uast(
    type: "If"
)

if <- (if) => uast(
    type: "If"
)

in <- (in) => uast(
    type: "Synthetic"
)

initial <- (initial) => uast(
    type: "Synthetic"
)

input <- (input) => uast(
    type: "Synthetic"
)

interface <- (interface) => uast(
    type: "Interface",
    roles: "Interface", "Declaration"
)

module <- (module) => uast(
    type: "Module",
    roles: "Module"
)

multi_line_comment <- (multi_line_comment) => uast(
    type: "Comment",
    roles: "Comment"
)

number <- (number) => uast(
    type: "Synthetic"
)

output <- (output) => uast(
    type: "Synthetic"
)

reg <- (reg) => uast(
    type: "Synthetic"
)

single_line_comment <- (single_line_comment) => uast(
    type: "Comment",
    roles: "Comment"
)

state <- (state) => uast(
    type: "Synthetic"
)

struct <- (struct) => uast(
    type: "Struct",
    roles: "Struct", "Declaration"
)

type <- (type) => uast(
    type: "Synthetic"
)

