array_expression <- (array_expression) => uast(
    type: "Synthetic",
    children: "array_expression", "array_value", "assignment_expression", "binary_expression", "break_expression", "for_expression", "function_call", "identifier", "if_expression", "integer_literal", "let_expression", "meta_cast", "meta_expression", "meta_lvalue", "meta_type_identifier", "method_call", "new_expression", "nil_literal", "record_expression", "record_value", "sequence_expression", "string_literal", "type_identifier", "unary_expression", "while_expression"
)

array_type <- (array_type) => uast(
    type: "Synthetic",
    children: "meta_type_identifier", "type_identifier"
)

array_value <- (array_value) => uast(
    type: "Synthetic",
    children: "array_expression", "array_value", "assignment_expression", "binary_expression", "break_expression", "for_expression", "function_call", "identifier", "if_expression", "integer_literal", "let_expression", "meta_cast", "meta_expression", "meta_lvalue", "method_call", "new_expression", "nil_literal", "record_expression", "record_value", "sequence_expression", "string_literal", "unary_expression", "while_expression"
)

assignment_expression <- (assignment_expression) => uast(
    type: "Assignment",
    roles: "Assignment",
    children: "array_expression", "array_value", "assignment_expression", "binary_expression", "break_expression", "for_expression", "function_call", "identifier", "if_expression", "integer_literal", "let_expression", "meta_cast", "meta_expression", "meta_lvalue", "method_call", "new_expression", "nil_literal", "record_expression", "record_value", "sequence_expression", "string_literal", "unary_expression", "while_expression"
)

binary_expression <- (binary_expression) => uast(
    type: "Synthetic",
    children: "array_expression", "array_value", "assignment_expression", "binary_expression", "break_expression", "for_expression", "function_call", "identifier", "if_expression", "integer_literal", "let_expression", "meta_cast", "meta_expression", "meta_lvalue", "method_call", "new_expression", "nil_literal", "operator", "record_expression", "record_value", "sequence_expression", "string_literal", "unary_expression", "while_expression"
)

class_declaration <- (class_declaration) => uast(
    type: "Class",
    roles: "Class", "Declaration",
    children: "field_declaration", "identifier", "method_declaration"
)

class_type <- (class_type) => uast(
    type: "Class",
    roles: "Class", "Declaration",
    children: "field_declaration", "method_declaration"
)

extends_qualifier <- (extends_qualifier) => uast(
    type: "If",
    children: "meta_type_identifier", "type_identifier"
)

field_declaration <- (field_declaration) => uast(
    type: "Field",
    roles: "Member",
    children: "array_expression", "array_value", "assignment_expression", "binary_expression", "break_expression", "for_expression", "function_call", "identifier", "if_expression", "integer_literal", "let_expression", "meta_cast", "meta_expression", "meta_lvalue", "meta_type_identifier", "method_call", "new_expression", "nil_literal", "record_expression", "record_value", "sequence_expression", "string_literal", "type_identifier", "unary_expression", "while_expression"
)

for_expression <- (for_expression) => uast(
    type: "Loop",
    roles: "Loop",
    children: "array_expression", "array_value", "assignment_expression", "binary_expression", "break_expression", "for_expression", "function_call", "identifier", "if_expression", "integer_literal", "let_expression", "meta_cast", "meta_expression", "meta_lvalue", "method_call", "new_expression", "nil_literal", "record_expression", "record_value", "sequence_expression", "string_literal", "unary_expression", "while_expression"
)

function_call <- (function_call) => uast(
    type: "Function",
    roles: "Function", "Declaration",
    children: "array_expression", "array_value", "assignment_expression", "binary_expression", "break_expression", "for_expression", "function_call", "identifier", "if_expression", "integer_literal", "let_expression", "meta_cast", "meta_expression", "meta_lvalue", "method_call", "new_expression", "nil_literal", "record_expression", "record_value", "sequence_expression", "string_literal", "unary_expression", "while_expression"
)

function_declaration <- (function_declaration) => uast(
    type: "Function",
    roles: "Function", "Declaration",
    children: "array_expression", "array_value", "assignment_expression", "binary_expression", "break_expression", "for_expression", "function_call", "identifier", "if_expression", "integer_literal", "let_expression", "meta_cast", "meta_expression", "meta_lvalue", "meta_type_identifier", "method_call", "new_expression", "nil_literal", "parameters", "record_expression", "record_value", "sequence_expression", "string_literal", "type_identifier", "unary_expression", "while_expression"
)

if_expression <- (if_expression) => uast(
    type: "If",
    children: "array_expression", "array_value", "assignment_expression", "binary_expression", "break_expression", "for_expression", "function_call", "identifier", "if_expression", "integer_literal", "let_expression", "meta_cast", "meta_expression", "meta_lvalue", "method_call", "new_expression", "nil_literal", "record_expression", "record_value", "sequence_expression", "string_literal", "unary_expression", "while_expression"
)

import_declaration <- (import_declaration) => uast(
    type: "Import",
    roles: "Import",
    children: "string_literal"
)

let_expression <- (let_expression) => uast(
    type: "Synthetic",
    children: "array_expression", "array_value", "assignment_expression", "binary_expression", "break_expression", "class_declaration", "for_expression", "function_call", "function_declaration", "identifier", "if_expression", "import_declaration", "integer_literal", "let_expression", "meta_cast", "meta_chunks", "meta_expression", "meta_lvalue", "method_call", "new_expression", "nil_literal", "primitive_declaration", "record_expression", "record_value", "sequence_expression", "string_literal", "type_declaration", "unary_expression", "variable_declaration", "while_expression"
)

meta_cast <- (meta_cast) => uast(
    type: "Cast",
    children: "array_expression", "array_type", "array_value", "assignment_expression", "binary_expression", "break_expression", "class_type", "for_expression", "function_call", "identifier", "if_expression", "integer_literal", "let_expression", "meta_cast", "meta_expression", "meta_lvalue", "method_call", "new_expression", "nil_literal", "record_expression", "record_type", "record_value", "sequence_expression", "string_literal", "type_alias", "unary_expression", "while_expression"
)

meta_chunks <- (meta_chunks) => uast(
    type: "Synthetic",
    children: "integer_literal"
)

meta_expression <- (meta_expression) => uast(
    type: "Synthetic",
    children: "integer_literal"
)

meta_lvalue <- (meta_lvalue) => uast(
    type: "Synthetic",
    children: "integer_literal"
)

meta_type_identifier <- (meta_type_identifier) => uast(
    type: "If"
)

method_call <- (method_call) => uast(
    type: "Method",
    roles: "Function", "Declaration", "Member",
    children: "array_expression", "array_value", "assignment_expression", "binary_expression", "break_expression", "for_expression", "function_call", "identifier", "if_expression", "integer_literal", "let_expression", "meta_cast", "meta_expression", "meta_lvalue", "method_call", "new_expression", "nil_literal", "record_expression", "record_value", "sequence_expression", "string_literal", "unary_expression", "while_expression"
)

method_declaration <- (method_declaration) => uast(
    type: "Method",
    roles: "Function", "Declaration", "Member",
    children: "array_expression", "array_value", "assignment_expression", "binary_expression", "break_expression", "for_expression", "function_call", "identifier", "if_expression", "integer_literal", "let_expression", "meta_cast", "meta_expression", "meta_lvalue", "meta_type_identifier", "method_call", "new_expression", "nil_literal", "parameters", "record_expression", "record_value", "sequence_expression", "string_literal", "type_identifier", "unary_expression", "while_expression"
)

new_expression <- (new_expression) => uast(
    type: "Synthetic",
    children: "meta_type_identifier", "type_identifier"
)

parameters <- (parameters) => uast(
    type: "Parameter",
    roles: "Parameter",
    children: "identifier", "meta_type_identifier", "type_identifier"
)

primitive_declaration <- (primitive_declaration) => uast(
    type: "Synthetic",
    children: "identifier", "meta_type_identifier", "parameters", "type_identifier"
)

record_expression <- (record_expression) => uast(
    type: "Synthetic",
    children: "array_expression", "array_value", "assignment_expression", "binary_expression", "break_expression", "field_identifier", "for_expression", "function_call", "identifier", "if_expression", "integer_literal", "let_expression", "meta_cast", "meta_expression", "meta_lvalue", "meta_type_identifier", "method_call", "new_expression", "nil_literal", "record_expression", "record_value", "sequence_expression", "string_literal", "type_identifier", "unary_expression", "while_expression"
)

record_type <- (record_type) => uast(
    type: "Synthetic",
    children: "field_identifier", "meta_type_identifier", "type_identifier"
)

record_value <- (record_value) => uast(
    type: "Synthetic",
    children: "array_value", "field_identifier", "identifier", "meta_lvalue", "record_value"
)

sequence_expression <- (sequence_expression) => uast(
    type: "Synthetic"
)

source_file <- (source_file) => uast(
    type: "Synthetic"
)

string_literal <- (string_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

type_alias <- (type_alias) => uast(
    type: "Synthetic"
)

type_declaration <- (type_declaration) => uast(
    type: "Synthetic",
    children: "array_type", "class_type", "identifier", "record_type", "type_alias"
)

unary_expression <- (unary_expression) => uast(
    type: "Synthetic",
    children: "array_expression", "array_value", "assignment_expression", "binary_expression", "break_expression", "for_expression", "function_call", "identifier", "if_expression", "integer_literal", "let_expression", "meta_cast", "meta_expression", "meta_lvalue", "method_call", "new_expression", "nil_literal", "operator", "record_expression", "record_value", "sequence_expression", "string_literal", "unary_expression", "while_expression"
)

variable_declaration <- (variable_declaration) => uast(
    type: "Variable",
    roles: "Variable", "Declaration",
    children: "array_expression", "array_value", "assignment_expression", "binary_expression", "break_expression", "for_expression", "function_call", "identifier", "if_expression", "integer_literal", "let_expression", "meta_cast", "meta_expression", "meta_lvalue", "meta_type_identifier", "method_call", "new_expression", "nil_literal", "record_expression", "record_value", "sequence_expression", "string_literal", "type_identifier", "unary_expression", "while_expression"
)

while_expression <- (while_expression) => uast(
    type: "Loop",
    roles: "Loop",
    children: "array_expression", "array_value", "assignment_expression", "binary_expression", "break_expression", "for_expression", "function_call", "identifier", "if_expression", "integer_literal", "let_expression", "meta_cast", "meta_expression", "meta_lvalue", "method_call", "new_expression", "nil_literal", "record_expression", "record_value", "sequence_expression", "string_literal", "unary_expression", "while_expression"
)

_cast <- (_cast) => uast(
    type: "Cast"
)

_chunks <- (_chunks) => uast(
    type: "Synthetic"
)

_exp <- (_exp) => uast(
    type: "Synthetic"
)

_lvalue <- (_lvalue) => uast(
    type: "Synthetic"
)

_namety <- (_namety) => uast(
    type: "Synthetic"
)

array <- (array) => uast(
    type: "Synthetic"
)

break_expression <- (break_expression) => uast(
    type: "Break",
    roles: "Break"
)

class <- (class) => uast(
    type: "Class",
    roles: "Class", "Declaration"
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
)

do <- (do) => uast(
    type: "Synthetic"
)

else <- (else) => uast(
    type: "Synthetic"
)

end <- (end) => uast(
    type: "Synthetic"
)

escape_sequence <- (escape_sequence) => uast(
    type: "Synthetic"
)

extends <- (extends) => uast(
    type: "Synthetic"
)

field_identifier <- (field_identifier) => uast(
    type: "If"
)

for <- (for) => uast(
    type: "Loop",
    roles: "Loop"
)

function <- (function) => uast(
    type: "Function",
    roles: "Function", "Declaration"
)

identifier <- (identifier) => uast(
    type: "If"
)

if <- (if) => uast(
    type: "If"
)

import <- (import) => uast(
    type: "Import",
    roles: "Import"
)

in <- (in) => uast(
    type: "Synthetic"
)

integer_literal <- (integer_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

let <- (let) => uast(
    type: "Synthetic"
)

method <- (method) => uast(
    type: "Method",
    roles: "Function", "Declaration", "Member"
)

new <- (new) => uast(
    type: "Synthetic"
)

nil_literal <- (nil_literal) => uast(
    type: "Literal",
    roles: "Literal"
)

of <- (of) => uast(
    type: "Synthetic"
)

operator <- (operator) => uast(
    type: "Synthetic"
)

primitive <- (primitive) => uast(
    type: "Synthetic"
)

then <- (then) => uast(
    type: "Synthetic"
)

to <- (to) => uast(
    type: "Synthetic"
)

type <- (type) => uast(
    type: "Synthetic"
)

type_identifier <- (type_identifier) => uast(
    type: "If"
)

var <- (var) => uast(
    type: "Synthetic"
)

while <- (while) => uast(
    type: "Loop",
    roles: "Loop"
)

