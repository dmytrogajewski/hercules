access <- (access) => uast(
    type: "Synthetic",
    children: []
)

args <- (args) => uast(
    type: "Synthetic",
    children: []
)

array <- (array) => uast(
    type: "Synthetic",
    children: []
)

assignment <- (assignment) => uast(
    type: "Assignment",
    roles: "Assignment"
    children: []
)

binary_expression <- (binary_expression) => uast(
    type: "Synthetic",
    children: []
)

boolean <- (boolean) => uast(
    type: "Synthetic",
    children: []
)

call_args <- (call_args) => uast(
    type: "Call",
    roles: "Call"
    children: []
)

code_block <- (code_block) => uast(
    type: "Block",
    roles: "Body"
    children: []
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
    children: []
)

condition <- (condition) => uast(
    type: "Synthetic",
    children: []
)

dict_entry <- (dict_entry) => uast(
    type: "Try",
    roles: "Try"
    children: []
)

dictionary <- (dictionary) => uast(
    type: "Dict",
    children: []
)

format_string <- (format_string) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

function_call <- (function_call) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

function_expression <- (function_expression) => uast(
    type: "Function",
    roles: "Function", "Declaration"
    children: []
)

if_statement <- (if_statement) => uast(
    type: "If",
    children: []
)

number <- (number) => uast(
    type: "Synthetic",
    children: []
)

plane_string <- (plane_string) => uast(
    type: "Synthetic",
    children: []
)

return_statement <- (return_statement) => uast(
    type: "Return",
    roles: "Return"
    children: []
)

source_file <- (source_file) => uast(
    type: "Synthetic",
    children: []
)

unary_expression <- (unary_expression) => uast(
    type: "Synthetic",
    children: []
)

while_loop <- (while_loop) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

and <- (and) => uast(
    type: "Synthetic",
    children: []
)

elif <- (elif) => uast(
    type: "If",
    children: []
)

else <- (else) => uast(
    type: "Synthetic",
    children: []
)

false <- (false) => uast(
    type: "Synthetic",
    children: []
)

identifier <- (identifier) => uast(
    type: "If",
    children: []
)

if <- (if) => uast(
    type: "If",
    children: []
)

not <- (not) => uast(
    type: "Synthetic",
    children: []
)

or <- (or) => uast(
    type: "Synthetic",
    children: []
)

return <- (return) => uast(
    type: "Return",
    roles: "Return"
    children: []
)

true <- (true) => uast(
    type: "Synthetic",
    children: []
)

while <- (while) => uast(
    type: "Loop",
    roles: "Loop"
    children: []
)

