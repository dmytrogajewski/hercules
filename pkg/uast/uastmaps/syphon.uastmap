arguments <- (arguments) => uast(
    type: "Synthetic"
)

array <- (array) => uast(
    type: "Synthetic"
)

assign <- (assign) => uast(
    type: "Synthetic",
    children: "array", "assign", "binary_operation", "call", "false", "float", "function", "identifier", "int", "map", "member", "none", "parentheses_expression", "string", "subscript", "true", "unary_operation"
)

binary_operation <- (binary_operation) => uast(
    type: "BinaryOp",
    roles: "Operator",
    children: "array", "assign", "binary_operation", "call", "false", "float", "function", "identifier", "int", "map", "member", "none", "parentheses_expression", "string", "subscript", "true", "unary_operation"
)

body <- (body) => uast(
    type: "Synthetic"
)

call <- (call) => uast(
    type: "Call",
    roles: "Call"
)

function <- (function) => uast(
    type: "Function",
    roles: "Function", "Declaration"
)

if <- (if) => uast(
    type: "If",
    children: "array", "assign", "binary_operation", "body", "call", "else", "false", "float", "function", "identifier", "if", "int", "map", "member", "none", "parentheses_expression", "string", "subscript", "true", "unary_operation"
)

map <- (map) => uast(
    type: "Synthetic"
)

member <- (member) => uast(
    type: "Synthetic",
    children: "array", "assign", "binary_operation", "call", "false", "float", "function", "identifier", "int", "map", "member", "none", "parentheses_expression", "string", "subscript", "true", "unary_operation"
)

module <- (module) => uast(
    type: "Module",
    roles: "Module"
)

pair <- (pair) => uast(
    type: "Synthetic",
    children: "array", "assign", "binary_operation", "call", "false", "float", "function", "identifier", "int", "map", "member", "none", "parentheses_expression", "string", "subscript", "true", "unary_operation"
)

parameters <- (parameters) => uast(
    type: "Parameter",
    roles: "Parameter"
)

parentheses_expression <- (parentheses_expression) => uast(
    type: "Synthetic"
)

return <- (return) => uast(
    type: "Return",
    roles: "Return"
)

string <- (string) => uast(
    type: "Synthetic"
)

subscript <- (subscript) => uast(
    type: "Synthetic",
    children: "array", "assign", "binary_operation", "call", "false", "float", "function", "identifier", "int", "map", "member", "none", "parentheses_expression", "string", "subscript", "true", "unary_operation"
)

unary_operation <- (unary_operation) => uast(
    type: "UnaryOp",
    roles: "Operator",
    children: "array", "assign", "binary_operation", "call", "false", "float", "function", "identifier", "int", "map", "member", "none", "parentheses_expression", "string", "subscript", "true", "unary_operation"
)

while <- (while) => uast(
    type: "Loop",
    roles: "Loop",
    children: "array", "assign", "binary_operation", "call", "false", "float", "function", "identifier", "int", "map", "member", "none", "parentheses_expression", "string", "subscript", "true", "unary_operation"
)

break <- (break) => uast(
    type: "Break",
    roles: "Break"
)

comment <- (comment) => uast(
    type: "Comment",
    roles: "Comment"
)

continue <- (continue) => uast(
    type: "Continue",
    roles: "Continue"
)

else <- (else) => uast(
    type: "Synthetic"
)

false <- (false) => uast(
    type: "Synthetic"
)

float <- (float) => uast(
    type: "Synthetic"
)

fn <- (fn) => uast(
    type: "Synthetic"
)

identifier <- (identifier) => uast(
    type: "If"
)

if <- (if) => uast(
    type: "If"
)

int <- (int) => uast(
    type: "Synthetic"
)

none <- (none) => uast(
    type: "Synthetic"
)

return <- (return) => uast(
    type: "Return",
    roles: "Return"
)

true <- (true) => uast(
    type: "Synthetic"
)

while <- (while) => uast(
    type: "Loop",
    roles: "Loop"
)

