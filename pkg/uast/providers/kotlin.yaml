language: kotlin
extensions:
- .kt
- .kts
parser: tree-sitter
mapping:
  source_file:
    type: File
    skip_if_empty: true
  function_declaration:
    type: Function
    roles:
    - Function
    - Declaration
    name:
      source: text
    children:
      - type: simple_identifier
      - type: function_value_parameters
        include_only:
          has_field: parameters
      - type: user_type
        include_only:
          has_field: return_type
      - type: function_body
  class_declaration:
    type: Class
    roles:
    - Class
    - Declaration
    name:
      source: text
    children:
      - type: type_identifier
      - type: primary_constructor
        include_only:
          has_field: parameters
      - type: class_body
        include_only:
          has_field: body
      - type: enum_class_body
        include_only:
          has_field: enum_entries


  object_declaration:
    type: Object
    roles:
    - Object
    - Declaration
    name:
      source: text
    children:
      - type: type_identifier
      - type: class_body
        include_only:
          has_field: body
  # For interfaces and enums, we need to detect them in the provider code
  # since Tree-sitter uses class_declaration for classes, interfaces, and enums
  # We'll need to add conditional logic in the provider to distinguish them
  simple_identifier:
    type: Identifier
    roles:
    - Name
    props:
      name: text
  function_value_parameters:
    type: ParameterList
  primary_constructor:
    type: ParameterList
  class_parameter:
    type: Parameter
    roles:
    - Parameter
    - Declaration
    name:
      source: text
    children:
      - type: simple_identifier
      - type: user_type
        include_only:
          has_field: type
  parameter:
    type: Parameter
    roles:
    - Parameter
    - Declaration
    name:
      source: text
    children:
      - type: simple_identifier
      - type: user_type
        include_only:
          has_field: type
  user_type:
    type: Type
    roles:
    - Type
    children:
      - type: type_identifier
  type_identifier:
    type: Identifier
    roles:
    - Name
    props:
      name: text
  class_body:
    type: Block
  enum_class_body:
    type: EnumList
  enum_entry:
    type: Identifier
    roles:
    - Name
    props:
      name: text
  function_body:
    type: Block
  statements:
    type: StatementList
  jump_expression:
    type: Return
    roles:
    - Return
  additive_expression:
    type: BinaryExpression
    roles:
    - Binary
  this_expression:
    type: Identifier
    roles:
    - Name
    props:
      name: text
  import_header:
    type: Import
    roles:
    - Import
  call_expression:
    type: Call
    roles:
    - Call
  string_literal:
    type: Literal
    roles:
    - Literal
  integer_literal:
    type: Literal
    roles:
    - Literal
  if_expression:
    type: If
  assignment:
    type: Assignment
    roles:
    - Assignment
  lambda_literal:
    type: Lambda
    roles:
    - Lambda
