language: perl
extensions:
- .pl
- .pm
parser: tree-sitter
mapping:
  source_file:
    type: File
    skip_if_empty: true
  block:
    type: Block
  subroutine_declaration_statement:
    type: Function
    roles:
      - Function
      - Declaration
    props:
      name: "descendant:bareword"
    token: "descendant:bareword"
    children:
      - block:
          type: Block
  method_declaration_statement:
    type: Method
    roles:
    - Method
    - Declaration
    props:
      name: Name
  class_statement:
    type: Class
    roles:
    - Class
    - Declaration
    props:
      name: Name
  role_statement:
    type: Interface
    roles:
    - Interface
    - Declaration
    props:
      name: Name
  package_statement:
    type: Module
    roles:
    - Module
    - Declaration
    props:
      name: Name
  use_statement:
    type: Import
    roles:
    - Import
  return_expression:
    type: Return
  return_statement:
    type: Return
  interpolated_string_literal:
    type: Literal
    roles:
      - Literal
    token: "descendant:string_content"
  string_literal:
    type: Literal
    roles:
      - Literal
    token: text
  string:
    type: Literal
    roles:
      - Literal
    token: text
  binary_expression:
    type: BinaryExpression
    roles:
      - Binary
  infix_expression:
    type: BinaryExpression
    roles:
      - Binary
  variable_declaration:
    type: ParameterList
    children:
      - scalar:
          type: Parameter
          roles:
            - Parameter
            - Declaration
          props:
            name: "descendant:varname"
          token: "descendant:varname"
  scalar:
    type: Identifier
    roles:
      - Name
    props:
      name: "descendant:varname"
    token: "descendant:varname"
  varname:
    type: Identifier
    roles:
      - Name
    props:
      name: text
    token: "self"
  array:
    type: List
  hash:
    type: Dict
  bareword:
    type: Identifier
    roles:
      - Name
    props:
      name: text
    token: "self"
    skip: true
  comment:
    type: Comment
    roles:
    - Comment
  for_statement:
    type: For
    roles:
    - Loop
