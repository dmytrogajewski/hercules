syntax = "proto3";

package hercules.v1;

option go_package = "github.com/dmytrogajewski/hercules/internal/pb;pb";

import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";

// Hercules gRPC Service
service HerculesService {
  // Health check endpoint
  rpc Health(HealthRequest) returns (HealthResponse);
  
  // List available analysis types
  rpc ListAnalyses(ListAnalysesRequest) returns (ListAnalysesResponse);
  
  // Submit an analysis request
  rpc SubmitAnalysis(SubmitAnalysisRequest) returns (SubmitAnalysisResponse);
  
  // Check analysis status
  rpc GetAnalysisStatus(GetAnalysisStatusRequest) returns (GetAnalysisStatusResponse);
  
  // Stream analysis progress (optional)
  rpc StreamAnalysisProgress(StreamAnalysisProgressRequest) returns (stream StreamAnalysisProgressResponse);
}

// Health check request
message HealthRequest {}

// Health check response
message HealthResponse {
  string status = 1;
  google.protobuf.Timestamp timestamp = 2;
  int32 version = 3;
  string hash = 4;
  map<string, string> config = 5;
}

// List analyses request
message ListAnalysesRequest {}

// Analysis type information
message AnalysisType {
  string name = 1;
  string description = 2;
  repeated string options = 3;
}

// List analyses response
message ListAnalysesResponse {
  repeated AnalysisType analyses = 1;
  google.protobuf.Timestamp timestamp = 2;
}

// Submit analysis request
message SubmitAnalysisRequest {
  string repository = 1;
  repeated string analyses = 2;
  map<string, string> options = 3;
}

// Submit analysis response
message SubmitAnalysisResponse {
  string status = 1;
  string message = 2;
  string job_id = 3;
  google.protobuf.Timestamp timestamp = 4;
}

// Get analysis status request
message GetAnalysisStatusRequest {
  string job_id = 1;
}

// Analysis result
message AnalysisResult {
  string name = 1;
  string description = 2;
  string result_type = 3;
  google.protobuf.Any data = 4;
}

// Get analysis status response
message GetAnalysisStatusResponse {
  string status = 1;
  string message = 2;
  string job_id = 3;
  google.protobuf.Timestamp start_time = 4;
  google.protobuf.Timestamp end_time = 5;
  map<string, AnalysisResult> results = 6;
  google.protobuf.Timestamp timestamp = 7;
}

// Stream analysis progress request
message StreamAnalysisProgressRequest {
  string job_id = 1;
}

// Stream analysis progress response
message StreamAnalysisProgressResponse {
  string job_id = 1;
  string status = 2;
  string message = 3;
  int32 progress_percent = 4;
  google.protobuf.Timestamp timestamp = 5;
} 